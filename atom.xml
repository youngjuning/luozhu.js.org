<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>洛竹的博客</title>
  
  <subtitle>真理无穷，一寸欢喜。</subtitle>
  <link href="https://youngjuning.js.org/atom.xml" rel="self"/>
  
  <link href="https://youngjuning.js.org/"/>
  <updated>2023-02-26T03:10:50.583Z</updated>
  <id>https://youngjuning.js.org/</id>
  
  <author>
    <name>洛竹</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何优化 Google Adsense CPC 提高广告收入</title>
    <link href="https://youngjuning.js.org/eb41c253cbae/"/>
    <id>https://youngjuning.js.org/eb41c253cbae/</id>
    <published>2023-02-24T15:58:16.000Z</published>
    <updated>2023-02-26T03:10:50.583Z</updated>
    
    <content type="html"><![CDATA[<p>作为一个技术博客的博主，我一直在寻找提高 Google Adsense CPC 的方法，因为 CPC 是 Adsense 的收入来源，所以 CPC 越高，收入越多。本文就将介绍如何提高 Google Adsense CPC。</p><h1 id="CPC-是什么"><a href="#CPC-是什么" class="headerlink" title="CPC 是什么"></a>CPC 是什么</h1><p>每次点击费用 (CPC，Cost Per Click) 是每次用户点击您的广告时您赚取的金额，即单价。任何广告的 CPC 均由广告商确定；一些广告商可能愿意为每次点击支付比其他人更多的费用，这取决于他们宣传的内容。</p><h2 id="CTR-vs-CPC"><a href="#CTR-vs-CPC" class="headerlink" title="CTR vs CPC"></a>CTR vs CPC</h2><p>对于标准广告，广告点击率 (CTR，Clickthrough Rate) 是指广告的点击次数与其展示次数的比值。例如，如果您的广告通过 1000 次广告展示获得了 5 次点击，则您的广告点击率为 0.5%。</p><p>CTR 固然重要，但是如果你的单价很低，那么你的收入也会很低。因此，某种意义上来说 CPC 的优化是比 CTR 更紧迫的，前期没有大流量的情况下，CPC 尤其重要。</p><h1 id="影响-CPC-的几个因素"><a href="#影响-CPC-的几个因素" class="headerlink" title="影响 CPC 的几个因素"></a>影响 CPC 的几个因素</h1><ul><li>市场趋势：比如学生暑假、雨伞卖家、羽绒服等等。你可以通过 Google Trends 和 Google Adsense 的报告来查看市场趋势。</li><li>屏蔽控制：可以屏蔽一些敏感类别，注意不能屏蔽太多，否则会影响广告收入。</li><li>广告单元尺寸：将固定尺寸的广告单元替换为自适应尺寸的广告单元。<br><img src="https://cdn.jsdelivr.net/gh/youngjuning/images@main/1677292096541.png" alt="Google Adsense 广告单元尺寸"></li><li>主题(关键字)：你要选择一些高CPC的主题去经营你的博客。</li><li>内容：你必须写一些可以回答读者查询的内容。因此，在撰写博客之前，请尝试查找读者在互联网上搜索的内容，然后尝试向他们提供解决方案。请记住，您应该始终直接与读者互动。</li><li>区域：可以提高单价(CPC)的最重要因素之一就是您要定位的国家&#x2F;地区。例如，点击来自美国的广告可以支付高达2美元到3美元的费用，点击来自印度的同一广告最终只能支付20到30美分。</li><li>图文形式：图片广告在点击率较​​高(CTR)方面表现较好，但每次点击费用(CPC)不如文字广告效果好。</li><li>位置：在博文中放置 2 个广告，在帖子外放置 1 个广告。至于放置内部然后在标题下方的博客顶部放置一个广告，并在博客帖子之间放置第二个广告。剩余的一个广告可以放在您帖子外面的右侧。最高点击次数和更高每次点击费用将来自博客帖子中的 2 个广告，尤其是在顶部。</li></ul><h1 id="高-CPC-关键词"><a href="#高-CPC-关键词" class="headerlink" title="高 CPC 关键词"></a>高 CPC 关键词</h1><ol><li>保险（Insurance）：$61 CPC</li><li>燃气&#x2F;电力（Gas&#x2F;Electricity）：$58 CPC</li><li>贷款（Loans）：$50 CPC</li><li>律师（Attorney）：$48 CPC</li><li>抵押（Mortgage）：$46 CPC</li><li>律师（Lawyer）：$42 CPC</li><li>捐助（Donate）：$42 CPC</li><li>电话会议（Conference Call）：$42 CPC</li></ol><p>上面列的不一定符合博客的主题，这里列出一些其他高回报率的主题(关键字)，我按照CPC递减的顺序进行排列：</p><ul><li>域名 – 互联网域名博客像GoDaddy，Namecheap 等。它支付最高的CPC；</li><li>电子产品(Gadgets) – 比如苹果类的科技电子产品</li><li>GOOGLE – GOOGLE产品</li><li>微软产品 – 微软办公类产品</li><li>数字加密货币</li></ul><blockquote><p>注意：约会和浪漫 CPC 最低</p></blockquote><h1 id="屏蔽控制功能"><a href="#屏蔽控制功能" class="headerlink" title="屏蔽控制功能"></a>屏蔽控制功能</h1><p>善用该功能可以确保所展示的广告不会影响您的品牌形象，这些工具可以帮助您在网站上提供最佳广告体验。我们最关心当然还是如何帮助提高 CPC。</p><h2 id="广告客户网址"><a href="#广告客户网址" class="headerlink" title="广告客户网址"></a>广告客户网址</h2><p>该功能用以屏蔽由具体广告客户投放的广告，可以通过下面的方式访问：</p><p><img src="https://cdn.jsdelivr.net/gh/youngjuning/images@main/1677287023394.png" alt="Google Adsense 广告客户网址"></p><p>然后将下面的网址添加到屏蔽列表中：</p><p><img src="https://cdn.jsdelivr.net/gh/youngjuning/images@main/1677287190848.png" alt="Google Adsense 低 CPC 广告客户网站"></p><blockquote><p>注意：复制后需要删除最后的版权信息再粘贴到屏蔽列表中。</p></blockquote><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br></pre></td><td class="code"><pre><span class="line">9-topsites.com,</span><br><span class="line">8-topwebsites.com,</span><br><span class="line">8-topsitespro.com,</span><br><span class="line">8-topsites.com,</span><br><span class="line">8-topsites.com,</span><br><span class="line">8-bestsites.com,</span><br><span class="line">8-bestsites.com,</span><br><span class="line">7-bestsites.com,</span><br><span class="line">50webs.com,</span><br><span class="line">5-top-sites.com,</span><br><span class="line">4321.co.il,</span><br><span class="line">4-you.com,</span><br><span class="line">3-sites.com,</span><br><span class="line">2itb.com,</span><br><span class="line">25-bestsites.com,</span><br><span class="line">2020ok.com,</span><br><span class="line">2020ok.com,</span><br><span class="line">2000ringtones.com,</span><br><span class="line">1step1.info,</span><br><span class="line">1st-portal.net,</span><br><span class="line">1st-lingerie.net,</span><br><span class="line">1st-home-business.com,</span><br><span class="line">1st-free-article.com,</span><br><span class="line">1s.md,</span><br><span class="line">1homeshopping.info,</span><br><span class="line">1click.com,</span><br><span class="line">17173pic.com,</span><br><span class="line">12-topsites.com,</span><br><span class="line">12-bestsites.com,</span><br><span class="line">10sites.com,</span><br><span class="line">10bonusringtones.com,</span><br><span class="line">101soho.com,</span><br><span class="line">zimply.com,</span><br><span class="line">zabasearch.com,</span><br><span class="line">yourlinktofreedom.com,</span><br><span class="line">yourinfoon.info,</span><br><span class="line">yahoo.com,</span><br><span class="line">xtraone.co.uk,</span><br><span class="line">xdope.com,</span><br><span class="line">www.worldslastchance.com,</span><br><span class="line">www.2itb.com,</span><br><span class="line">www.10-bestsites.com,</span><br><span class="line">www-picture.com,</span><br><span class="line">wwitv.com,</span><br><span class="line">worldslastchance.com,</span><br><span class="line">worldslastchance.com,</span><br><span class="line">world-click.com,</span><br><span class="line">wisegeek.com,</span><br><span class="line">wisegeek.com,</span><br><span class="line">windingroad.com,</span><br><span class="line">wilddreams.org,</span><br><span class="line">webzsearch.com,</span><br><span class="line">website-savvy.com,</span><br><span class="line">websearch360.net,</span><br><span class="line">webfinder360.com,</span><br><span class="line">vote-america.org,</span><br><span class="line">vivajordan.net,</span><br><span class="line">viralshock.com,</span><br><span class="line">videosstreaming.info,</span><br><span class="line">vertippdich.de,</span><br><span class="line">usnom.com,</span><br><span class="line">usefulfaqs.com,</span><br><span class="line">unlimitedmusic2download.com,</span><br><span class="line">uaeclassifieds.net,</span><br><span class="line">u-i-x.com,</span><br><span class="line">tv-channel.be,</span><br><span class="line">tunu.com,</span><br><span class="line">truelocal.com,</span><br><span class="line">trimdontimes.co.uk,</span><br><span class="line">tribalddb.co.in,</span><br><span class="line">tradernick.net,</span><br><span class="line">tracks.com,</span><br><span class="line">toseeka.com,</span><br><span class="line">toptensites.org,</span><br><span class="line">topsecrettraining.com,</span><br><span class="line">topbestsites.org,</span><br><span class="line">topbeautysites.com,</span><br><span class="line">top8sites.com,</span><br><span class="line">top4sites.net,</span><br><span class="line">top4search.net,</span><br><span class="line">top4search.com,</span><br><span class="line">top10websites.net,</span><br><span class="line">top-articles-house.com,</span><br><span class="line">top-3-sites.com,</span><br><span class="line">top-10sites.com,</span><br><span class="line">tools4myspace.com,</span><br><span class="line">tips2info.com,</span><br><span class="line">tipace.com,</span><br><span class="line">tip4girl.com,</span><br><span class="line">tinyurl.com,</span><br><span class="line">thinktarget.com,</span><br><span class="line">thextremehosting.com,</span><br><span class="line">thebabydepartment.com,</span><br><span class="line">thaaly.com,</span><br><span class="line">ternet.com,</span><br><span class="line">teachandtravel.net,</span><br><span class="line">sureresult.com,</span><br><span class="line">superpages.com,</span><br><span class="line">successuniversity.com,</span><br><span class="line">successuniversity.com,</span><br><span class="line">stylinonline.com,</span><br><span class="line">starware.com,</span><br><span class="line">starware.com,</span><br><span class="line">software-finder.org,</span><br><span class="line">smmsite.com,</span><br><span class="line">smartsontap.com,</span><br><span class="line">smartsharing.net,</span><br><span class="line">smarter.com,</span><br><span class="line">sitesell.com,</span><br><span class="line">sites.com,</span><br><span class="line">sincefeel.com,</span><br><span class="line">sin32.cn,</span><br><span class="line">simpli.com,</span><br><span class="line">shopzilla.com,</span><br><span class="line">shoppingare.blogspot.com,</span><br><span class="line">shopping.com,</span><br><span class="line">shopping.com,</span><br><span class="line">shopo.tv,</span><br><span class="line">shopica.com,</span><br><span class="line">sharemusic.org,</span><br><span class="line">shafi1.blospot.com,</span><br><span class="line">serdakowski.com,</span><br><span class="line">seniorpeoplemeet.com,</span><br><span class="line">selfhelprefer.com,</span><br><span class="line">seek4me.org,</span><br><span class="line">secretsatellite.com,</span><br><span class="line">searchwisp.com,</span><br><span class="line">searchtorpedo.com,</span><br><span class="line">searchscribe.com,</span><br><span class="line">searchinaflash.com,</span><br><span class="line">searchinaflash.com,</span><br><span class="line">searchignite.com,</span><br><span class="line">searchguide.biz,</span><br><span class="line">searchemu.com,</span><br><span class="line">screensavers.com,</span><br><span class="line">scholarshipnet.info,</span><br><span class="line">savvygate.com,</span><br><span class="line">rxvn.com,</span><br><span class="line">rw2006.com,</span><br><span class="line">ru2006.com,</span><br><span class="line">romingerlegal.com,</span><br><span class="line">ringtonemusic.info,</span><br><span class="line">ringringmobile.com,</span><br><span class="line">ringringmobile.com,</span><br><span class="line">rides.com,</span><br><span class="line">richesse-succes-sante.com,</span><br><span class="line">reviewsbykrystal.com,</span><br><span class="line">results.com,</span><br><span class="line">resourcemecca.com,</span><br><span class="line">rebrandsoftware.com,</span><br><span class="line">realmusiccatalog.com,</span><br><span class="line">ratedsolutions.com,</span><br><span class="line">r.com,</span><br><span class="line">quotematch.com,</span><br><span class="line">quiksrv.com,</span><br><span class="line">qckjmp.com,</span><br><span class="line">qckjmp.com,</span><br><span class="line">purityplanet.com,</span><br><span class="line">puredirectory.com,</span><br><span class="line">purebusiness.com,</span><br><span class="line">purchasepro.org,</span><br><span class="line">proxyexplorer.co.cc,</span><br><span class="line">pronto.com,</span><br><span class="line">profilevideos.net,</span><br><span class="line">professionaladvices.com,</span><br><span class="line">professionaladvices.com,</span><br><span class="line">pricegrabber.com,</span><br><span class="line">price.com,</span><br><span class="line">preisvergleich.de,</span><br><span class="line">precious-articles.com,</span><br><span class="line">powerfulmoney.info,</span><br><span class="line">popularq.com,</span><br><span class="line">pimpmyride.com,</span><br><span class="line"></span><br><span class="line">pimpingyourspace.com,</span><br><span class="line">picturetoplist.com,</span><br><span class="line">pictures88.com,</span><br><span class="line">pictures88.com,</span><br><span class="line">photos.com,</span><br><span class="line">perrymarshall.com,</span><br><span class="line">paltalk.com,</span><br><span class="line">otelevision.info,</span><br><span class="line">onpointhealth.com,</span><br><span class="line">online.com,</span><br><span class="line">oninformation.com,</span><br><span class="line">oneinvestment.co.uk,</span><br><span class="line">on.com,</span><br><span class="line">on.biz,</span><br><span class="line">offthehook-ringtones.com,</span><br><span class="line">offer.com,</span><br><span class="line">oceleb.com,</span><br><span class="line">nternet.com,</span><br><span class="line">nextag.com,</span><br><span class="line">net-vids.net,</span><br><span class="line">mywebgold.com,</span><br><span class="line">myonlinearcade.net,</span><br><span class="line">mymusicinc.com,</span><br><span class="line">myluxuryyachtcharter.com,</span><br><span class="line">myluxuryyacht.com,</span><br><span class="line">mylot.us,</span><br><span class="line">mylot.us,</span><br><span class="line">mylot.info,</span><br><span class="line">mylot.com,</span><br><span class="line">mylot.com,</span><br><span class="line">mylot.cc,</span><br><span class="line">mykindaplace.com,</span><br><span class="line">myipodownloads.com,</span><br><span class="line">mybeachweddinginmauritius.blogspot.com,</span><br><span class="line">mybasement.org,</span><br><span class="line">myartexpressions.com,</span><br><span class="line">my-free-music.com,</span><br><span class="line">musicvideosunlimited.net,</span><br><span class="line">mqsearch.co.uk,</span><br><span class="line">mqsearch.co.uk,</span><br><span class="line">mpfree.com,</span><br><span class="line">mpfree.com,</span><br><span class="line">mp3review.biz,</span><br><span class="line">mp3musiq.com,</span><br><span class="line">mp3musiq.com,</span><br><span class="line">mp3-downloading.net,</span><br><span class="line">mozsite.com,</span><br><span class="line">movieadvanced.com,</span><br><span class="line">movieadvanced.com,</span><br><span class="line">morpheusultra.com,</span><br><span class="line">morpheusultra.com,</span><br><span class="line">monstermarketplace.com,</span><br><span class="line">monstermarketplace.com,</span><br><span class="line">mono-poly-ringtones.com,</span><br><span class="line">money4u-jobcareer4u.blogspot.com,</span><br><span class="line">mobilecontentplus.com,</span><br><span class="line">mobifun.fr,</span><br><span class="line">megasearch.biz,</span><br><span class="line">medkuz.com,</span><br><span class="line">medicalhelpers.com,</span><br><span class="line">mediataskmaster.com,</span><br><span class="line">mediaplex.com,</span><br><span class="line">mediabyslice.com,</span><br><span class="line">masud.atbhost.net,</span><br><span class="line">make-money-with-inet.blogspot.com,</span><br><span class="line">lu8.org,</span><br><span class="line">logmein.com,</span><br><span class="line">local.com,</span><br><span class="line">livrespourtous.com,</span><br><span class="line">latesttvdownloads.com,</span><br><span class="line">lagreenteam.com,</span><br><span class="line">lagrandt.com,</span><br><span class="line">knowmuch.com,</span><br><span class="line">knowledgestorm.com,</span><br><span class="line">knowledgestorm.com,</span><br><span class="line">kings.com,</span><br><span class="line">kagakribet.com,</span><br><span class="line">k-litetk.com,</span><br><span class="line">jumptv.com,</span><br><span class="line">jump.com,</span><br><span class="line">ivue.com,</span><br><span class="line">ivillage.com,</span><br><span class="line">isn.com,</span><br><span class="line">ipoddownloads.com,</span><br><span class="line">ipoddownloadreview.com,</span><br><span class="line">ipodblog.org,</span><br><span class="line">invent-pro.com,</span><br><span class="line">internet-downloads.net,</span><br><span class="line">insanejournal.com,</span><br><span class="line">innsurance.us,</span><br><span class="line">inhunt.com,</span><br><span class="line">infosearch4u.com,</span><br><span class="line">infoscouts.com,</span><br><span class="line">infoforyourhealth.com,</span><br><span class="line">infobeagle.com,</span><br><span class="line">info.com,</span><br><span class="line">info.com,</span><br><span class="line">info-on.biz,</span><br><span class="line">indeed.com,</span><br><span class="line">incentiverewardcenter.com,</span><br><span class="line">incentiveleader.com,</span><br><span class="line">imusic-downloads.com,</span><br><span class="line">hosted4me.com,</span><br><span class="line">hiphopruckus.com,</span><br><span class="line">hi5gratis.com,</span><br><span class="line">heavenofsoftware.blogspot.com,</span><br><span class="line">healthline.com,</span><br><span class="line">guildwars-hispano.com,</span><br><span class="line">gotrinigo.com,</span><br><span class="line">gothomepages.com,</span><br><span class="line">googlepages.com,</span><br><span class="line">go.com,</span><br><span class="line">globalsources.com,</span><br><span class="line">giantexplorer.com,</span><br><span class="line">getworldpassport.com,</span><br><span class="line">getsongsnow.com,</span><br><span class="line">getmusicfree-jump.com,</span><br><span class="line">getfreemusic.org,</span><br><span class="line">getanysong.com,</span><br><span class="line">geekbidder.com,</span><br><span class="line">gdn-invest.com,</span><br><span class="line">gametap.com,</span><br><span class="line">funtripguides.com,</span><br><span class="line">fs126.go3.icpcn.com,</span><br><span class="line">friendcircles.com,</span><br><span class="line">freeze.com,</span><br><span class="line">freewebs.com,</span><br><span class="line">freetvarchive.org,</span><br><span class="line">freemusiq.com,</span><br><span class="line">freelanceworkexchange.com,</span><br><span class="line">freelancerprojects.com,</span><br><span class="line">freeipodplayers.com,</span><br><span class="line">freehostia.com,</span><br><span class="line">freeforex.org,</span><br><span class="line">freebiefinder.org,</span><br><span class="line">free-ringtones-now.net,</span><br><span class="line">free-ringtones-4u.net,</span><br><span class="line">free-ringtones-4all.net,</span><br><span class="line">free-pictures-photos.com,</span><br><span class="line">free-phone-ringtone.com,</span><br><span class="line">fored.co.uk,</span><br><span class="line">findmyringtones.com,</span><br><span class="line">filthyrichtips.com,</span><br><span class="line">familytravelfun.com,</span><br><span class="line">family-offer.com,</span><br><span class="line">ez-tracks.com,</span><br><span class="line">excelsiorweddingservices.com,</span><br><span class="line">everyclick.com,</span><br><span class="line">ethioclips.com,</span><br><span class="line">esnips.com,</span><br><span class="line">edmunds.com,</span><br><span class="line">edigitalphotoalbum.com,</span><br><span class="line">edigitalphoto.info,</span><br><span class="line">ecomputerwallpaper.com,</span><br><span class="line">ebosa.com,</span><br><span class="line">ebay.ph,</span><br><span class="line">ebay.it,</span><br><span class="line">ebay.in,</span><br><span class="line">ebay.de,</span><br><span class="line">ebay.com.my,</span><br><span class="line">ebay.com.au,</span><br><span class="line">ebay.com.au,</span><br><span class="line">ebay.com.au,</span><br><span class="line">ebay.com,</span><br><span class="line">ebay.com,</span><br><span class="line">ebay.com,</span><br><span class="line">ebay.co.uk,</span><br><span class="line">ebay.co.uk,</span><br><span class="line">ebay.co.uk,</span><br><span class="line">earnings-splits-ipo.com,</span><br><span class="line">eantispyware.info,</span><br><span class="line">eanimationschools.com,</span><br><span class="line">e-softwaresource.com,</span><br><span class="line">e-nternet.com,</span><br><span class="line">e-isn.com,</span><br><span class="line">dry-skin-care-guide.com,</span><br><span class="line">dry-skin-care-guide.com,</span><br><span class="line">dropshots.com,</span><br><span class="line">drift-kings.com,</span><br><span class="line">drea-aliveandthinking.blogpsot.com,</span><br><span class="line">dpdigest.com,</span><br><span class="line">dpbolvw.net,</span><br><span class="line">downtown-internet.com,</span><br><span class="line">downloads.net,</span><br><span class="line">downloads.net,</span><br><span class="line">downloadrings.com,</span><br><span class="line">downloadlegal.com,</span><br><span class="line">download.com,</span><br><span class="line">download-hub.com,</span><br><span class="line">doodlekit.com,</span><br><span class="line">discussit.biz,</span><br><span class="line">dirkw.com,</span><br><span class="line">direct-tones.com,</span><br><span class="line">digitaljuice.com,</span><br><span class="line">digg4it.com,</span><br><span class="line">dexigner.com,</span><br><span class="line">devhub.com,</span><br><span class="line">dealtime.co.uk,</span><br><span class="line">dealtime.co.uk,</span><br><span class="line">dealsandoffers4u.com,</span><br><span class="line">dealersupplyonline.com,</span><br><span class="line">dbmoz.org,</span><br><span class="line">dbmoz.net,</span><br><span class="line">dailystartpage.com,</span><br><span class="line">dailycackle.com,</span><br><span class="line">cv2006.biz,</span><br><span class="line">cucirca.com,</span><br><span class="line">csimiamiweekend.com,</span><br><span class="line">crtropical.tv,</span><br><span class="line">cro-forumer.com,</span><br><span class="line">cosyproperty.com,</span><br><span class="line">copy-dvdz.com,</span><br><span class="line">coolstartpages.com,</span><br><span class="line">coolstartpages.com,</span><br><span class="line">coolringtones.com,</span><br><span class="line">consumersearch.com,</span><br><span class="line">consumersearch.com,</span><br><span class="line">consumerincentivepromotions.com,</span><br><span class="line">consumerincentivepromotions.com,</span><br><span class="line">compendianet.com,</span><br><span class="line">comparisonwarehouse.com,</span><br><span class="line">compare-to-choose.com,</span><br><span class="line">commerce-database.com,</span><br><span class="line">cnsale.com,</span><br><span class="line">clobo.com,</span><br><span class="line">clobo.com,</span><br><span class="line">clickbank.net,</span><br><span class="line">click.com,</span><br><span class="line">click-about.com,</span><br><span class="line">clear0.com,</span><br><span class="line">cjb.net,</span><br><span class="line">chosenresult.com,</span><br><span class="line">child-support-laws-state-by-state.com,</span><br><span class="line">cheatpizza.com,</span><br><span class="line">cheaptravelnetwork.com,</span><br><span class="line">chat-land.org,</span><br><span class="line">chasingstuff.com,</span><br><span class="line">ccfa.com,</span><br><span class="line">cc-dt.com,</span><br><span class="line">buymp3music.info,</span><br><span class="line">business.net,</span><br><span class="line">business-wiz.com,</span><br><span class="line">buscape.cl,</span><br><span class="line">brothersoft.com,</span><br><span class="line">bridesofdetroit.com,</span><br><span class="line">blurty.com,</span><br><span class="line">blogstream.com,</span><br><span class="line">blogspot.com,</span><br><span class="line">blogreaction.com,</span><br><span class="line">bloghi.com,</span><br><span class="line">blogfourmoney.blogspot.com,</span><br><span class="line">blogetery.com,</span><br><span class="line">blogdojeguebr.blogspot.com,</span><br><span class="line">blinkweb.com,</span><br><span class="line">blinkbits.com,</span><br><span class="line">bleach-video-series.blogspot.com,</span><br><span class="line">bittorrentsoftwaredownload.com,</span><br><span class="line">bikini4u.net,</span><br><span class="line">big.com,</span><br><span class="line">betterdeals.com,</span><br><span class="line">betterbusinessreviewsonline.org,</span><br><span class="line">betterbusinessreviews.org,</span><br><span class="line">bestwebpix.net,</span><br><span class="line">bestwebpix.com,</span><br><span class="line">bestwebdiscounts.com,</span><br><span class="line">bestsportingsites.com,</span><br><span class="line">bestringtonesoffer.com,</span><br><span class="line">bestringdownloads.com,</span><br><span class="line">bestpicture.org,</span><br><span class="line">besthomegardensites.net,</span><br><span class="line">bestcraftsites.net,</span><br><span class="line">bestcomputingsites.com,</span><br><span class="line">bestautosites.net,</span><br><span class="line">best8sites.org,</span><br><span class="line">best7sites.com,</span><br><span class="line">best5online.com,</span><br><span class="line">best4solutions.com,</span><br><span class="line">best4sites.net,</span><br><span class="line">best3websites.com,</span><br><span class="line">best10site.com,</span><br><span class="line">best-price.com,</span><br><span class="line">best-healthcare.com,</span><br><span class="line">bellaisa.org,</span><br><span class="line">beautiesedge.com,</span><br><span class="line">beat-adwords.com,</span><br><span class="line">atdmt.com,</span><br><span class="line">atdmt.com,</span><br><span class="line">at.com,</span><br><span class="line">asynloving.blogspot.com,</span><br><span class="line">ask.com,</span><br><span class="line">ask.com,</span><br><span class="line">asianhotgirls.blogspot.com,</span><br><span class="line">articlescafe.com,</span><br><span class="line">artbeat.cjb.net,</span><br><span class="line">aria-sharingplace.blogspot.com,</span><br><span class="line">areavoices.com,</span><br><span class="line">archivoscompartidos.com,</span><br><span class="line">archiveknowledge.com,</span><br><span class="line">arcaderockstar.com,</span><br><span class="line">aradaz.blogspot.com,</span><br><span class="line">aptmicro.com,</span><br><span class="line">aprido.com,</span><br><span class="line">apparelplace.net,</span><br><span class="line">answerstoday.com,</span><br><span class="line">anrdoezrs.net,</span><br><span class="line">angelfire.com,</span><br><span class="line">amazon.com,</span><br><span class="line">amazon.com,</span><br><span class="line">amazon.co.uk,</span><br><span class="line">alltheindustrials.com,</span><br><span class="line">allthebrands.co.uk,</span><br><span class="line">alltheautomotive.com,</span><br><span class="line">allpspgames.com,</span><br><span class="line">allpspgames.com,</span><br><span class="line">allinformationabout.com,</span><br><span class="line">allcoolmusic.com,</span><br><span class="line">all4download.blogspot.com,</span><br><span class="line">all-free-info.com,</span><br><span class="line">alibaba.com,</span><br><span class="line">advancedwebsearch.info,</span><br><span class="line">acne.com,</span><br><span class="line">aavalue.com,</span><br><span class="line">aavalue.com,</span><br></pre></td></tr></table></figure><h2 id="敏感类别"><a href="#敏感类别" class="headerlink" title="敏感类别"></a>敏感类别</h2><p>该功能用以根据您的受众群体，管理您网站上最适合展示的广告类型，禁用不适合您网站的广告类型。例如，您的网站可能包含有关性内容，但您不希望在网站上显示有关性广告。您可以在此处禁用这些广告类型。</p><p>这样做不仅可以帮助您遵守法律法规，还可以帮助您提高广告收入，下图是我禁用的一些类别。</p><p><img src="https://cdn.jsdelivr.net/gh/youngjuning/images@main/1677288027340.png" alt="Google Adsense 敏感类别"></p><h2 id="常规类别"><a href="#常规类别" class="headerlink" title="常规类别"></a>常规类别</h2><p>屏蔽较常规的广告类别。注意，这样做可能会导致收入减少。但是也有一些大家公认的低 CPC 类别，建议屏蔽掉：</p><p><img src="https://cdn.jsdelivr.net/gh/youngjuning/images@main/1677288364891.png" alt="Google Adsense 常规类别"></p><p>可以看到健康类别展示占比 4%，收入占比 3.7%，虽然名字很健康，但是效益比较差。</p><h2 id="广告联盟"><a href="#广告联盟" class="headerlink" title="广告联盟"></a>广告联盟</h2><h3 id="低-CPC-广告联盟"><a href="#低-CPC-广告联盟" class="headerlink" title="低 CPC 广告联盟"></a>低 CPC 广告联盟</h3><p>你可以屏蔽不适合自己品牌的第三方广告联盟，但也有一些公认的低 CPC 广告联盟，建议屏蔽掉：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Adform Group 7</span><br><span class="line">Adform Group5</span><br><span class="line">Adkernel</span><br><span class="line">advanced STORE</span><br><span class="line">advanced STORE w/Adform</span><br><span class="line">Amazon.com</span><br><span class="line">AMNET CN w/DBM</span><br><span class="line">Amnet HK w/ DBM</span><br><span class="line">Annalect Media India Private Limited</span><br><span class="line">Appier JP</span><br><span class="line">Appier PC</span><br><span class="line">Biga Bid Media</span><br><span class="line">Bridgewell</span><br><span class="line">Cadreon w/ DBM AU</span><br><span class="line">Criteo (IN)</span><br><span class="line">Criteo (RU)</span><br><span class="line">DBM India</span><br><span class="line">HealthiNation</span><br><span class="line">The Trade Desk</span><br><span class="line">Zemanta</span><br></pre></td></tr></table></figure><p>除此之外你还可以通过分析广告网络报告来决定是否屏蔽某个广告联盟。</p><p><img src="https://cdn.jsdelivr.net/gh/youngjuning/images@main/1677288686112.png" alt="Google Adsense 广告网络"></p><p>屏蔽原则是：低 CPC 的广告联盟，低 CTR 的广告联盟，低收入的广告联盟，都可以屏蔽掉。</p><h3 id="高-CPC-广告联盟"><a href="#高-CPC-广告联盟" class="headerlink" title="高 CPC 广告联盟"></a>高 CPC 广告联盟</h3><details class="toggle" ><summary class="toggle-button" style="">高 CPC 广告联盟</summary><div class="toggle-content"><ol><li>HearstDigitalMedia：$10.80</li><li>InPowered：$10.19</li><li>Kapanlagi：$10.13</li><li>Yandex.ru：$10.11</li><li>OpenInventory：$9.24</li><li>WebAds：$8.71</li><li>MadhouseMobile：$8.12</li><li>CPXInteractive：$7.75</li><li>GuruMedia：$7.41</li><li>AdvertisingAlliance：$6.59</li><li>CompareGroup：$6.33</li><li>transcosmos：$6.09</li><li>eHealthcareSolutions：$6.06</li><li>KPISolutions：$5.70</li><li>ScaleOut：$5.65</li><li>Bannerconnect：$5.43</li><li>IndependentTraveler：$5.40</li><li>Quantcast：$5.29</li><li>MediaScience：$5.17</li><li>AdKnowledge：$5.11</li><li>BaronsMedia：$4.91</li><li>SpecificMedia：$4.81</li><li>InterCLICK：$4.73</li><li>Dun&amp;Bradstreet：$4.70</li><li>AdvantageMedia：$4.45</li><li>BridgeMarketing：$4.41</li><li>Belgacom：$4.39</li><li>Connexity：$4.32</li><li>HealthiNation：$4.30</li><li>AdvertisingTechnologies：$4.28</li><li>remerge：$4.19</li><li>MediaDecision：$4.17</li><li>PerformanceAdvertising：$4.04</li><li>AdGear：$3.93</li><li>BusinessAd：$3.93</li><li>CyberCommunications：$3.69</li><li>Motricity：$3.66</li><li>TruEffect：$3.60</li><li>TCSBank：$3.46</li><li>MediaMind：$3.43</li><li>GroupM：$3.36</li><li>Videology：$3.29</li><li>SEEKCommercial：$3.26</li><li>Proclivity：$3.15</li><li>AdvanceMedia：$3.13</li><li>Neustar：$3.11</li><li>iPromote：$3.10</li><li>AdLabs：$3.09</li><li>InteractiveMediaSales：$3.07</li><li>Technorati：$3.05</li><li>MetaNetwork：$3.02</li><li>Yandex：$2.95</li><li>Adform：$2.90</li><li>REAGroup：$2.86</li><li>Fiksu：$2.84</li><li>ActiveAgent：$2.81</li><li>StartApp：$2.77</li><li>Didit：$2.74</li><li>Weborama：$2.74</li><li>TremorMedia：$2.72</li><li>PlatformOne：$2.71</li><li>Sogou：$2.63</li><li>Hybrid：$2.62</li><li>DownstreamMarketing：$2.61</li><li>PCWorldCommunications：$2.58</li><li>Digitize&#x2F;Medialink1.USAccount：$2.57</li><li>ARAnet：$2.54</li><li>UnrulyMedia：$2.51</li><li>OpenX：$2.49</li><li>OutsideHub：$2.45</li><li>CyberAgent：$2.44</li><li>AutoScout24：$2.39</li><li>CollectiveMedia：$2.39</li><li>MediaCity：$2.38</li><li>MediaNewsGroup：$2.35</li><li>eMar：$2.30</li><li>CarWale：$2.29</li><li>VideoInternational：$2.28</li><li>InternetBrands：$2.24</li><li>Undertone：$2.21</li><li>CirrusMedia：$2.17</li><li>AgendaMedia：$2.14</li><li>Decisive：$2.14</li><li>IgniteVideo：$2.14</li><li>Twenga：$2.04</li><li>AMNET：$2.01</li><li>PlatformID：$2.01</li><li>LookSmart：$2.00</li><li>NirvanaInformation：$1.99</li><li>Innity：$1.93</li><li>BurstMedia：$1.91</li><li>CBSInteractive：$1.89</li><li>Tencent：$1.89</li><li>Demandbase：$1.88</li><li>MediaWorks：$1.88</li><li>MobileTheory：$1.88</li><li>iContext：$1.87</li><li>Adience：$1.85</li><li>Baidu：$1.84</li><li>Affinity：$1.80</li><li>Inneractive：$1.79</li><li>DigitalResponse：$1.78</li><li>MarsTechnologies：$1.77</li><li>IQM：$1.75</li><li>Rubedo：$1.72</li><li>Magnetic：$1.70</li><li>InspiredMobile：$1.68</li><li>Timesinternet：$1.67</li><li>Torrential：$1.65</li><li>Scripps：$1.60</li><li>SteelHouse：$1.60</li><li>DennisPublishing：$1.59</li><li>PRIMEDIA：$1.58</li><li>FutureUS：$1.57</li><li>BreakMedia：$1.56</li><li>CareerOne：$1.55</li><li>SiftMedia：$1.55</li><li>Trovit：$1.54</li><li>evania：$1.53</li><li>OneScreen：$1.52</li><li>Conversant：$1.51</li><li>Netmining：$1.48</li><li>Carsales：$1.47</li><li>OzoneMedia：$1.46</li><li>AdView：$1.45</li><li>Glimr：$1.45</li><li>One97：$1.45</li><li>Xad：$1.45</li><li>xBid：$1.45</li><li>DemandMedia：$1.44</li><li>ConradAdvertising：$1.43</li><li>VPON：$1.43</li><li>Digitouch：$1.42</li><li>DynamicVideo：$1.41</li><li>Quartic：$1.41</li><li>Pilot：$1.38</li><li>ikoo：$1.36</li><li>FinancialTimes：$1.34</li><li>MantaMedia：$1.34</li><li>YuMe：$1.34</li><li>Ritorno：$1.31</li><li>Verizonw&#x2F;DBM：$1.31</li><li>Adjust：$1.29</li><li>PickmeUp：$1.29</li><li>Unique：$1.29</li><li>TheReachGroup：$1.27</li><li>AdPepper：$1.26</li><li>BlackBoxMedia：$1.26</li><li>Lotame：$1.26</li><li>NetEdge：$1.26</li><li>Voetbal：$1.26</li><li>eprofessional：$1.25</li><li>PriceRunner：$1.24</li><li>Begun：$1.23</li><li>VoodooVideo：$1.22</li><li>SGN：$1.20</li><li>InteractiveOne：$1.19</li><li>Wikia：$1.19</li><li>GREE：$1.17</li><li>Longtail：$1.17</li><li>Mediasmart：$1.17</li><li>AnswerMedia：$1.16</li><li>Pulse360：$1.16</li><li>Turn：$1.15</li><li>Emerse：$1.14</li><li>Microsoftw&#x2F;AppNexus：$1.13</li><li>ZAPR：$1.13</li><li>SmartMedia：$1.11</li><li>Sojern：$1.11</li><li>Micro：$1.10</li><li>Allrecipes.com：$1.06</li><li>TVNZ：$1.06</li><li>OneSpot：$1.05</li><li>Smartclip：$1.05</li><li>YD：$1.05</li><li>eType：$1.04</li><li>IMT：$1.04</li><li>Bizo：$1.02</li><li>DataLabUSA：$1.01</li><li>SET.tv：$1.01</li><li>Merkle：$0.99</li><li>Tekka：$0.99</li><li>TheBridge：$0.99</li><li>AdMedia：$0.96</li><li>Housing.com：$0.96</li><li>Metacafe：$0.95</li><li>BellCanada：$0.94</li><li>HarvestDigital：$0.93</li><li>advancedSTORE：$0.92</li><li>IgnitionOne：$0.91</li><li>RocketFuel：$0.91</li><li>Adwell：$0.90</li><li>BEHE：$0.89</li><li>Kargo：$0.89</li><li>Theorem：$0.88</li><li>TapValue：$0.87</li><li>DataMind：$0.86</li><li>SalesSpider：$0.86</li><li>India.com：$0.85</li><li>Suite66：$0.85</li><li>HealthGrades：$0.83</li><li>Philly.com：$0.83</li><li>Wavenet：$0.83</li><li>OandaCorporation：$0.82</li><li>Trulia：$0.79</li><li>Bonnier：$0.78</li><li>Mixmarket：$0.77</li><li>RakutenUS：$0.76</li><li>Belo：$0.75</li><li>SheKnows：$0.75</li><li>Opera：$0.74</li><li>Papaya：$0.74</li><li>BBCw&#x2F;DBM：$0.73</li><li>Chango：$0.73</li><li>Pocketmath：$0.72</li><li>Hurra：$0.71</li><li>NetSeer：$0.71</li><li>Admeta：$0.70</li><li>Alveo：$0.69</li><li>ibibo：$0.69</li><li>WiseMedia：$0.69</li><li>Jubii：$0.68</li><li>Kadam：$0.68</li><li>Avocet：$0.67</li><li>DoublePositive：$0.67</li><li>MartiniMedia：$0.66</li><li>Rakuten：$0.64</li><li>Axonix：$0.63</li><li>TravelClick：$0.63</li><li>Yoyi：$0.62</li><li>ReduxMedia：$0.60</li><li>ComuneS&#x2F;A：$0.59</li><li>DigitalThrottle：$0.57</li><li>TribalFusion：$0.55</li><li>Batanga：$0.54</li><li>NewsInternational：$0.54</li><li>Xplosion：$0.54</li><li>FunBox：$0.53</li><li>Sokrati：$0.52</li><li>Ntree：$0.51</li><li>OrbitzWorldwide：$0.51</li><li>Rockerbox：$0.51</li><li>USMediaConsulting：$0.51</li><li>EJAM：$0.47</li><li>3Interactive：$0.46</li><li>AccountNow：$0.45</li><li>BabylonLimited：$0.44</li><li>ZiffDavis：$0.44</li><li>Populis：$0.43</li><li>Bridgewell：$0.42</li></ol></div></details><h1 id="广告审核中心"><a href="#广告审核中心" class="headerlink" title="广告审核中心"></a>广告审核中心</h1><p>为了保证广告的质量和效益，可以综合前文所述对广告进行审核，禁用不适合您网站的广告类型。</p><p><img src="https://cdn.jsdelivr.net/gh/youngjuning/images@main/1677290992695.png" alt="Google Adsense 广告审核中心"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.shoutmeloud.com/points-to-consider-while-selecting-niche-for-your-blog.html">Points to Consider While Selecting Niche for Your Blog</a></li><li><a href="https://www.vehjir.com/2023/01/all-about-adsense-and-cpc.html">All About AdSense and CPC</a></li></ul>]]></content>
    
    
    <summary type="html">作为一个技术博客的博主，我一直在寻找提高 Google Adsense CPC 的方法，因为 CPC 是 Adsense 的收入来源，所以 CPC 越高，收入越多。本文就将介绍如何提高 Google Adsense CPC。</summary>
    
    
    
    <category term="站点运营" scheme="https://youngjuning.js.org/categories/%E7%AB%99%E7%82%B9%E8%BF%90%E8%90%A5/"/>
    
    
    <category term="Adsense" scheme="https://youngjuning.js.org/tags/Adsense/"/>
    
    <category term="Adsense CPC" scheme="https://youngjuning.js.org/tags/Adsense-CPC/"/>
    
    <category term="流量时代" scheme="https://youngjuning.js.org/tags/%E6%B5%81%E9%87%8F%E6%97%B6%E4%BB%A3/"/>
    
  </entry>
  
  <entry>
    <title>hexo-theme-butterfly 魔改与美化</title>
    <link href="https://youngjuning.js.org/3f81e8c6ddd1/"/>
    <id>https://youngjuning.js.org/3f81e8c6ddd1/</id>
    <published>2023-02-22T06:18:09.000Z</published>
    <updated>2023-02-26T03:10:50.583Z</updated>
    
    <content type="html"><![CDATA[<!-- DRAFT hexo-theme-butterfly 魔改与美化 --><blockquote><p>当前魔改基于 hexo 6.3.0 和 hexo-theme-butterfly 4.7.0</p></blockquote><h1 id="patch-package-配置"><a href="#patch-package-配置" class="headerlink" title="patch-package 配置"></a>patch-package 配置</h1><p>patch-package 可以将你的魔改记录保存到 <code>patches</code> 文件夹下，方便下次更新主题后应用魔改。按照下面的代码修改 package.json 即可：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line"><span class="addition">+    &quot;postinstall&quot;: &quot;npx patch-package&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果你想直接应用我的魔改，可以直接复制本文的代码到 <code>patches/hexo-theme-butterfly+4.7.0.patch</code></p><h1 id="两个小人"><a href="#两个小人" class="headerlink" title="两个小人"></a>两个小人</h1><div class="tabs" id="两个小人"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#两个小人-1">改动点</button></li><li class="tab"><button type="button" data-href="#两个小人-2">效果预览</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="两个小人-1"><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">diff --git a/node_modules/hexo-theme-butterfly/layout/includes/widget/card_announcement.pug b/node_modules/hexo-theme-butterfly/layout/includes/widget/card_announcement.pug</span></span><br><span class="line"><span class="comment">index 9e63627..905342a 100644</span></span><br><span class="line"><span class="comment">--- a/node_modules/hexo-theme-butterfly/layout/includes/widget/card_announcement.pug</span></span><br><span class="line"><span class="comment">+++ b/node_modules/hexo-theme-butterfly/layout/includes/widget/card_announcement.pug</span></span><br><span class="line"><span class="meta">@@ -4,3 +4,4 @@</span> if theme.aside.card_announcement.enable</span><br><span class="line">       i.fas.fa-bullhorn.fa-shake</span><br><span class="line">       span= _p(&#x27;aside.card_announcement&#x27;)</span><br><span class="line">     .announcement_content!= theme.aside.card_announcement.content</span><br><span class="line"><span class="addition">+      .twopeople!= &#x27;&lt;div class=&quot;twopeople&quot;&gt;&lt;div class=&quot;container&quot; style=&quot;height:200px;&quot;&gt;&lt;canvas class=&quot;illo&quot; width=&quot;800&quot; height=&quot;800&quot; style=&quot;max-width: 200px; max-height: 200px; touch-action: none; width: 640px; height: 640px;&quot;&gt;&lt;/canvas&gt;&lt;/div&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/js/twopeople1.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/js/zdog.dist.js&quot;&gt;&lt;/script&gt;&lt;script id=&quot;rendered-js&quot; src=&quot;https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/js/twopeople.js&quot;&gt;&lt;/script&gt;&lt;style&gt;.twopeople&#123;margin: 0;align-items: center;justify-content: center;text-align: center;&#125;canvas &#123;display: block;margin: 0 auto;cursor: move;&#125;&lt;/style&gt;&lt;/div&gt;&#x27;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="两个小人-2"><p><img src="https://picbed.qunarzz.com/f3d661e2088ea4fd706709ee1024adce.png" alt="效果预览"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><blockquote><p>鸣谢 <a href="https://guole.fun/posts/butterfly-custom/">https://guole.fun/posts/butterfly-custom/</a></p></blockquote><h1 id="站点-Logo-圆角"><a href="#站点-Logo-圆角" class="headerlink" title="站点 Logo 圆角"></a>站点 Logo 圆角</h1><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">diff --git a/node_modules/hexo-theme-butterfly/source/css/_layout/head.styl b/node_modules/hexo-theme-butterfly/source/css/_layout/head.styl</span></span><br><span class="line"><span class="comment">index ade0db3..956a69e 100644</span></span><br><span class="line"><span class="comment">--- a/node_modules/hexo-theme-butterfly/source/css/_layout/head.styl</span></span><br><span class="line"><span class="comment">+++ b/node_modules/hexo-theme-butterfly/source/css/_layout/head.styl</span></span><br><span class="line"><span class="meta">@@ -289,6 +289,7 @@</span></span><br><span class="line">       margin-right: 6px</span><br><span class="line">       height: 36px</span><br><span class="line">       vertical-align: middle</span><br><span class="line"><span class="addition">+      border-radius: 50%</span></span><br><span class="line"></span><br><span class="line">   #toggle-menu</span><br><span class="line">     display: none</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本文将介绍本站对 hexo-theme-butterfly 进行的一些美化和魔改。</summary>
    
    
    
    <category term="站点运营" scheme="https://youngjuning.js.org/categories/%E7%AB%99%E7%82%B9%E8%BF%90%E8%90%A5/"/>
    
    
    <category term="hexo" scheme="https://youngjuning.js.org/tags/hexo/"/>
    
    <category term="hexo-theme-butterfly" scheme="https://youngjuning.js.org/tags/hexo-theme-butterfly/"/>
    
    <category term="魔改" scheme="https://youngjuning.js.org/tags/%E9%AD%94%E6%94%B9/"/>
    
    <category term="美化" scheme="https://youngjuning.js.org/tags/%E7%BE%8E%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>信息系统项目管理师备考笔记</title>
    <link href="https://youngjuning.js.org/e896d9d3a8e1/"/>
    <id>https://youngjuning.js.org/e896d9d3a8e1/</id>
    <published>2023-02-19T15:40:41.000Z</published>
    <updated>2023-02-26T03:10:50.583Z</updated>
    
    <content type="html"><![CDATA[<!-- DRAFT 信息系统项目管理师备考笔记 --><h1 id="信息化和信息系统"><a href="#信息化和信息系统" class="headerlink" title="信息化和信息系统"></a>信息化和信息系统</h1><h2 id="信息系统与信息化"><a href="#信息系统与信息化" class="headerlink" title="信息系统与信息化"></a>信息系统与信息化</h2><h3 id="信息的基本概念"><a href="#信息的基本概念" class="headerlink" title="信息的基本概念"></a>信息的基本概念</h3><details class="toggle" ><summary class="toggle-button" style="">1、信息的定义</summary><div class="toggle-content"><p>信息就是用来消除不确定性的东西。</p></div></details><details class="toggle" ><summary class="toggle-button" style="">2、信息的特征</summary><div class="toggle-content"><details class="toggle" ><summary class="toggle-button" style="">信息的特征</summary><div class="toggle-content"><ol><li><strong>客观性</strong>：信息是客观事物在人脑中的反映，而反映的对象则有主观和客观的区别，因此，信息可分为主观信息（例如，决策、指令和计划等）和客观信息（例如，国际形式、经济发展和一年四季等）。主观信息必然要转化成客观信息，例如，决策和计划等主观信息要转化成实际行动。</li><li><strong>普遍性</strong>：物质具有普遍性，信息属于物质，物质的普遍性决定了信息的普遍存在。</li><li><strong>无限性</strong>：客观世界是无限的，信息是客观事物&#x2F;世界在人脑中的反映，反映客观世界的信息自然也是无限的。无限性可分为两个层次，一是无限的事物产生无限的信息，即信息的总量是无限的；二是每个具体事物或有限个食物的集合所能产生的信息也可以是无限的。</li><li><strong>动态性</strong>：信息是随着时间的变化而变化的。</li><li><strong>相对性</strong>：不同的认识主体从同一事物中获取的信息及信息量可能是不同的。这会取决于认识主体的生长环境、教育、工作环境、工作性质等外界因素。</li><li><strong>依附性</strong>：信息的依附性可以从两个方面来解释，一方面，信息是客观世界的反映，任何信息必然由客观事物所产生，不存在无源的信息；另一方面，任何信息都要依附于一定的载体而存在，需要有物质的承担者，信息不能完全脱离物质而独立存在。</li><li><strong>变换性</strong>：信息通过处理可以实现变化或转换，使其形式和内容发生变化，以适应特定的需要。比较明显的是数据可视化分过程，实现信息从文字到表格，最终到图表的展示，通过变化，信息的可读性越来越强。</li><li><strong>传递性</strong>：信息在时间上的传递就是存储，在空间上的传递就是转移或扩散。</li><li><strong>层次性</strong>：客观世界是分层次的，反映它的信息也是分层次的。</li><li><strong>系统性</strong>：信息可以表示为一种合集，不同类别的信息可以形成不同的整体。因此，可以形成与现实世界相对应的信息系统。例如：经济领域中的商业系统和金融系统，自然界中的水利系统和生态系统等。</li><li><strong>转化性</strong>：信息的产生不能没有物质，信息的传递不能没有能量，但有效地使用信息，可以使信息转化为物质或能量。</li></ol></div></details><details class="toggle" ><summary class="toggle-button" style="">信息质量属性⭐</summary><div class="toggle-content"><ol><li><strong>精确性</strong>：对事物状态描述的精准程度。</li><li><strong>完整性</strong>：对事物状态描述的全面程度，完整信息应包括所有重要事实。</li><li><strong>可靠性</strong>：指信息的来源、采集方法、传输过程是可以信任的，符合预期。</li><li><strong>及时性</strong>，指获得信息的时刻与事件发生时刻的间隔长短。</li><li><strong>经济性</strong>，指信息获取、传输带来的成本在可以接受的范围之内。</li><li><strong>可验证性</strong>：指信息的主要质量属性可以被证实或者证伪的程度。</li><li><strong>安全性</strong>：指在信息的生命周期中，信息可以被非授权访问的可能性，可能性越低，安全性越高。</li></ol></div></details></div></details><details class="toggle" ><summary class="toggle-button" style="">3、信息的功能</summary><div class="toggle-content"><p>无重要考点</p></div></details><details class="toggle" ><summary class="toggle-button" style="">4、信息的传输模型⭐</summary><div class="toggle-content"><ul><li><strong>信源</strong>：产生信息的实体，信息产生后，由这个实体向外传播。</li><li><strong>信宿</strong>：信息的归宿或者接受者。</li><li><strong>信道</strong>：传送信息的通道。</li><li><strong>编码器</strong>：在信息论中是泛指所有变换信号的设备，实际上就是终端机的发送部分。它包括从信源到信道的所有设备，如量化器、压缩编码器、调制器等，使信源输出的信号转换成适用于信道传送的信号。</li><li><strong>译码器</strong>：译码器是编码器的逆变换设备，把信道上传来的信号（原始信号与噪声的叠加）转换成信宿能接受的信号。</li><li><strong>噪声</strong>：噪声可以理解为干扰。</li></ul><p><img src="https://picbed.qunarzz.com/771ed4f1600bfe927bc97c5f5e6e2512.png" alt="信息传输模型"></p></div></details><h3 id="信息系统的基本概念"><a href="#信息系统的基本概念" class="headerlink" title="信息系统的基本概念"></a>信息系统的基本概念</h3><details class="toggle" ><summary class="toggle-button" style="">1、系统的特性</summary><div class="toggle-content"><details class="toggle" ><summary class="toggle-button" style="">总体特性</summary><div class="toggle-content"><ol><li><strong>目的性</strong>：定义一个系统、组成一个系统或者抽象出一个系统，都有明确的目标或者目的，目标性决定了系统的功能。</li><li><strong>整体性</strong>：系统是一个整体，元素是为了达到一定的目的，按照一定的原则，有序地排列起来组成系统，从而产生出系统的特定功能。</li><li><strong>层次性</strong>：系统化是由多个元素组成的，系统和元素是相对的概念。元素是相对于它所处的系统而言的。系统是从它包含元素的角度来看的，如果研究问题的角度变一变，系统就成为更高一级的元素，也成为子系统。</li><li><strong>稳定性</strong>：是规则的约束，系统的内部结构和秩序应该是可以预见的；系统的状态以及演化路径有限并能被预测；系统的功能发生作用导致的后果也是可以预估的。稳定性强的系统使得系统在受到外部作用的同时，内部结构和秩序仍然能够保持。</li><li><strong>突变性</strong>：突变性是指系统通过失稳，从一种状态进入另一种状态的一种剧烈变化过程，它是系统质变的一种基本形式。</li><li><strong>自组织性</strong>：开放系统在系统内外因素的作用下，自发组织起来，使系统从无序到有序，从低级有序到高级有序。</li><li><strong>相似性</strong>：系统具有同构和同态的性质，体现在系统结构、存在方式和演化过程具有共同性。系统具有相似性，根本原因在于世界的物质统一性。</li><li><strong>相关性</strong>：元素是可分的和相互联系的，组成系统的元素必须有明确的边界，可以与别的元素区分开来。另外，元素之间是相互联系的，不是哲学上所说的那种普遍联系，而是实实在在的、具体的联系。</li><li><strong>适应环境性</strong>：系统总处在一定的环境中，与环境发生相互作用。系统和环境之间总是在发生着一定的物质和能量交换。</li></ol></div></details><details class="toggle" ><summary class="toggle-button" style="">突出特征</summary><div class="toggle-content"><ol><li>开放性：系统的开放性是指系统的可访问性。</li><li>脆弱性🔥：这个特性与系统的稳定性相应，即系统可能存在着丧失结构、功能、秩序的特性，这个特性往往是隐藏不易被外界感知的。</li><li>健壮性：系统具有能够抵御出现非预期状态的特性称为健壮性，也称鲁棒性（robustness）。要求具有高可用性的信息系统，会采用冗余技术、容错技术、身份识别技术、可靠性技术等来抵御系统出现的非预期的状态，保持系统的稳定性。</li></ol></div></details></div></details><details class="toggle" ><summary class="toggle-button" style="">2、信息系统</summary><div class="toggle-content"><details class="toggle" ><summary class="toggle-button" style="">定义</summary><div class="toggle-content"><p>简单地说，信息系统就是输入数据，通过加工处理，产生信息的系统。</p></div></details><p>信息系统可以是手工的，也可以是计算机化的。</p><details class="toggle" ><summary class="toggle-button" style="">信息系统集成</summary><div class="toggle-content"><p>采用现代管理理论（例如，软件工程、项目管理等）作为计划、设计、控制的方法论，将硬件、软件、数据库、网络等部件按照规划的结构和秩序，有机地整合一个有清晰边界的信息系统中，以达到既定系统的目标，这个过程称为信息系统集成。</p></div></details></div></details><h3 id="信息化的基本概念"><a href="#信息化的基本概念" class="headerlink" title="信息化的基本概念"></a>信息化的基本概念</h3><details class="toggle" ><summary class="toggle-button" style="">1、信息化从“小”到“大”的五个层次⭐️</summary><div class="toggle-content"><ol><li><strong>产品信息化</strong></li><li><strong>企业信息化</strong></li><li><strong>产业信息化</strong></li><li><strong>国民经济信息化</strong></li><li><strong>社会生活信息化</strong></li></ol></div></details><details class="toggle" ><summary class="toggle-button" style="">2、信息化的内涵🔥</summary><div class="toggle-content"><ol><li><strong>信息化的主体</strong>：<strong>全体社会成员</strong>，包括政府、企业、事业、团体和个人。</li><li><strong>时域</strong>：一个长期的过程</li><li><strong>空域</strong>：政治、经济、文化、军事和社会的一切领域</li><li><strong>手段</strong>：基于现代信息技术的先进社会生产工具</li><li><strong>途径</strong>：是创建信息时代的社会生产力，推动社会生产关系及社会上层建筑的改革</li><li><strong>目标</strong>：使国家的综合实力、社会的文明素质和人民的生活质量全面提升</li></ol></div></details><details class="toggle" ><summary class="toggle-button" style="">3、国家级信息系统</summary><div class="toggle-content"><ul><li>两网：是指政务内网和政务外网</li><li>一站：是指政府门户网站</li><li>四库：即建立人口、法人单位、空间地理和自然资源、宏观经济等四大基础数据库。</li><li>十二金</li></ul></div></details><details class="toggle" ><summary class="toggle-button" style="">4、信息化的六要素🔥</summary><div class="toggle-content"><ol><li><strong>信息资源</strong>：信息资源的开发和利用是国家信息化的核心人任务，是国家信息化建设取得实效的关键，也是我国信息化的薄弱环节。（信息技术、设备、设施、信息生产者等）</li><li><strong>信息网络</strong>：信息网络是信息资源开发和利用的基础设施，包括电信网，广播电视和计算机网络。</li><li><strong>信息技术应用</strong>：是指把信息技术广泛应用于经济和社会各个领域，他直接反映了效率、效果、效益。信息技术应用是信息化体系六要素中的龙头，是国家信息化建设的主阵地，集中体现了国家信息化建设的需求与效益。</li><li><strong>信息技术与产业</strong>：是信息化的物质基础</li><li><strong>信息化人才</strong>：人才是信息化的成功之本</li><li><strong>信息化政策法规和标准规范</strong>：信息化政策和法规、标准、规范用于规范和协调信息化体系要素之间的关系，是国家信息化快速，有序，健康和持续发展的保障。</li></ol><p><img src="https://picbed.qunarzz.com/81eb01b74890743fd48386c1e2d6c876.png" alt="信息化的六要素"></p></div></details><h3 id="信息系统生命周期"><a href="#信息系统生命周期" class="headerlink" title="信息系统生命周期"></a>信息系统生命周期</h3><details class="toggle" ><summary class="toggle-button" style="">4 大方面</summary><div class="toggle-content"><ol><li>立项（系统规划）</li><li>开发（系统分析、系统设计、系统实施）</li><li>运维（运行维护）</li><li>消亡</li></ol></div></details><details class="toggle" ><summary class="toggle-button" style="">5 小方面</summary><div class="toggle-content"><ol><li>系统规划</li><li>系统分析</li><li>系统设计</li><li>系统实施</li><li>运行维护</li></ol></div></details><h2 id="信息系统开发方法"><a href="#信息系统开发方法" class="headerlink" title="信息系统开发方法"></a>信息系统开发方法</h2><h3 id="结构化方法"><a href="#结构化方法" class="headerlink" title="结构化方法"></a>结构化方法</h3><p><img src="https://picbed.qunarzz.com/b5330d132e19a9931bfb32134f234fdf.png" alt="孵小鸡"></p><details class="toggle" ><summary class="toggle-button" style="">1、定义</summary><div class="toggle-content"><p>也称为生命周期法，是一种传统的信息系统开发方法。</p></div></details><details class="toggle" ><summary class="toggle-button" style="">2、组成</summary><div class="toggle-content"><ul><li>结构分析（Structured Analysis，SA）</li><li>结构化设计（Structured Design，SD）</li><li>结构化程序设计（Structured Programming，SP）</li></ul></div></details><details class="toggle" ><summary class="toggle-button" style="">3、精髓🔥</summary><div class="toggle-content"><p>自顶向下、逐步求精和模块化设计</p></div></details><details class="toggle" ><summary class="toggle-button" style="">4、主要特点</summary><div class="toggle-content"><ol><li>开发目标清晰化</li><li>开发工作阶段化</li><li>开发文档规范化</li><li>设计方法结构化</li></ol></div></details><details class="toggle" ><summary class="toggle-button" style="">5、适用场景</summary><div class="toggle-content"><p>特别适合于数据处理领域的问题</p></div></details><details class="toggle" ><summary class="toggle-button" style="">6、不适用场景</summary><div class="toggle-content"><p>不适用于规模较大、比较复杂的系统开发</p></div></details><details class="toggle" ><summary class="toggle-button" style="">7、缺点</summary><div class="toggle-content"><ol><li>开发周期较长</li><li>难以适应需求变化</li><li>很少考虑数据结构</li></ol></div></details><h3 id="面向对象方法"><a href="#面向对象方法" class="headerlink" title="面向对象方法"></a>面向对象方法</h3><p><img src="https://picbed.qunarzz.com/e66b60d74e7b7591ca378194405f3841.png" alt="面向对象-面向小鸡"></p><details class="toggle" ><summary class="toggle-button" style="">1、定义</summary><div class="toggle-content"><p>面向对象（OO）方法认为，客观世界是由各种对象组成的（一切皆对象）。</p></div></details><details class="toggle" ><summary class="toggle-button" style="">2、与结构化方法的联系</summary><div class="toggle-content"><p>与结构化方法类似，OO 方法也划分阶段，但其中的系统分析、系统设计和系统实现三个阶段之间已经没有“缝隙”，也就是说，这三个阶段的界限变得不明确。</p></div></details><details class="toggle" ><summary class="toggle-button" style="">3、OO 优点🔥</summary><div class="toggle-content"><ol><li>符合人们的思维习惯</li><li>有利于系统开发过程中用户与开发人员的沟通与交流，缩短开发周期</li></ol></div></details><details class="toggle" ><summary class="toggle-button" style="">4、OO 缺点🔥</summary><div class="toggle-content"><p>必须依靠一定的 OO 技术支持，在大型项目开发上具有一定的局限性，不能涉足系统分析以前的开发环节。</p></div></details><details class="toggle" ><summary class="toggle-button" style="">5、应用场景</summary><div class="toggle-content"><p>当前，一些大型信息系统的开发，通常是将结构化方法和 OO 方法结合起来，首先，使用结构化方法进行自顶向下的整体划分；然后，自底向上地采用 OO 方法进行开发。</p></div></details><h3 id="原型化方法"><a href="#原型化方法" class="headerlink" title="原型化方法"></a>原型化方法</h3><p><img src="https://picbed.qunarzz.com/1c7a2ea4d0e571de005d72cf898a1352.png" alt="原型化方法"></p><details class="toggle" ><summary class="toggle-button" style="">1、定义</summary><div class="toggle-content"><p>原型化方法也称为快速原型法，或者简称原型法。它是一种根据用户初步需求，利用系统开发工具，快速建立一个系统模型给用户，在此基础上与用户交流，最终实现用户需求的信息系统快速的开发方法。</p></div></details><details class="toggle" ><summary class="toggle-button" style="">2、分类</summary><div class="toggle-content"><p>按是否实现功能划分：水平原型、垂直原型<br>按最终结果划分：抛弃式原型、演化式原型</p></div></details><details class="toggle" ><summary class="toggle-button" style="">3、开发过程🔥</summary><div class="toggle-content"><ol><li>确定用户的基本需求</li><li>设计系统原型</li><li>试用和评价原型</li><li>修改和完善原型</li><li>整理原型、提供文档</li></ol><p><img src="https://picbed.qunarzz.com/8a4081f6975446bb19470ea120cd78b1.png" alt="原型法的开发过程"></p></div></details><details class="toggle" ><summary class="toggle-button" style="">4、特点🔥</summary><div class="toggle-content"><ol><li>原型法可以使系统开发的周期缩短，成本和风险降低，速度加快，获得较高的综合开发效益。</li><li>原型法是以用户为中心来开发系统，用户参与的程度大大提高，开发的系统符合用户的需求，因而增加客户的满意度，提高了系统开发的成功率。</li><li>由于用户参与了系统开发的全过程，对系统的功能和结构容易理解和接受，有利于系统的移交，有利于系统的运行和维护。</li></ol></div></details><details class="toggle" ><summary class="toggle-button" style="">5、不足🔥</summary><div class="toggle-content"><ol><li>开发环境要求高</li><li>管理水平要求高</li></ol></div></details><details class="toggle" ><summary class="toggle-button" style="">6、适用场景🔥</summary><div class="toggle-content"><ol><li>原型法适用于那些需求不明确的系统开发</li><li>事实上，对于分析层面难度大，技术层面难度不大的系统，适用于原型法开发</li><li>而对于技术层面的困难远大于其分析层面的系统，则不宜用原型法。</li></ol></div></details><h3 id="面向服务"><a href="#面向服务" class="headerlink" title="面向服务"></a>面向服务</h3><p><img src="https://picbed.qunarzz.com/145bb50bf142fc865414fc290012e273.png" alt="面向服务"></p><details class="toggle" ><summary class="toggle-button" style="">1、产生的背景</summary><div class="toggle-content"><p>OO 的应用构建在类和对象上，随后发展起来的建模技术将相关对象按业务功能进行分组，就形成了构件（Component）的概念。</p></div></details><details class="toggle" ><summary class="toggle-button" style="">2、交互的方式</summary><div class="toggle-content"><p>对于跨构件的功能调用，则采用<strong>接口</strong>的形式暴露出来。进一步将接口的定义与实现进项解耦，则催生了服务和面向服务（Service-Oriented，SO）的开发方法。</p></div></details><details class="toggle" ><summary class="toggle-button" style="">3、优点</summary><div class="toggle-content"><ol><li>提高系统可复用性</li><li>信息资源共享</li><li>系统之间的互操作性</li></ol></div></details><h2 id="常规信息系统集成技术"><a href="#常规信息系统集成技术" class="headerlink" title="常规信息系统集成技术"></a>常规信息系统集成技术</h2><h3 id="网络标准与网络协议"><a href="#网络标准与网络协议" class="headerlink" title="网络标准与网络协议"></a>网络标准与网络协议</h3><details class="toggle" ><summary class="toggle-button" style="">1、OSI 协议</summary><div class="toggle-content"><ol><li>物理层</li></ol><ul><li>定义：盖层包括物理联网媒介，比如电缆连线连接器。</li><li>协议：RS232、V.35、<strong>RJ-45</strong>（水晶头）、FDDI<br>2.数据链路层</li><li>定义：它控制网络层与物理层之间的通信。</li><li>协议：<strong>IEEE 802.3&#x2F;.2</strong>、AHDLC、PPP、TM</li></ul><ol start="3"><li>网络层</li></ol><ul><li>定义：其主要功能是将网络地址（例如：IP 地址）翻译成对应的物理地址（例如：MAC 地址），并决定如何将数据从发送方路由到接收方。</li><li>协议：<strong>IP</strong>、<strong>ICMP</strong>、<strong>IGMP</strong>、IPX、<strong>ARP</strong>、<strong>RARP</strong></li></ul><ol start="4"><li>传输层</li></ol><ul><li>定义：主要负责确保数据可靠、顺序、无错地从 A 传输到 B 点。</li><li>协议：<strong>TCP</strong>、<strong>UDP</strong>、SPX</li></ul><ol start="5"><li>会话层</li></ol><ul><li>定义：负责在网络中的两个节点之间建立和维持通信，以及提供交互会话的管理功能。如三种数据流方向控制，即一路交互、两路交互和两路同时会话模式。</li><li>协议：RPC、SQL、NFS</li></ul><ol start="6"><li>表示层</li></ol><ul><li>定义：如同应用程序和网络之间的翻译官，在表示层，数据将按照网络能理解的方案进行格式化；这种格式化也因所使用的网络的类型不同而不同。表示层管理数据的解密加密、数据转换、格式化和文本压缩。</li><li>协议：<strong>JPEG</strong>、<strong>ASCLL</strong>、<strong>GIF</strong>、<strong>DES</strong>、<strong>MPEG</strong></li></ul><ol start="7"><li>应用层</li></ol><ul><li>定义：负责对软件提供接口以使程序能使用网路服务，如事务处理程序、文件传送协议和网络管理等。</li><li>协议：<strong>FTP</strong>、<strong>TFTP</strong>、<strong>HTTP</strong>、<strong>SMTP</strong>、<strong>DHCP</strong>、<strong>Telnet</strong>、<strong>DNS</strong>、<strong>SNMP</strong></li></ul></div></details><details class="toggle" ><summary class="toggle-button" style="">2、网络协议与标准</summary><div class="toggle-content"><ul><li>IEEE 802.3（局域网协议）</li><li>IEEE 802.11（无线局域网协议）</li></ul></div></details><details class="toggle" ><summary class="toggle-button" style="">3、TCP/IP</summary><div class="toggle-content"><p>TCP&#x2F;IP 协议是 Internet 的核心</p><ol><li>应用层协议</li></ol><ul><li><strong>FTP</strong>（File Transport Protocol，文件传输协议）：运行在<em>TCP</em>之上，FTP 在客户端与服务器之间需要建立两条 TCP 连接，一条用于传输控制信息（使用 21 号端口）：另外一条用于传送文件内容（使用 20 端口）。</li><li><strong>TFTP</strong>（Trivial File Transfer Protocol），简单文件传输协议），建立在<em>UDP</em>之上，提供不可靠的数据流传输服务。</li><li><strong>HTTP</strong>（HyperText Transfer Protocol，超文本传输协议）：是用于从 WWW 服务器传输超文本到本地浏览器的传输协议，建立在<em>TCP</em>之上。</li><li><strong>SMTP</strong>（Simple Mail Transfer Protocol，简单邮件传输协议）：建立在<em>TCP</em>之上，是一种提供可靠且有效的电子邮件传输协议。</li><li><strong>DHCP</strong>（Dynamic Host Configuration Protocol，动态主机配置协议）：建立在<em>UDP</em>之上，基于客户端&#x2F;服务器模型设计的。所有的 IP 网络设定数据都由 DHCP 服务器集中管理，并负责客户端的 DHCP 请求。</li><li><strong>Telnet</strong>（远程登录协议）：是登录和仿真程序，建立在<em>TCP</em>之上，他的基础功能是允许用户登录进入远程计算机。</li><li><strong>DNS</strong>（Domain Name System，域名系统）：实现域名解析，建立在<em>UDP</em>之上。</li><li><strong>SNMP</strong>（Simple Network Management Protocol，简单网络管理协议）：由一组网络管理的标准组成，包含一个应用层协议、数据库模型和一组资源对象。该协议能够支持网络管理系统，用以监测连接到网络上的设备是否有任何引起管理上注意的情况。</li></ul><ol start="2"><li>传输层协议</li></ol><ul><li><strong>TCP</strong>（Transmission Control Protocol，传输控制协议）：TCP 提供了一个可靠的，面向连接的，全双工的数据传输服务。TCP 一般用于传输数据量比较少，且对可靠性要求高的场合。</li><li><strong>UDP</strong>（User Datagram Protocol，用户数据报协议）：UDP 是一种不可靠的，无连接的协议，可以保证应用程序间的通信，与 TCP 相比，UDP 是一种无连接的协议，它的错误检测功能要弱的多，UDP 协议一般用于传输数据量大，对于可靠性要求不是很高，但要求速度快的场合。</li></ul><ol start="3"><li>网络层协议</li></ol><ul><li><strong>IP</strong>（Internet Protocol，互联网协议）：所提供的服务是无连接和可靠的。</li><li><strong>ICMP</strong>（Internet Control Message Protocol，互联网控制报文协议）：一种专门用于发送错误报文的协议，即传送的数据可能丢失、重复、延迟或乱序传递，所以需要一种尽量避免差错并能在发生差错时报告的机制，这就是 ICMP 的功能。</li><li><strong>IGMP</strong>（Internet Group Management Protocol，互联网组管理协议）：允许在 Internet 中的计算机参加多播，是计算机用做向相邻多路由器报告多目组成员的协议。</li><li><strong>ARP</strong>（Address Resolution Protocol，地址解析协议）：用于动态地完成 IP 到物理地址的转换。</li><li><strong>RARP</strong> （Reverse Address Resolution Protocol，反向地址解析协议）：用于动态地完成物理地址到 IP 地址的转换。</li></ul></div></details><h3 id="网络设备"><a href="#网络设备" class="headerlink" title="网络设备"></a>网络设备</h3><details class="toggle" ><summary class="toggle-button" style="">1、网络交换</summary><div class="toggle-content"><details class="toggle" ><summary class="toggle-button" style="">定义</summary><div class="toggle-content"><p>通过一定的设备，如交换机等，将不同的信号或者信号转换为对方可识别的信号类型从而达到通信目的的一种交换形式。</p></div></details><details class="toggle" ><summary class="toggle-button" style="">分类</summary><div class="toggle-content"><ol><li>物理交换（如电话网）</li><li>链路层交换（二层交换，对 MAC 地址进行变更🔥）</li><li>网络层交换（三层交换，对 IP 地址进行变更）</li><li>传输层交换（四层交换，对端口进行变更，比较少见）</li><li>应用层交换</li></ol></div></details></div></details><details class="toggle" ><summary class="toggle-button" style="">2、互联设备</summary><div class="toggle-content"><details class="toggle" ><summary class="toggle-button" style="">定义</summary><div class="toggle-content"><p>在网络互连时，各节点一般不能简单地直接相连，而是需要通过一个中间设备来实现。</p></div></details><details class="toggle" ><summary class="toggle-button" style="">分类</summary><div class="toggle-content"><ol><li>中继器（实现物理层协议转换，在电缆间进行二进制信号）</li><li>网桥（实现物理层和数据链路层协议转换）</li><li>路由器（实现网络层协议和以下各层协议的转换）（🔥在网络层）</li><li>网关（提供从最底层到传输层或以上各层的协议转换）</li><li>交换机</li></ol></div></details></div></details><details class="toggle" ><summary class="toggle-button" style="">3、无线网络设备</summary><div class="toggle-content"><ol><li>无线网卡</li><li>无线 AP</li><li>无线网桥</li><li>无线路由器</li></ol></div></details><h3 id="网络服务器"><a href="#网络服务器" class="headerlink" title="网络服务器"></a>网络服务器</h3><blockquote><p>无重要考点</p></blockquote><h3 id="网络存储技术"><a href="#网络存储技术" class="headerlink" title="网络存储技术"></a>网络存储技术</h3><details class="toggle" ><summary class="toggle-button" style="">DAS🔥</summary><div class="toggle-content"><details class="toggle" ><summary class="toggle-button" style="">定义</summary><div class="toggle-content"><p>直接附加存储（Direct Attached Storage），DAS 将存储设备通过 SCSI 电缆直接连到服务器，其本身是硬件的堆叠，存储依赖于服务器，不带有任何存储操作系统。</p></div></details><details class="toggle" ><summary class="toggle-button" style="">缺点🔥</summary><div class="toggle-content"><p>当存储容量增加时，DAS 方式很难扩展，这对存储容量的升级是一个巨大的瓶颈。</p></div></details></div></details><details class="toggle" ><summary class="toggle-button" style="">NAS🔥</summary><div class="toggle-content"><details class="toggle" ><summary class="toggle-button" style="">定义</summary><div class="toggle-content"><p>网络附加存储（Network Attached Storage），通过网络接口与网络相连，由用户通过网络访问。</p></div></details><details class="toggle" ><summary class="toggle-button" style="">工作原理🔥</summary><div class="toggle-content"><p>NAS 技术支持多种 TCP&#x2F;IP 网络协议，主要是 NFS（网络文件存储系统）和 CIFS（通用 Internet 文件）来进行文件访问。</p></div></details><details class="toggle" ><summary class="toggle-button" style="">特点🔥</summary><div class="toggle-content"><ul><li>即插即用</li><li>小文件级的共享存取</li></ul></div></details><p><img src="https://picbed.qunarzz.com/7bb699e595dcd42ffa6d6a6b9ad5e982.png" alt="NAS 存储系统的结构"></p></div></details><details class="toggle" ><summary class="toggle-button" style="">SAN🔥</summary><div class="toggle-content"><details class="toggle" ><summary class="toggle-button" style="">定义</summary><div class="toggle-content"><p>存储区域网络（Storage Area Network），通过专用交换机将磁盘阵列与服务器连接起来的高速专用子网。</p></div></details><details class="toggle" ><summary class="toggle-button" style="">技术分类</summary><div class="toggle-content"><ol><li><strong>FC SAN</strong>：光纤通道的主要特性有：热插拔性、高速带宽、远程连接数量大。</li><li><strong>IP SAN</strong>：基于 IP 网络实现数据块级别存储方式的存储网络。</li><li><strong>IB SAN</strong>：是一种交换结构 I&#x2F;O 技术，其设计思路是通过一套中心机构在远程存储器、网络以及服务器等设备之间建立一个单一的连接链路，并由 IB 交换机来指挥流量。</li></ol></div></details><p><img src="https://picbed.qunarzz.com/61c61873ce628e907c850fe99eb9fe3a.png"></p></div></details><h3 id="网络接入技术"><a href="#网络接入技术" class="headerlink" title="网络接入技术"></a>网络接入技术</h3><details class="toggle" ><summary class="toggle-button" style="">1、有线接入</summary><div class="toggle-content"><ol><li>PSTN</li><li>ISDN</li><li>ADSL</li><li>FTTX+LAN</li><li>HFC<br>1.3.5网络接入技术</li></ol></div></details><details class="toggle" ><summary class="toggle-button" style="">2、无线接入</summary><div class="toggle-content"><p>无线网络是指以无线电波作为信息传输媒介🔥</p><p><strong>技术分类：</strong></p><ol><li>GPRS</li><li>无线接入</li><li>3G</li><li>4G</li><li>WIFI</li></ol></div></details><h3 id="网络规划与设计"><a href="#网络规划与设计" class="headerlink" title="网络规划与设计"></a>网络规划与设计</h3><details class="toggle" ><summary class="toggle-button" style="">1、网路分层设计🔥</summary><div class="toggle-content"><ul><li><strong>核心层🔥</strong>：主要目的通过<strong>高速的转发通信</strong>，提供优化，可靠的骨干传输结构，因此，核心层交换机应拥有更高的可靠性，性能和吞吐量。</li><li><strong>汇聚层🔥</strong>：是核心层与接入层的分界面，完成<strong>网络访问策略控制，数据包处理、过滤、寻址</strong>、以及其他的数据处理任务。</li><li><strong>接入层🔥</strong>：目的是允许终端用户连接到网络，因此，接入层交换机（或路由器）接入层具有<strong>低成</strong>本和<strong>高密度</strong>特性。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/youngjuning/images@main/1677082670910.png" alt="网络规划分层"></p></div></details><details class="toggle" ><summary class="toggle-button" style="">1、网络设计工作</summary><div class="toggle-content"><ol><li>网络拓扑结构设计</li><li>主干网络设计（核心层）设计</li><li>汇聚层和接入层设计</li><li>广域网连接与远程访问设计</li><li>无线网络设计</li><li>网络安全设计</li></ol><ul><li>信息安全的基本要素🔥</li></ul><ol start="7"><li>设备选型</li></ol><details class="toggle" ><summary class="toggle-button" style="">信息安全的基本要素🔥</summary><div class="toggle-content"><ol><li><strong>机密性🔥</strong>：确保信息不暴露给未授权的实体或进程</li><li><strong>完整性🔥</strong>：只有得到允许的人才能修改数据，并且能够判别出来数据是否已被篡改。</li><li><strong>可用性🔥</strong>：得到授权的实体在需要的时候可访问数据，即攻击者不能占用所有的资源而阻碍授权者的工作</li><li><strong>可控性🔥</strong>：可以控制授权范围内的信息流向及行为方式</li><li><strong>可审查性🔥</strong>：对出现的网络安全问题提供调查的依据和手段</li></ol></div></details></div></details><h3 id="数据库管理系统"><a href="#数据库管理系统" class="headerlink" title="数据库管理系统"></a>数据库管理系统</h3><details class="toggle" ><summary class="toggle-button" style="">关系型数据库</summary><div class="toggle-content"><ul><li><strong>Oracle</strong></li><li><strong>MySQL</strong></li><li><strong>SqlServer</strong></li><li>DB2</li><li>PostgreSQL</li><li>SQLite</li><li>Access</li></ul></div></details><details class="toggle" ><summary class="toggle-button" style="">非关系型数据库</summary><div class="toggle-content"><ul><li><strong>MongoDB</strong></li><li>Redis</li><li>HBase</li><li>Neo4j</li><li>Elasticsearch</li></ul></div></details><h3 id="数据仓库技术"><a href="#数据仓库技术" class="headerlink" title="数据仓库技术"></a>数据仓库技术</h3><details class="toggle" ><summary class="toggle-button" style="">特点🔥</summary><div class="toggle-content"><p>数据仓库是一个面向主题的，集成的，非易失的，且随时间变化的数据集合，用于支持管理决策。</p></div></details><details class="toggle" ><summary class="toggle-button" style="">体系结构</summary><div class="toggle-content"><ol><li><strong>数据源</strong>：是数据仓库系统的基础，是整个系统数据源泉。</li><li><strong>数据的存储与管理</strong>：是整个系统数据仓库系统的核心。</li><li><strong>OLAP（Online Analysis Processor，联机分析处理）服务器</strong>：对分析需要的数据进行有效集成，按多维模型予以组织，以便进行多角度、多层次的分析，并发现趋势。</li><li><strong>前端工具</strong>：主要包括各种查询工具，报表工具，分析工具，数据挖掘工具以及各种基于数据仓库或数据集的应用开发工具。其中数据分析工具主要针对OLAP，报表工具，数据挖掘工具主要针对数据仓库。</li></ol></div></details><p><img src="https://cdn.jsdelivr.net/gh/youngjuning/images@main/1677083599886.png" alt="数据仓库体系结构"></p><h3 id="中间件技术"><a href="#中间件技术" class="headerlink" title="中间件技术"></a>中间件技术</h3><details class="toggle" ><summary class="toggle-button" style="">1、定义</summary><div class="toggle-content"></div></details><details class="toggle" ><summary class="toggle-button" style="">2、分类</summary><div class="toggle-content"></div></details><details class="toggle" ><summary class="toggle-button" style="">3、中间件的选择</summary><div class="toggle-content"></div></details><h3 id="高可用性和高可靠性的规划与设计"><a href="#高可用性和高可靠性的规划与设计" class="headerlink" title="高可用性和高可靠性的规划与设计"></a>高可用性和高可靠性的规划与设计</h3><h2 id="软件工程"><a href="#软件工程" class="headerlink" title="软件工程"></a>软件工程</h2><h2 id="练一练"><a href="#练一练" class="headerlink" title="练一练"></a>练一练</h2><p>1、对象和类是面向对象中两个重要的概念，关于对象和类，不正确的是（）。 <em>19年11月第1题</em></p><p>A、对象是类的实例<br>B、类是对象的抽象<br>C、一个类只能产生一个对象<br>D、类中包含方法和属性</p><div class="hide-block"><button type="button" class="hide-button" style="">答案解析    </button><div class="hide-content"><p>【重要性】一定要掌握<br>【答案】<strong>C</strong><br>【解析】一个类可以产生多个对象</p></div></div><hr><p>2、TCP&#x2F;IP 模型中，Telnet 属于（）协议。 <em>19年5月19题</em></p><p>A、接口层<br>B、网络层<br>C、传输层<br>D、应用层</p><div class="hide-block"><button type="button" class="hide-button" style="">答案解析    </button><div class="hide-content"><p>【重要性】一定要掌握<br>【答案】<strong>D</strong><br>【解析】Telnet 是应用层协议。</p></div></div><hr><p>3、在信息系统的生命周期中，开发阶段不包括（）。 <em>19年5月3题</em></p><p>A、系统规划<br>B、系统设计<br>C、系统分析<br>D、系统实施</p><div class="hide-block"><button type="button" class="hide-button" style="">答案解析    </button><div class="hide-content"><p>【重要性】一定要掌握<br>【答案】<strong>A</strong><br>【解析】系统规划是立项阶段的，高级教材第三版 P10。</p></div></div><hr><p>4、（）的设计方法满足了信息系统快速响应需求与环境的变化，组织内部、组织之间各种应用系统的互相通信要求，提高了系统可复用性、信息资源共享和系统之间的互操作性。 <em>18年11月28题</em></p><p>A、面向对象<br>B、面向过程<br>C、基于构件<br>D、面向服务</p><div class="hide-block"><button type="button" class="hide-button" style="">答案解析    </button><div class="hide-content"><p>【重要性】一定要掌握<br>【答案】<strong>D</strong><br>【解析】从应用的角度来看，组织内部、组织之间各种应用系统的互相通信和互操作性直接影响着组织<br>对信息的掌握程度和处理速度。如何使信息系统快速响应需求与环境变化，提高系统可复用性、信息资<br>源共享和系统之间的互操作性，成为影响信息化建设效率的关键问题，而SO的思维方式恰好满足了这<br>种需求。</p></div></div><hr><p>5、在OSI七层协议中，UDP是（）的协议。 <em>18年11月第19题</em></p><p>A、网络层<br>B、传输层<br>C、会话层<br>D、应用层</p><div class="hide-block"><button type="button" class="hide-button" style="">答案解析    </button><div class="hide-content"><p>【重要性】一定要掌握<br>【答案】<strong>B</strong><br>【解析】(4)传输层：主要负责确保数据可靠、顺序、无错地从A点传输到B点。如提供建立、维护相拆<br>除传送连接的功能；选择网络层提供最合适的服务；在系统之间提供可靠的透明的数据传送，提供端到<br>端的错误恢复和流量控制。在TCP&#x2F;IP协议中，具体协议有TCP、UDP、SPX。</p></div></div><hr><p>6、（）的任务是：根据系统说明书规定的功能要求，考虑实际条件，具体设计实现逻辑模型的技术方<br>案。 <em>18年11月第3题</em></p><p>A、系统规划阶段<br>B、系统分析阶段<br>C、系统设计阶段<br>D、系统实施阶段</p><div class="hide-block"><button type="button" class="hide-button" style="">答案解析    </button><div class="hide-content"><p>【重要性】一定要掌握<br>【答案】<strong>C</strong><br>【解析】简单地说，系统分析阶段的任务是回答系统“做什么”的问题，而系统设计阶段要回答的问题<br>是“怎么做”。该阶段的任务是根据系统说明书中规定的功能要求，考虑实际条件，具体设计实现逻辑<br>模型的技术方案，也就是设计新系统的物理模型。这个阶段又称为物理设计阶段，可分为总体设计（概<br>要设计）和详细设计两个子阶段。这个阶段的技术文档是系统设计说明书。</p></div></div><hr><p>7、IEEE 802 规范定义了网卡如何访问传输介质，以及如何在传输介质上传输数据的方法。其中，（）<br>是重要的局域网协议。 <em>18年5月第11题</em></p><p>A、IEEE 802.1<br>B、IEEE 802.3<br>C、IEEE 802.6<br>D、IEEE 802.11</p><div class="hide-block"><button type="button" class="hide-button" style="">答案解析    </button><div class="hide-content"><p>【重要性】一定要掌握<br>【答案】<strong>B</strong><br>【解析】 IEEE 802.3 ：以太网介质访问控制协议 （CSMA&#x2F;CD）及物理层技术规范 [2]。<br>IEEE 802.11：无线局域网（WLAN）的介质访问控制协议及物理层技术规范。</p></div></div><hr><p>8、在开放系统互连参考模型(OSI)中，（ ）的主要功能是将网络地址翻译成对应的物理地址，并决定如<br>何将数据从发送方经路由送达到接收方。 <em>18年5月第20题</em></p><p>A、数据链路层<br>B、物理层<br>C、网络层<br>D、传输层</p><div class="hide-block"><button type="button" class="hide-button" style="">答案解析    </button><div class="hide-content"><p>【重要性】一定要掌握<br>【答案】<strong>C</strong><br>【解析】网络层中的协议主要有IP、ICMP、IGMP、ARP、和RARP等。 （1）IP，所提供的服务是无连接和不可靠的。<br>（2）ICMP(Internet Control Message Protocol，网络控制报文协议)，一种专门用于发送错报文的<br>协议，即传送的数据可能丢失、重复、延迟、或乱序传递，所以需要一种尽量避免差错并能发生差错时<br>报告的机制，这就是ICMP的功能。<br>（3）IGMP(Internet Group Management Protocol，网际组管理协议)允许在Internet中的计算机参<br>加多播，是计算机用做向相邻多路由器报告多目组成员的协议。<br>（4）ARP(Address Resolution Protocol，地址解析协议) 用于动态地完成IP到物理地址的转换。<br>（5）RARP(Reverse Address Resolution Protocol，反向地址解析协议)用于动态完成物理地址向IP<br>地址的转换。</p></div></div><hr><p>9、 TCP&#x2F;IP是internet的核心协议，应用程序通过用应用层协议利用网络完成数据交互的任务，其中，<br>（）是用来在客户机与服务器之间进行简单文件的传输的协议，提供不复杂，开销不大的文件传输服务。 <em>18年5月第19题</em></p><p>A、FTP<br>B、TFTP<br>C、HTTP<br>D、SMTP</p><div class="hide-block"><button type="button" class="hide-button" style="">答案解析    </button><div class="hide-content"><p>【重要性】一定要掌握<br>【答案】<strong>B</strong><br>【解析】TFTP（Trivial File Transfer Protocol,简单文件传输协议）是TCP&#x2F;IP协议族中的一个用来在客<br>户机与服务器之间进行简单文件传输的协议，提供不复杂、开销不大的文件传输服务。端口号为69。</p></div></div><hr><p>10、某快消品连锁企业委托科技公司A开发部署电子商务平台，A公司根据系统设计任务书所确定的范<br>围，确定系统的基本目标和逻辑功能要求，提出新系统的逻辑模型，这属于信息系统生命周期中（）阶<br>段的工作。 <em>18年5月第3题</em></p><p>A、系统规划<br>B、系统分析<br>C、系统设计<br>D、系统实施</p><div class="hide-block"><button type="button" class="hide-button" style="">答案解析    </button><div class="hide-content"><p>【重要性】一定要掌握<br>【答案】<strong>B</strong><br>【解析】系统分析阶段的任务是根据系统设计任务书所确定的范围，对现行系统进行详细调查，描述现<br>行系统的业务流程，指出现行系统的局限性和不足之处，确定新系统的基本目标和逻辑功能要求，即提<br>出新系统的逻辑模型。</p></div></div><hr><p>11、在软件需求分析中，（）分别用来表示功能模型和行为模型。 <em>19年11月第7题</em></p><p>A、数据流图、状态转换图<br>B、状态转换图、E-R图<br>C、状态转换图、数据流图<br>D、E-R图、状态转换图</p><div class="hide-block"><button type="button" class="hide-button" style="">答案解析    </button><div class="hide-content"><p>【重要性】一定要掌握<br>【答案】<strong>A</strong><br>【解析】E-R图是用来表示数据模型的，行为一般与状态有关。</p></div></div><hr><p>12、中间件是一种独立的系统软件或服务程序，（）不属于中间件。 <em>19年11月第2题</em><br>A、Tomcat<br>B、Websphere<br>C、ODBC<br>D、Python</p><div class="hide-block"><button type="button" class="hide-button" style="">答案解析    </button><div class="hide-content"><p>【重要性】一定要掌握<br>【答案】<strong>D</strong><br>【解析】Python 属于开发语言</p></div></div><hr><p>13、项目成员张工绘制了四张类图，其中不正确的是（）。 <em>19年5月第27题</em></p><p><img src="https://cdn.jsdelivr.net/gh/youngjuning/images@main/1677084628615.png"></p><div class="hide-block"><button type="button" class="hide-button" style="">答案解析    </button><div class="hide-content"><p>【答案】<strong>B</strong></p></div></div><hr><p>14、在 UML 的顺序图中，通常由左向右分层排列各个对象，正确的排列方法是（）。<em>19年5月第26题</em></p><p>A、执行者角色、控制类、用户接口、业务层、后台数据库<br>B、执行者角色、用户接口、控制类、业务层、后台数据库<br>C、执行者角色、控制类、用户接口、后台数据库、业务层<br>D、执行者角色、用户接口、业务层、控制类、后台数据库</p><div class="hide-block"><button type="button" class="hide-button" style="">答案解析    </button><div class="hide-content"><p>【重要性】一定要掌握<br>【答案】<strong>A</strong></p></div></div><hr><p>15、执行者与用例之间的关系是（）。 <em>19年5月第25题</em></p><p>A、包含关系<br>B、泛化关系<br>C、关联关系<br>D、扩展关系</p><div class="hide-block"><button type="button" class="hide-button" style="">答案解析    </button><div class="hide-content"><p>【重要性】一定要掌握<br>【答案】C<br>【解析】在用例图中执行者与用例之间是关联关系。</p></div></div><hr><p>16、UML的（）描述了一个特定对象的所有可能状态以及由于各种事件的发生而引起的状态之间的转移。 <em>18年11月第27题</em></p><p>A、控制图<br>B、状态图<br>C、协作图<br>D、序列图</p><div class="hide-block"><button type="button" class="hide-button" style="">答案解析    </button><div class="hide-content"><p>【重要性】一定要掌握<br>【答案】<strong>B</strong><br>【解析】状态图（state diagram）：状态图描述一个状态机，它由状态、转移、事件和活动组成。状态图给出了对象的动态视图。它对于接口、类或协作的行为建模尤为重要，而且它强调事件导致的对象行为，这非常有助于对反应式系统建模。</p></div></div><hr><p>17、某企业要建设信息系统平台，要求系统可用性达到99.99%。系统A平均无故障时间10000小时，故<br>障平均维修时间1小时：系统B平均无故障时间14000小时，故障平均维修时间1.5小时。以下说法中，<br>正确的是（）。 <em>18年11月第22题</em></p><p>A、只有系统A符合可用性要求<br>B、系统A和系统B均符合可用性要求<br>C、只有系统B符合可用性要求<br>D、系统A和系统B都不符合可用性要求</p><div class="hide-block"><button type="button" class="hide-button" style="">答案解析    </button><div class="hide-content"><p>【重要性】一定要掌握<br>【答案】<strong>A</strong><br>【解析】计算机系统的可用性用平均无故障时间(MTTF)来度量，即计算机系统平均能够正常运行多长<br>时间，才发生一次故障。系统的可用性越高，平均无故障时间越长。可维护性用平均维修时间(MTTR)<br>来度量，即系统发生故障后维修和重新恢复正常运行平均花费的时间。系统的可维护性越好，平均维修<br>时间越短。计算机系统的可用性定义为：MTTF&#x2F; (MTTF+MTTR) ,kl00%。由此可见，计算机系统的可<br>用性定义为系统保持正常运行时间的百分比。所以，想要提高一个系统的可用性，要么提升系统的单次<br>正常工作的时长，要么减少故障修复时间。<br>A的可用性&#x3D;10000&#x2F;10001&#x3D;99.99%<br>B的可用性&#x3D;14000&#x2F;14001.5 &#x3D; 99.98%<br>只有系统A负荷可用性要求</p></div></div><hr><p>18、关于网络存储技术的描述，正确的是：（）。<br>A、DAS 是一种易于扩展的存储技术<br>B、NAS 系统与 DAS 系统相同，都没有自己的文件系统<br>C、NAS 可以使用 TCP&#x2F;IP 作为其网络传输协议<br>D、SAN 采用了文件共享存取方式</p><div class="hide-block"><button type="button" class="hide-button" style="">答案解析    </button><div class="hide-content"><p>【重要性】一定要掌握<br>【答案】<strong>C</strong><br>【解析】NAS 技术支持多种 TCP&#x2F;IP 网络协议，主要是NFS (Net File System，网络文件系统)和 CIFS<br>（Common Internet File System，通用 Internet 文件系统）来进行文件访问，所以 NAS 的性能特点是<br>进行小文件级的共享存取。在具体使用时，NAS设备通常配置为文件服务器，通过使用基于 Web 的管<br>理界面来实现系统资源的配置、用户配置管理和用户访问登录等。</p></div></div><hr><p>19、软件需求是多层次的，包括业务需求、用户需求、系统需求，其中业务需求（）。 <em>18年11月第7题</em></p><p>A、反应了企业或客户对系统高层次的目标需求<br>B、描述了用户具体目标或者用户要求系统必须完成的任务<br>C、从系统角度来说明软件的需求，包括功能需求、非功能需求和设计约束<br>D、描述了用户任务系统应该具备的功能和性能</p><div class="hide-block"><button type="button" class="hide-button" style="">答案解析    </button><div class="hide-content"><p>【重要性】一定要掌握<br>【答案】<strong>A</strong><br>【解析】业务需求。业务需求是指反映企业或客户对系统高层次的目标要求，通常来自项目投资人、购买产品的客户、客户单位的管理人员、市场营销部门或产品策划部门等。通过业务需求可以确定项目视图和范围，项目视图和范围文档把业务需求集中在一个简单、紧凑的文档中，该文档为以后的开发工作奠定了基础。</p></div></div><hr><p>20、UML图不包括（）。 <em>18年5月第27题</em></p><p>A、用例图<br>B、序列图<br>C、组件图<br>D、继承图</p><div class="hide-block"><button type="button" class="hide-button" style="">答案解析    </button><div class="hide-content"><p>【重要性】一定要掌握<br>【答案】<strong>D</strong><br>【解析】类图表示类、接口和它们之间的协作关系，没有继承图</p></div></div>]]></content>
    
    
    <summary type="html">信息系统项目管理师考试属于全国计算机技术与软件专业技术资格考试中的一个高级考试。</summary>
    
    
    
    <category term="软考" scheme="https://youngjuning.js.org/categories/%E8%BD%AF%E8%80%83/"/>
    
    
    <category term="信息系统项目管理师" scheme="https://youngjuning.js.org/tags/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%B8%88/"/>
    
    <category term="信息化" scheme="https://youngjuning.js.org/tags/%E4%BF%A1%E6%81%AF%E5%8C%96/"/>
    
    <category term="信息系统" scheme="https://youngjuning.js.org/tags/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="高项" scheme="https://youngjuning.js.org/tags/%E9%AB%98%E9%A1%B9/"/>
    
  </entry>
  
  <entry>
    <title>信息系统项目管理师备考指南</title>
    <link href="https://youngjuning.js.org/9698ac1384d7/"/>
    <id>https://youngjuning.js.org/9698ac1384d7/</id>
    <published>2023-02-15T16:04:55.000Z</published>
    <updated>2023-02-26T03:10:50.583Z</updated>
    
    <content type="html"><![CDATA[<h2 id="考试介绍"><a href="#考试介绍" class="headerlink" title="考试介绍"></a>考试介绍</h2><p>全国计算机技术与软件专业技术资格考试设三个级别层次，五个专业，共有 27 种岗位资格考试。而<strong>信息系统项目管理师</strong>考试属于全国计算机技术与软件专业技术资格考试中的一个<strong>高级考试</strong>。</p><h2 id="报考条件"><a href="#报考条件" class="headerlink" title="报考条件"></a>报考条件</h2><p>信息系统项目管理师考试报考条件不设学历与资历条件、年龄以及专业等限制，考生可根据自己的技术水平选择合适的级别以及合适的资格进行报考。</p><blockquote><p>注意：每次考试每个人只允许报考一种资格。</p></blockquote><h2 id="考试流程"><a href="#考试流程" class="headerlink" title="考试流程"></a>考试流程</h2><ol><li><a href="https://bm.ruankao.org.cn/sign/welcome">报名</a>（2月 - 3月）</li><li>打印准考证（考前一周）</li><li>考试（5 月 27 日）</li><li>公布成绩（考后一个月左右）</li><li>领取证书（9 月份左右）</li></ol><h2 id="考题分析"><a href="#考题分析" class="headerlink" title="考题分析"></a>考题分析</h2><table><thead><tr><th align="center">科目</th><th align="center">内容</th><th align="center">时长</th><th align="center">考试时间</th></tr></thead><tbody><tr><td align="center">综合知识</td><td align="center">75道选择题，知识范围很广，包含：IT 知识、时事政治、项目管理、5 分的运筹学、5 分英语题</td><td align="center">150 分钟</td><td align="center">上午<br />9:00 - 11:00</td></tr><tr><td align="center">案例分析</td><td align="center">3 道大题：1 道计算题，2 道分析题</td><td align="center">90 分钟</td><td align="center">下午<br />1:30 - 3:00</td></tr><tr><td align="center">论文写作</td><td align="center">1 道论文题，考试范围：<strong>十大管理</strong>、安全管理、合同管理、招投标</td><td align="center">120 分钟</td><td align="center">下午<br />3:20 - 5:20</td></tr></tbody></table><h2 id="学习计划"><a href="#学习计划" class="headerlink" title="学习计划"></a>学习计划</h2><p>计划共历时 100 天，每天投入 2 - 3 小时，总投入预计 200 - 300 小时。</p><ul><li>第一阶段（35 天）(2023&#x2F;2&#x2F;15 - 2023&#x2F;3&#x2F;21)<ul><li>基础知识</li><li>计算专题</li></ul></li><li>第二阶段（50 天）(2023&#x2F;3&#x2F;22 - 2023&#x2F;5&#x2F;10)<ul><li>历年真题</li><li>案例分析</li><li>写作专题</li></ul></li><li>第三阶段 (15 天)（2023&#x2F;5&#x2F;11 - 2023&#x2F;5&#x2F;26）<ul><li>考前冲刺</li></ul></li></ul><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><ul><li><a href="https://www.ruankao.org.cn/">中国计算机技术资格网</a></li><li>软考真题 App<ul><li><a href="https://apps.apple.com/hk/app/%E8%BD%AF%E8%80%83%E7%9C%9F%E9%A2%98-2022%E4%BF%A1%E6%81%AF%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86-%E7%B3%BB%E7%BB%9F%E9%9B%86%E6%88%90/id1468131830">iOS</a></li><li><a href="https://www.wandoujia.com/apps/7873801">Android</a></li></ul></li><li>软考通 App<ul><li><a href="https://apps.apple.com/cn/app/%E8%BD%AF%E8%80%83%E9%80%9A-2022%E5%B9%B4%E8%BD%AF%E4%BB%B6%E6%B0%B4%E5%B9%B3%E8%80%83%E8%AF%95%E6%8F%90%E5%88%86%E7%A5%9E%E5%99%A8/id1498444438">iOS</a></li><li><a href="https://www.wandoujia.com/apps/8095598">Android</a></li></ul></li><li>软考刷题王<ul><li>#小程序:&#x2F;&#x2F;软考刷题王&#x2F;I4Jk3d4HRskRbaw</li></ul></li><li><img src="https://cdn.jsdelivr.net/gh/youngjuning/images@main/1677062492249.png" alt="杭州 E 类人才福利"></li></ul>]]></content>
    
    
    <summary type="html">信息系统项目管理师考试属于全国计算机技术与软件专业技术资格考试中的一个高级考试。</summary>
    
    
    
    <category term="软考" scheme="https://youngjuning.js.org/categories/%E8%BD%AF%E8%80%83/"/>
    
    
    <category term="信息系统项目管理师" scheme="https://youngjuning.js.org/tags/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%B8%88/"/>
    
    <category term="信息化" scheme="https://youngjuning.js.org/tags/%E4%BF%A1%E6%81%AF%E5%8C%96/"/>
    
    <category term="信息系统" scheme="https://youngjuning.js.org/tags/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="高项" scheme="https://youngjuning.js.org/tags/%E9%AB%98%E9%A1%B9/"/>
    
    <category term="计算机" scheme="https://youngjuning.js.org/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>word-wrap 和 word-break</title>
    <link href="https://youngjuning.js.org/c607ec2b5110/"/>
    <id>https://youngjuning.js.org/c607ec2b5110/</id>
    <published>2023-02-13T05:47:56.000Z</published>
    <updated>2023-02-26T03:10:50.583Z</updated>
    
    <content type="html"><![CDATA[<p>word-wrap 和 word-break 是一对用于单词断句的双生属性，但是又有微妙的区别，每次要用的时候还要重新翻一下 MDN 文档，本文力求通过一张流程图快速记忆两者如何使用。</p><h2 id="word-wrap"><a href="#word-wrap" class="headerlink" title="word-wrap"></a>word-wrap</h2><p>css 的 word-wrap 属性用来标明是否允许浏览器在单词内进行断句，这是为了防止当一个字符串太长而找不到它的自然断句点时产生溢出现象。</p><ul><li>normal：就是大家平常见得最多的正常的换行规则。</li><li>break-word：一行单词中实在没有其他靠谱的换行点的时候在单词内换行。</li></ul><h2 id="word-break"><a href="#word-break" class="headerlink" title="word-break"></a>word-break</h2><p>css 的 word-break 属性用来标明怎么样进行单词内的断句。</p><ul><li>normal：使用默认的换行规则，即如果一个单词很长，导致一行中剩下的空间已经放不下它时，则浏览器会把这个单词挪到下一行去。</li><li>break-all：允许单词断行，即如果一个单词很长，导致一行中剩下的空间已经放不下它时，则浏览器不会把这个单词挪到下一行去，而是在单词内换行。</li></ul><h2 id="搭配使用，换行不累"><a href="#搭配使用，换行不累" class="headerlink" title="搭配使用，换行不累"></a>搭配使用，换行不累</h2><p><img src="https://picbed.qunarzz.com/3d7e329ab089d28c7bde5be75573f1d3.png"></p><blockquote><p>参考资料来自 <a href="https://www.cnblogs.com/2050/archive/2012/08/10/2632256.html">你真的了解word-wrap和word-break的区别吗？</a> 和 <a href="https://www.zhangxinxu.com/wordpress/2015/11/diff-word-break-break-all-word-wrap-break-word/">word-break:break-all和word-wrap:break-word的区别</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;word-wrap 和 word-break 是一对用于单词断句的双生属性，但是又有微妙的区别，每次要用的时候还要重新翻一下 MDN 文档，本文力求通过一张流程图快速记忆两者如何使用。&lt;/p&gt;
&lt;h2 id=&quot;word-wrap&quot;&gt;&lt;a href=&quot;#word-wrap&quot; </summary>
      
    
    
    
    <category term="前端" scheme="https://youngjuning.js.org/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="CSS" scheme="https://youngjuning.js.org/categories/%E5%89%8D%E7%AB%AF/CSS/"/>
    
    
    <category term="CSS" scheme="https://youngjuning.js.org/tags/CSS/"/>
    
    <category term="word-wrap" scheme="https://youngjuning.js.org/tags/word-wrap/"/>
    
    <category term="word-break" scheme="https://youngjuning.js.org/tags/word-break/"/>
    
  </entry>
  
  <entry>
    <title>2023 年度计划</title>
    <link href="https://youngjuning.js.org/cb03d5cd6dce/"/>
    <id>https://youngjuning.js.org/cb03d5cd6dce/</id>
    <published>2023-01-31T03:50:26.000Z</published>
    <updated>2023-02-26T03:10:50.579Z</updated>
    
    <content type="html"><![CDATA[<h1 id="上半年"><a href="#上半年" class="headerlink" title="上半年"></a>上半年</h1><h2 id="继续教育-40"><a href="#继续教育-40" class="headerlink" title="继续教育 40%"></a>继续教育 40%</h2><blockquote><p>每天至少抽出两个小时备考</p></blockquote><ul><li>信息系统项目管理师</li></ul><h2 id="生活娱乐-30"><a href="#生活娱乐-30" class="headerlink" title="生活娱乐 30%"></a>生活娱乐 30%</h2><blockquote><p>每天至少 15 分钟的运动</p></blockquote><ul><li>备孕</li><li>落户杭州：为了以后孩子上学</li><li>减重到 145</li><li>带媳妇去一个海滨城市旅游</li></ul><h2 id="持续学习-30"><a href="#持续学习-30" class="headerlink" title="持续学习 30%"></a>持续学习 30%</h2><p>每天至少抽出一个小时学习</p><ul><li>《JavaScript 高级程序设计》复习一遍并产出一篇学习笔记</li><li>《React 设计》读一遍并产出一篇学习笔记</li><li>《JavaScript 数据结构与算法》读一遍并产出一篇学习笔记</li><li>力扣 200 两日刷一题</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;上半年&quot;&gt;&lt;a href=&quot;#上半年&quot; class=&quot;headerlink&quot; title=&quot;上半年&quot;&gt;&lt;/a&gt;上半年&lt;/h1&gt;&lt;h2 id=&quot;继续教育-40&quot;&gt;&lt;a href=&quot;#继续教育-40&quot; class=&quot;headerlink&quot; title=&quot;继续教育 40</summary>
      
    
    
    
    <category term="漫谈" scheme="https://youngjuning.js.org/categories/%E6%BC%AB%E8%B0%88/"/>
    
    
    <category term="年度计划" scheme="https://youngjuning.js.org/tags/%E5%B9%B4%E5%BA%A6%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>NPM 常用命令</title>
    <link href="https://youngjuning.js.org/8e944d3670b0/"/>
    <id>https://youngjuning.js.org/8e944d3670b0/</id>
    <published>2022-11-17T04:02:58.000Z</published>
    <updated>2023-02-26T03:10:50.579Z</updated>
    
    <content type="html"><![CDATA[<h2 id="全局"><a href="#全局" class="headerlink" title="全局"></a>全局</h2><ul><li><code>npm root --location=global</code>：查看全局包安装路径<blockquote><p>Mac 下默认的全局路径是：<code>/usr/local/lib/node_modules</code><br>Ubuntu 下默认的全局路径是: <code>/usr/lib/node_modules</code></p></blockquote></li><li><code>npm ls --location=global</code>：查看全局包列表<ul><li><code>npm ls --location=global --depth 0</code>：仅查看一级包</li><li><code>npm ls --location=global --depth 0 | grep packageName</code>：查看一级包并搜索相关包</li></ul></li></ul><h2 id="owner"><a href="#owner" class="headerlink" title="owner"></a>owner</h2><p>管理已经发布的包的所有权</p><ul><li><code>npm owner add &lt;user&gt; [&lt;@scope&gt;/]&lt;pkg&gt;</code>：给某个包添加用户</li><li><code>npm owner rm &lt;user&gt; [&lt;@scope&gt;/]&lt;pkg&gt;</code>：删除某个包的某个用户</li><li><code>npm owner ls [&lt;@scope&gt;/]&lt;pkg&gt;</code>：列出某个包的所有用户</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;全局&quot;&gt;&lt;a href=&quot;#全局&quot; class=&quot;headerlink&quot; title=&quot;全局&quot;&gt;&lt;/a&gt;全局&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;npm root --location=global&lt;/code&gt;：查看全局包安装路径&lt;blockquote&gt;
&lt;p</summary>
      
    
    
    
    <category term="前端" scheme="https://youngjuning.js.org/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="npm" scheme="https://youngjuning.js.org/tags/npm/"/>
    
    <category term="命令" scheme="https://youngjuning.js.org/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>2023 常用 NPM 包推荐</title>
    <link href="https://youngjuning.js.org/db7a22999938/"/>
    <id>https://youngjuning.js.org/db7a22999938/</id>
    <published>2022-11-02T07:58:31.000Z</published>
    <updated>2023-02-26T03:10:50.579Z</updated>
    
    <content type="html"><![CDATA[<p>帮助开发者从 NPM 包选型的角度感知和建立前端工程化体系。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h3><p><a href="https://www.npmjs.com/package/tape">tape</a></p><h2 id="编译工具"><a href="#编译工具" class="headerlink" title="编译工具"></a>编译工具</h2><ul><li><a href="https://www.npmjs.com/package/babel">babel</a></li></ul><h2 id="构建工具"><a href="#构建工具" class="headerlink" title="构建工具"></a>构建工具</h2><ul><li><a href="https://www.npmjs.com/package/webpack">webpack</a></li><li><a href="https://www.npmjs.com/package/rollup">rollup</a></li><li><a href="https://www.npmjs.com/package/esbuild">esbuild</a></li></ul><h2 id="dotenv"><a href="#dotenv" class="headerlink" title="dotenv"></a>dotenv</h2><ul><li><a href="https://www.npmjs.com/package/dotenv">dotenv</a></li></ul><h2 id="Node-js-CLI"><a href="#Node-js-CLI" class="headerlink" title="Node.js CLI"></a>Node.js CLI</h2><h3 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h3><ul><li><a href="https://www.npmjs.com/package/commander">commander</a>: Node.js命令行界面的完整解决方案,受Ruby Commander启发。 前端开发node cli 必备技能。</li><li><a href="https://www.npmjs.com/package/yargs">yargs</a>: 功能比较全，但是使用起来比较复杂。</li></ul><h3 id="命令行参数解析"><a href="#命令行参数解析" class="headerlink" title="命令行参数解析"></a>命令行参数解析</h3><ul><li><a href="https://www.npmjs.com/package/yargs-parser">yargs-parser</a>：yargs 命令行框架内置的命令行参数解析库，功能比较全，比较适合工程化实用。</li><li><a href="https://www.npmjs.com/package/minimist">minimist</a>：如果你喜欢轻量级的技术，那么 minimist 足够简单好用，代码量也很少（只有几百行），非常适合研读。</li><li>inquire.js</li><li>chalk: 美化命令行的模块</li><li>ora: 优雅的 spinner</li><li>ncp: 异步的拷贝文件，包含空文件夹</li><li>recursive-readdir: 递归地列出目录和子目录下的所有文件，不包含目录本身。</li><li>shelljs: 在 Node.js 中执行 Unix shell 命令</li><li>log-symbols: 打印日志的特殊标志</li><li><a href="https://www.npmjs.com/package/download-git-repo">download-git-repo</a>: Download and extract a git repository (GitHub, GitLab, Bitbucket) from node</li><li><a href="https://www.npmjs.com/package/global-prefix">global-prefix</a>: 获取 npm 全局安装的前缀</li><li><a href="https://www.npmjs.com/package/exec-sh">exec-sh</a>: 执行 shell 命令转发所有 stdio 流，比 shelljs exec 命令好用</li><li><a href="https://www.npmjs.com/package/wml">wml</a>: wml 侦听某个文件夹中的更改（使用 watchman），然后将更改的文件复制到另一个文件夹中。</li><li><a href="https://blog.ihaiu.com/cmd-open/">cmd-open</a>: 扩展 Windows 命令 open</li><li><a href="https://github.com/shelljs/shx">shx</a>: shx is a wrapper around ShellJS Unix commands, providing an easy solution for simple Unix-like, cross-platform commands in npm package scripts.</li></ul><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><h3 id="css-modules"><a href="#css-modules" class="headerlink" title="css modules"></a>css modules</h3><ul><li><a href="https://www.npmjs.com/package/clsx">clsx</a></li><li><a href="https://www.npmjs.com/package/classnames">classnames</a></li></ul><h3 id="css-in-js"><a href="#css-in-js" class="headerlink" title="css-in-js"></a>css-in-js</h3><ul><li><a href="https://www.npmjs.com/package/styled-components">styled-components</a></li></ul><h2 id="React"><a href="#React" class="headerlink" title="React"></a>React</h2><h3 id="状态管理"><a href="#状态管理" class="headerlink" title="状态管理"></a>状态管理</h3><ul><li><a href="https://www.npmjs.com/package/redux">redux</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;帮助开发者从 NPM 包选型的角度感知和建立前端工程化体系。&lt;/p&gt;
&lt;h2 id=&quot;测试&quot;&gt;&lt;a href=&quot;#测试&quot; class=&quot;headerlink&quot; title=&quot;测试&quot;&gt;&lt;/a&gt;测试&lt;/h2&gt;&lt;h3 id=&quot;单元测试&quot;&gt;&lt;a href=&quot;#单元测试&quot; class</summary>
      
    
    
    
    <category term="前端" scheme="https://youngjuning.js.org/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="NPM" scheme="https://youngjuning.js.org/tags/NPM/"/>
    
  </entry>
  
  <entry>
    <title>前端无感知刷新 Token</title>
    <link href="https://youngjuning.js.org/ac2c22966f31/"/>
    <id>https://youngjuning.js.org/ac2c22966f31/</id>
    <published>2022-10-31T05:43:33.000Z</published>
    <updated>2023-02-26T03:10:50.583Z</updated>
    
    <content type="html"><![CDATA[<p>为了安全考虑，一般后端都要求在请求接口时传递登录的 Token。为了防止 Token 泄漏的风险，服务器的 Token 一般不会设置太长时间，比如我最近联调的，两个小时就会过期，token 过期就需要重新登陆。频繁要求登陆会造成用户体验差，所以后端同时会提供刷新 Token 的接口，本文就是记录一下几种无感知刷新的方法。</p><h2 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h2><p>在登录时，后端返回过期时间，前端每次请求就判断 token 的过期时间，如果快到过期时间，就去调用刷新 token 接口，我们可以封装一个 refreshToken 方法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">refreshToken</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="title function_">dayjs</span>().<span class="title function_">diff</span>(<span class="params">LOCAL_REFRESH_TIME &gt; LOCAL_EXPIRE</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">global</span>.<span class="property">workPromise</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">global</span>.<span class="property">workPromise</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">global</span>.<span class="property">workPromise</span> = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">async</span> (resolve) =&gt; &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123;data&#125; = <span class="keyword">await</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">`https://api.com/login`</span>,</span><br><span class="line">        <span class="comment">// other config</span></span><br><span class="line">        <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="comment">// 更新 LOCAL_REFRESH_TIME</span></span><br><span class="line">      <span class="variable language_">global</span>.<span class="property">workPromise</span> = <span class="literal">null</span>;</span><br><span class="line">      <span class="title function_">resolve</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">global</span>.<span class="property">workPromise</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Access</span>_Token</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法主要原理是通过将 refresh 接口请求存在全局的 workPromise 中来保证在并发请求接口时只存在一个请求。</p><h2 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h2><p>登录时设置定时器刷新 token 接口，请求的时候判断当前是否有 workPromise 存在，如果存在就等刷新完成。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 登录后设置定时器</span></span><br><span class="line"><span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">global</span>.<span class="property">workPromise</span> = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">async</span> (resolve) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;data&#125; = <span class="keyword">await</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`https://api.com/login`</span>,</span><br><span class="line">      <span class="comment">// other config</span></span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    cookies.<span class="title function_">set</span>(<span class="string">&#x27;refresh_time&#x27;</span>)</span><br><span class="line">    <span class="variable language_">global</span>.<span class="property">workPromise</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="title function_">resolve</span>()</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;, <span class="variable constant_">EXPIRE</span> / <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">request</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">global</span>.<span class="property">workPromise</span>) &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">global</span>.<span class="title function_">workPromise</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方案由于有定时器一直存在，会额外消耗资源，不推荐使用。</p><h2 id="方案三"><a href="#方案三" class="headerlink" title="方案三"></a>方案三</h2><p>如果使用了 axios，可以在请求响应拦截器中拦截，判断 token 返回过期后，调用刷新 token 接口。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 是否正在刷新的标记</span></span><br><span class="line"><span class="keyword">let</span> isRefreshing = <span class="literal">false</span></span><br><span class="line"><span class="comment">//重试队列</span></span><br><span class="line"><span class="keyword">let</span> requests = []</span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//约定code 409 token 过期</span></span><br><span class="line">    <span class="keyword">if</span> (response.<span class="property">data</span>.<span class="property">code</span> === <span class="number">409</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!isRefreshing) &#123;</span><br><span class="line">        isRefreshing = <span class="literal">true</span></span><br><span class="line">        <span class="comment">//调用刷新token的接口</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">refreshToken</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">const</span> &#123; token &#125; = res.<span class="property">data</span></span><br><span class="line">          <span class="comment">// 替换token</span></span><br><span class="line">          <span class="title function_">setToken</span>(token)</span><br><span class="line">          response.<span class="property">headers</span>.<span class="property">Authorization</span> = <span class="string">`<span class="subst">$&#123;token&#125;</span>`</span></span><br><span class="line">           <span class="comment">// token 刷新后将数组的方法重新执行</span></span><br><span class="line">          requests.<span class="title function_">forEach</span>(<span class="function">(<span class="params">cb</span>) =&gt;</span> <span class="title function_">cb</span>(token))</span><br><span class="line">          requests = [] <span class="comment">// 重新请求完清空</span></span><br><span class="line">          <span class="keyword">return</span> <span class="title function_">service</span>(response.<span class="property">config</span>)</span><br><span class="line">        &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">//跳到登录页</span></span><br><span class="line">          <span class="title function_">removeToken</span>()</span><br><span class="line">          router.<span class="title function_">push</span>(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">          <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(err)</span><br><span class="line">        &#125;).<span class="title function_">finally</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          isRefreshing = <span class="literal">false</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 返回未执行 resolve 的 Promise</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// 用函数形式将 resolve 存入，等待刷新后再执行</span></span><br><span class="line">          requests.<span class="title function_">push</span>(<span class="function"><span class="params">token</span> =&gt;</span> &#123;</span><br><span class="line">            response.<span class="property">headers</span>.<span class="property">Authorization</span> = <span class="string">`<span class="subst">$&#123;token&#125;</span>`</span></span><br><span class="line">            <span class="title function_">resolve</span>(<span class="title function_">service</span>(response.<span class="property">config</span>))</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> response &amp;&amp; response.<span class="property">data</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;为了安全考虑，一般后端都要求在请求接口时传递登录的 Token。为了防止 Token 泄漏的风险，服务器的 Token 一般不会设置太长时间，比如我最近联调的，两个小时就会过期，token 过期就需要重新登陆。频繁要求登陆会造成用户体验差，所以后端同时会提供刷新 Token</summary>
      
    
    
    
    <category term="前端" scheme="https://youngjuning.js.org/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="网络编程" scheme="https://youngjuning.js.org/tags/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 隐式类型转换之相等操作符</title>
    <link href="https://youngjuning.js.org/f1f7395da421/"/>
    <id>https://youngjuning.js.org/f1f7395da421/</id>
    <published>2022-04-16T09:32:32.000Z</published>
    <updated>2023-02-26T03:10:50.579Z</updated>
    
    <content type="html"><![CDATA[<p>隐式类型转换多存在于使用 <code>==</code> 进行比较的场景，例如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;a == b&#x27;</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>不同类型的值用相等运算符比较后的结果，可以用下表总结。</p><p><img src="https://s2.loli.net/2022/04/16/WZboPTdBRmXQkja.png"></p><p><code>toNumber</code> 方法对不同类型返回的结果如下。</p><p><img src="https://s2.loli.net/2022/04/17/VQ7BxmTqcOFUh34.png"></p><p><code>toPrimitive()</code>：如果对象的 <code>valueOf</code> 方法的结果是原始值，返回原始值；如果对象的 <code>toString</code> 方法返回原始值，就返回这个值；其他情况都返回一个错误。</p><p>用例子来验证一下表格中的结果。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="literal">true</span> == <span class="string">&#x27;true&#x27;</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><ul><li>首先，布尔值会被 <code>toNumber</code> 方法转换为数字，因此得到 <code>true == 1</code></li><li>其次，用 <code>toNumber</code> 转换字符串值。因为字符串包含字母，所以会被转成 <code>NaN</code>，因此表达式就变成了 <code>1 == NaN</code>，结果就是 false。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;隐式类型转换多存在于使用 &lt;code&gt;==&lt;/code&gt; 进行比较的场景，例如：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;</summary>
      
    
    
    
    <category term="前端" scheme="https://youngjuning.js.org/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="JavaScript" scheme="https://youngjuning.js.org/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>for-in 和 for-of 的区别</title>
    <link href="https://youngjuning.js.org/124e984dfd7e/"/>
    <id>https://youngjuning.js.org/124e984dfd7e/</id>
    <published>2022-04-12T09:13:30.000Z</published>
    <updated>2023-02-26T03:10:50.583Z</updated>
    
    <content type="html"><![CDATA[<h1 id="迭代的输入不同"><a href="#迭代的输入不同" class="headerlink" title="迭代的输入不同"></a>迭代的输入不同</h1><ul><li><code>for...in</code> 可以对任何对象进行操作；它通常被用作检查对象的属性。</li><li><code>for...of</code> 只能对可迭代对象进行操作；它通常被用作迭代数组的元素。</li></ul><h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">b</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">c</span>: <span class="number">3</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(key); <span class="comment">// &quot;a&quot;, &quot;b&quot;, &quot;c&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> value <span class="keyword">of</span> obj) &#123; <span class="comment">// Uncaught TypeError: obj is not iterable</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="迭代的输出不同"><a href="#迭代的输出不同" class="headerlink" title="迭代的输出不同"></a>迭代的输出不同</h1><ul><li><code>for...in</code> 返回被迭代对象的键列表</li><li><code>for...of</code> 返回被迭代对象的数字属性的值列表</li></ul><h2 id="代码示例-1"><a href="#代码示例-1" class="headerlink" title="代码示例"></a>代码示例</h2><h3 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> list = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>];</span><br><span class="line">list.<span class="property">foo</span> = <span class="string">&quot;bar&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">in</span> list) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(i); <span class="comment">// &quot;0&quot;, &quot;1&quot;, &quot;2&quot;, &quot;foo&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> list) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(i); <span class="comment">// &quot;&quot;4&quot;, &quot;5&quot;, &quot;6&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h3><p><img src="https://s2.loli.net/2022/04/12/RycBMqHSUPr8uXg.png"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> pets = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="string">&#x27;cat&#x27;</span>, <span class="string">&#x27;dog&#x27;</span>, <span class="string">&#x27;bat&#x27;</span>]);</span><br><span class="line">pets[<span class="string">&quot;species&quot;</span>] = <span class="string">&quot;mammal&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> pet <span class="keyword">in</span> pets) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(pet); <span class="comment">// &quot;species&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> pet <span class="keyword">of</span> pets) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(pet); <span class="comment">// &quot;cat&quot;, &quot;dog&quot;, &quot;bat&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h3><p><img src="https://s2.loli.net/2022/04/12/x3WkK54cEUq2pDn.png"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> pets = <span class="keyword">new</span> <span class="title class_">Map</span>([[<span class="string">&quot;1&quot;</span>, <span class="string">&quot;cat&quot;</span>],[<span class="string">&quot;2&quot;</span>, <span class="string">&quot;dog&quot;</span>],[<span class="string">&quot;3&quot;</span>, <span class="string">&quot;bat&quot;</span>]]);</span><br><span class="line">pets[<span class="string">&quot;species&quot;</span>] = <span class="string">&quot;mammal&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> pet <span class="keyword">in</span> pets) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(pet); <span class="comment">// &quot;species&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> pet <span class="keyword">of</span> pets) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(pet); <span class="comment">// [&quot;1&quot;, &quot;cat&quot;], [&quot;2&quot;, &quot;dog&quot;], [&quot;3&quot;, &quot;bat&quot;]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://stackoverflow.com/questions/29285897/what-is-the-difference-between-for-in-and-for-of-statements">What is the difference between ( for… in ) and ( for… of ) statements?</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;迭代的输入不同&quot;&gt;&lt;a href=&quot;#迭代的输入不同&quot; class=&quot;headerlink&quot; title=&quot;迭代的输入不同&quot;&gt;&lt;/a&gt;迭代的输入不同&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;for...in&lt;/code&gt; 可以对任何对象进行操作；它通常被用作检查对象</summary>
      
    
    
    
    <category term="前端" scheme="https://youngjuning.js.org/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="https://youngjuning.js.org/categories/%E5%89%8D%E7%AB%AF/JavaScript/"/>
    
    
    <category term="面试题" scheme="https://youngjuning.js.org/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB 学习笔记</title>
    <link href="https://youngjuning.js.org/69a1dcb04fe1/"/>
    <id>https://youngjuning.js.org/69a1dcb04fe1/</id>
    <published>2022-04-12T08:55:53.000Z</published>
    <updated>2023-02-26T03:10:50.579Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MongoDB-介绍"><a href="#MongoDB-介绍" class="headerlink" title="MongoDB 介绍"></a>MongoDB 介绍</h1><blockquote><p>一个面向文档对象的数据库。</p></blockquote><p>MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。</p><p>MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。</p><h1 id="管理-MongoDB"><a href="#管理-MongoDB" class="headerlink" title="管理 MongoDB"></a>管理 MongoDB</h1><h2 id="安装-MongoDB"><a href="#安装-MongoDB" class="headerlink" title="安装 MongoDB"></a>安装 MongoDB</h2><p>首先确保你的包是最新的：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt upgrade -y</span><br></pre></td></tr></table></figure><p>然后安装 MongoDB：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install mongodb</span><br></pre></td></tr></table></figure><p>检查 mongodb 服务的状态：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status mongodb</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/04/13/YX7SqhNajgwHuZv.png"></p><p>可以看到，服务正常启动了。</p><h2 id="管理-MongoDB-1"><a href="#管理-MongoDB-1" class="headerlink" title="管理 MongoDB"></a>管理 MongoDB</h2><h3 id="服务状态管理"><a href="#服务状态管理" class="headerlink" title="服务状态管理"></a>服务状态管理</h3><p>MongoDB 目前是一个 <code>systemd</code> 服务，因此我们使用 <code>systemctl</code> 来检查和修改它的状态，使用以下命令：</p><ul><li>查看运行状态：<code>sudo systemctl status mongodb</code></li><li>停止服务状态：<code>sudo systemctl stop mongodb</code></li><li>启动服务状态：<code>sudo systemctl start mongodb</code></li><li>重启服务状态：<code>sudo systemctl restart mongodb</code></li><li>启用开机自启动：<code>sudo systemctl enable mongodb</code></li><li>禁用开机自启动：<code>sudo systemctl disable mongodb</code></li></ul><h3 id="配置管理"><a href="#配置管理" class="headerlink" title="配置管理"></a>配置管理</h3><ul><li>查看配置文件：<code>sudo nano /etc/mongodb.conf</code></li></ul><h3 id="日志管理"><a href="#日志管理" class="headerlink" title="日志管理"></a>日志管理</h3><ul><li>查看日志：<code>sudo journalctl -u mongodb</code></li><li>查看错误日志：<code>sudo journalctl -u mongodb --no-pager -n 100 -f | grep -i error</code></li><li>查看警告日志：<code>sudo journalctl -u mongodb --no-pager -n 100 -f | grep -i warning</code></li><li>查看提示日志：<code>sudo journalctl -u mongodb --no-pager -n 100 -f | grep -i notice</code></li></ul><h3 id="卸载-MongoDB"><a href="#卸载-MongoDB" class="headerlink" title="卸载 MongoDB"></a>卸载 MongoDB</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo systemctl stop mongodb</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt purge mongodb</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt autoremove</span></span><br></pre></td></tr></table></figure><h2 id="远程管理-MongoDB"><a href="#远程管理-MongoDB" class="headerlink" title="远程管理 MongoDB"></a>远程管理 MongoDB</h2><p>默认无法远程访问 MongoDB，我们需要先在服务器安全组中开放 <code>27017</code> 端口，然后再进行配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo /etc/mongodb.conf</span></span><br></pre></td></tr></table></figure><p>修改  <code>bind_ip = 0.0.0.0</code> 为 <code>bind_ip = 0.0.0.0</code>，然后重启服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo systemctl restart mongodb</span></span><br></pre></td></tr></table></figure><p>安装 <a href="https://studio3t.com/free">Studio 3T for Free</a>，然后连接：</p><p><img src="https://s2.loli.net/2022/04/13/tUBEgnVpSAc715F.png"></p><h2 id="安全管理"><a href="#安全管理" class="headerlink" title="安全管理"></a>安全管理</h2><p>默认我们不需要认证即可连接 MongoDB，这是很危险的，我们需要设置一个管理员用户来认证：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mongo</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">use admin</span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">db.createUser(&#123;user:<span class="string">&quot;admin&quot;</span>, <span class="built_in">pwd</span>:<span class="string">&quot;123456&quot;</span>, roles:[&#123;role:<span class="string">&quot;userAdminAnyDatabase&quot;</span>, db:<span class="string">&quot;admin&quot;</span>&#125;]&#125;)</span></span><br></pre></td></tr></table></figure><p>然后配置 MongoDB 的安全策略：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo nano /etc/mongodb.conf</span></span><br></pre></td></tr></table></figure><p>将 <code>security.authorization = enabled</code> 写入文件，然后重启服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart mongodb</span><br></pre></td></tr></table></figure><p>在 Studio 3T 中配置用户名密码即可，需要注意的是 Authentication DB 需要填写对应的。</p><p><img src="https://s2.loli.net/2022/04/13/fLhd9t1sZ8KTaRA.png"></p><p>更多安全知识参考 <a href="https://help.aliyun.com/document_detail/112035.html">MongoDB数据库未授权访问漏洞防御最佳实践</a></p><h1 id="MongoDB-概念"><a href="#MongoDB-概念" class="headerlink" title="MongoDB 概念"></a>MongoDB 概念</h1><ul><li>database：数据库，是 MongoDB 的核心，用来存储数据，每个数据库都有自己的集合，集合中存储的是数据。</li><li>collection：集合，相当于关系型数据库中的表（table）</li><li>document：文档，相当于关系型数据库中的行（row）</li><li>field：字段，相当于关系型数据库中的列（column）</li><li>index：索引，相当于关系型数据库中的索引</li><li>primary key：主键，相当于关系型数据库中的主键，MongoDB 中主键的名称默认为 <code>_id</code></li></ul><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>一个 mongodb 中可以建立多个数据库。 MongoDB 的默认数据库为 <code>db</code>，该数据库存储在 data 目录中。</p><p>MongoDB 的单个实例可以容纳多个独立的数据库，每一个都有自己的集合和权限，不同的数据库也防止在不同的文件中。</p><p><code>show dbs</code> 命令可以显示所有数据的列表。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mongo</span></span><br><span class="line">MongoDB shell version v3.6.3</span><br><span class="line">connecting to: mongodb://127.0.0.1:27017</span><br><span class="line">MongoDB server version: 3.6.3</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">show dbs</span></span><br><span class="line">admin   0.000GB</span><br><span class="line">config  0.000GB</span><br><span class="line">local   0.000GB</span><br></pre></td></tr></table></figure><p>运行 <code>use</code> 命令可以切换数据库，如果不存在则会自动创建。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">use <span class="built_in">test</span></span></span><br><span class="line">switched to db test</span><br></pre></td></tr></table></figure><p>执行 <code>db</code> 命令可以显示当前数据库对象或集合。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">db</span></span><br><span class="line">test</span><br></pre></td></tr></table></figure><h3 id="数据库命名规范"><a href="#数据库命名规范" class="headerlink" title="数据库命名规范"></a>数据库命名规范</h3><ul><li>不能是空字符</li><li>不能含有 <code>&#39; &#39;</code>（空格）、<code>.</code>、<code>/</code>、<code>\</code> 和 <code>\0</code>（空字符）</li><li>应全部小写</li><li>最多 64 字节</li></ul><h3 id="默认数据库"><a href="#默认数据库" class="headerlink" title="默认数据库"></a>默认数据库</h3><ul><li>admin：从权限的角度来看，这是 root 数据库。要是将一个用户添加到这个数据库，这个用户自动继承所有数据库的权限。一些特定的服务器端命令也只能从这个数据库运行，比如列出所有的数据库或者关闭服务器。</li><li>local：这个数据永远不会被复制，可以用来存储限于本地单台服务器的任意集合。</li><li>config：当 Mongo 用于分片设置时，config 数据库在内部使用，用于保存分片的相关信息。</li></ul><h1 id="连接-MongoDB"><a href="#连接-MongoDB" class="headerlink" title="连接 MongoDB"></a>连接 MongoDB</h1><p>标准 URI 连接语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]</span><br></pre></td></tr></table></figure><ul><li><code>mongodb://</code>：这是固定的格式，必须指定</li><li><code>username:password@</code>：可选项，如果设置，在连接数据库服务器之后，驱动都会尝试登录这个数据库</li><li><code>host1</code>：必须的，指定至少一个 host，host1 是这个 URI 唯一要填写的。它指定了要连接服务器的地址。如果要连接复制集，请指定多个主机地址。</li><li><code>portX</code>：可选的指定端口，如果不填，默认为 27017</li><li><code>/database</code>：如果指定 <code>username:password@</code>，连接并验证登录指定数据库。若不指定，默认打开 test 数据库。</li><li><code>?options</code>：是连接选项。如果不使用 <code>/database</code>，则前面需要加上 <code>/</code>。所有连接选项都是键值对 <code>name=value</code>，键值对之间通过 <code>&amp;</code> 或 <code>;</code> 隔开</li></ul><h2 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h2><h3 id="安装驱动"><a href="#安装驱动" class="headerlink" title="安装驱动"></a>安装驱动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">yarn add mongodb</span></span><br></pre></td></tr></table></figure><h3 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h3><p>要在 MongoDB 中创建一个数据库，首先我们需要创建一个 MongoClient 对象，然后配置好指定的 URL 和端口号。</p><p>如果数据库不存在，MongoDB 将创建数据库并建立连接。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">MongoClient</span> = <span class="built_in">require</span>(<span class="string">&#x27;mongodb&#x27;</span>).<span class="property">MongoClient</span>;</span><br><span class="line"><span class="keyword">var</span> url = <span class="string">&quot;mongodb://localhost:27017/luozhu&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">MongoClient</span>.<span class="title function_">connect</span>(url, <span class="keyword">function</span>(<span class="params">err, db</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;数据库已创建！&quot;</span>);</span><br><span class="line">  db.<span class="title function_">close</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="创建集合"><a href="#创建集合" class="headerlink" title="创建集合"></a>创建集合</h3><p>我们可以使用 <code>createCollection()</code> 方法来创建一个集合，这个集合可以是空的，也可以包含数据。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">MongoClient</span> = <span class="built_in">require</span>(<span class="string">&#x27;mongodb&#x27;</span>).<span class="property">MongoClient</span>;</span><br><span class="line"><span class="keyword">var</span> url = <span class="string">&quot;mongodb://localhost:27017/luozhu&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">MongoClient</span>.<span class="title function_">connect</span>(url, <span class="keyword">function</span>(<span class="params">err, db</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">  <span class="keyword">var</span> dbo = db.<span class="title function_">db</span>(<span class="string">&quot;luozhu&quot;</span>);</span><br><span class="line">  dbo.<span class="title function_">createCollection</span>(<span class="string">&quot;site&quot;</span>, <span class="keyword">function</span>(<span class="params">err, res</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;集合已创建！&quot;</span>);</span><br><span class="line">    db.<span class="title function_">close</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><p>以下实例我们连接数据库 luozhu 的 site 表，并插入一条数据。使用 <code>insertOne()</code> 。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">MongoClient</span> = <span class="built_in">require</span>(<span class="string">&#x27;mongodb&#x27;</span>).<span class="property">MongoClient</span>;</span><br><span class="line"><span class="keyword">var</span> url = <span class="string">&quot;mongodb://localhost:27017/luozhu&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">MongoClient</span>.<span class="title function_">connect</span>(url, <span class="keyword">function</span>(<span class="params">err, db</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">  <span class="keyword">var</span> dbo = db.<span class="title function_">db</span>(<span class="string">&quot;luozhu&quot;</span>);</span><br><span class="line">  <span class="keyword">var</span> myobj = &#123; <span class="attr">name</span>: <span class="string">&quot;Google&quot;</span>, <span class="attr">address</span>: <span class="string">&quot;https://google.com&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line">  dbo.<span class="title function_">collection</span>(<span class="string">&quot;site&quot;</span>).<span class="title function_">insertOne</span>(myobj, <span class="keyword">function</span>(<span class="params">err, res</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;文档插入成功&quot;</span>);</span><br><span class="line">    db.<span class="title function_">close</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>如果要插入多条数据，可以使用 <code>insertMany()</code> 。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">MongoClient</span> = <span class="built_in">require</span>(<span class="string">&quot;mongodb&quot;</span>).<span class="property">MongoClient</span>;</span><br><span class="line"><span class="keyword">var</span> url = <span class="string">&quot;mongodb://localhost:27017/&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">MongoClient</span>.<span class="title function_">connect</span>(url, <span class="keyword">function</span>(<span class="params">err, db</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">  <span class="keyword">var</span> dbo = db.<span class="title function_">db</span>(<span class="string">&quot;luozhu&quot;</span>);</span><br><span class="line">  <span class="keyword">var</span> myobj = [</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;Facebook&#x27;</span>, <span class="attr">website</span>: <span class="string">&#x27;https://www.facebook.com/&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;Github&#x27;</span>, <span class="attr">website</span>: <span class="string">&#x27;https://github.com&#x27;</span>&#125;</span><br><span class="line">  ]</span><br><span class="line">  dbo.<span class="title function_">collection</span>(<span class="string">&quot;site&quot;</span>).<span class="title function_">insertMany</span>(myobj, <span class="keyword">function</span>(<span class="params">err, res</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;文档插入成功&quot;</span>, res.<span class="property">insertedCount</span>);</span><br><span class="line">    db.<span class="title function_">close</span>();</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h3><h4 id="查询所有数据"><a href="#查询所有数据" class="headerlink" title="查询所有数据"></a>查询所有数据</h4><p>可以使用 <code>find()</code> 来查找数据。<code>find()</code> 可以返回符合条件的所有数据。如果未指定条件，<code>find()</code> 返回集合中的所有数据。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">MongoClient</span> = <span class="built_in">require</span>(<span class="string">&quot;mongodb&quot;</span>).<span class="property">MongoClient</span>;</span><br><span class="line"><span class="keyword">var</span> url = <span class="string">&quot;mongodb://localhost:27017/&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">MongoClient</span>.<span class="title function_">connect</span>(url, <span class="keyword">function</span>(<span class="params">err, db</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span>(err) <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">  <span class="keyword">var</span> dbo = db.<span class="title function_">db</span>(<span class="string">&quot;luozhu&quot;</span>);</span><br><span class="line"></span><br><span class="line">  dbo.<span class="title function_">collection</span>(<span class="string">&quot;site&quot;</span>).<span class="title function_">find</span>(&#123;&#125;).<span class="title function_">toArray</span>(<span class="keyword">function</span>(<span class="params">err, result</span>) &#123; <span class="comment">// 返回集合中所有数据</span></span><br><span class="line">    <span class="keyword">if</span>(err) <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line">    db.<span class="title function_">close</span>();</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="查询指定条件的数据"><a href="#查询指定条件的数据" class="headerlink" title="查询指定条件的数据"></a>查询指定条件的数据</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">MongoClient</span> = <span class="built_in">require</span>(<span class="string">&quot;mongodb&quot;</span>).<span class="property">MongoClient</span>;</span><br><span class="line"><span class="keyword">var</span> url = <span class="string">&quot;mongodb://localhost:27017/&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">MongoClient</span>.<span class="title function_">connect</span>(url, <span class="keyword">function</span>(<span class="params">err, db</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span>(err) <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">  <span class="keyword">var</span> dbo = db.<span class="title function_">db</span>(<span class="string">&quot;luozhu&quot;</span>);</span><br><span class="line">  <span class="keyword">var</span> whereStr = &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&#x27;Github&#x27;</span>&#125;;  <span class="comment">// 查询条件</span></span><br><span class="line">  dbo.<span class="title function_">collection</span>(<span class="string">&quot;site&quot;</span>).<span class="title function_">find</span>(whereStr).<span class="title function_">toArray</span>(<span class="keyword">function</span>(<span class="params">err, result</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(err) <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line">    db.<span class="title function_">close</span>();</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="更新文档"><a href="#更新文档" class="headerlink" title="更新文档"></a>更新文档</h3><h4 id="更新一条文档"><a href="#更新一条文档" class="headerlink" title="更新一条文档"></a>更新一条文档</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">MongoClient</span> = <span class="built_in">require</span>(<span class="string">&quot;mongodb&quot;</span>).<span class="property">MongoClient</span>;</span><br><span class="line"><span class="keyword">var</span> url = <span class="string">&quot;mongodb://localhost:27017/&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">MongoClient</span>.<span class="title function_">connect</span>(url, <span class="keyword">function</span>(<span class="params">err, db</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span>(err) <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">  <span class="keyword">var</span> dbo = db.<span class="title function_">db</span>(<span class="string">&quot;luozhu&quot;</span>);</span><br><span class="line">  <span class="keyword">var</span> whereStr = &#123; <span class="string">&quot;name&quot;</span>: <span class="string">&#x27;Github&#x27;</span> &#125;;  <span class="comment">// 查询条件</span></span><br><span class="line">  <span class="keyword">var</span> updateStr = &#123; <span class="attr">$set</span>:&#123; <span class="string">&quot;website&quot;</span>: <span class="string">&quot;https://github.com/youngjuning&quot;</span> &#125;&#125;;  <span class="comment">// 更新内容</span></span><br><span class="line">  dbo.<span class="title function_">collection</span>(<span class="string">&quot;site&quot;</span>).<span class="title function_">updateOne</span>(whereStr, updateStr, <span class="keyword">function</span> (<span class="params">err, res</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(err) <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;文档更新成功&quot;</span>, res.<span class="property">matchedCount</span>);</span><br><span class="line">    db.<span class="title function_">close</span>();</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>执行成功后，进入 mongo 管理工具查看数据已修改：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.site.find(&#123; name: <span class="string">&quot;GitHub&quot;</span> &#125;).<span class="function"><span class="title">pretty</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;_id&quot;</span> : ObjectId(<span class="string">&quot;5a794e36763eb821b24db854&quot;</span>),</span><br><span class="line">    <span class="string">&quot;name&quot;</span> : <span class="string">&quot;Github&quot;</span>,</span><br><span class="line">    <span class="string">&quot;url&quot;</span> : <span class="string">&quot;https://www.github.com&quot;</span>     <span class="comment"># 已修改为 https</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="更新多条文档"><a href="#更新多条文档" class="headerlink" title="更新多条文档"></a>更新多条文档</h4><p>如果要跟新所有符合条件的文档数据，可以使用 <code>updateMany()</code> 。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">MongoClient</span> = <span class="built_in">require</span>(<span class="string">&#x27;mongodb&#x27;</span>).<span class="property">MongoClient</span>;</span><br><span class="line"><span class="keyword">var</span> url = <span class="string">&quot;mongodb://localhost:27018/&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">MongoClient</span>.<span class="title function_">connect</span>(url, <span class="function">(<span class="params">err, db</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">  <span class="keyword">var</span> dbo = db.<span class="title function_">db</span>(<span class="string">&quot;luozhu&quot;</span>);</span><br><span class="line">  <span class="keyword">var</span> whereStr = &#123;<span class="string">&quot;country&quot;</span>: <span class="string">&#x27;us&#x27;</span>&#125;;  <span class="comment">// 查询条件</span></span><br><span class="line">  <span class="keyword">var</span> updateStr = &#123;<span class="attr">$set</span>: &#123; <span class="string">&quot;country&quot;</span> : <span class="string">&quot;American&quot;</span> &#125;&#125;;</span><br><span class="line">  dbo.<span class="title function_">collection</span>(<span class="string">&quot;site&quot;</span>).<span class="title function_">updateMany</span>(whereStr, updateStr, <span class="function">(<span class="params">err, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">modifiedCount</span> + <span class="string">&quot; 条文档被更新&quot;</span>);</span><br><span class="line">    db.<span class="title function_">close</span>();</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><code>res.modifiedCount</code> 属性返回修改的文档数量。</p><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><h4 id="删除一条数据"><a href="#删除一条数据" class="headerlink" title="删除一条数据"></a>删除一条数据</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">MongoClient</span> = <span class="built_in">require</span>(<span class="string">&#x27;mongodb&#x27;</span>).<span class="property">MongoClient</span>;</span><br><span class="line"><span class="keyword">var</span> url = <span class="string">&quot;mongodb://localhost:27018/&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">MongoClient</span>.<span class="title function_">connect</span>(url, <span class="function">(<span class="params">err, db</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span>(err) <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">  <span class="keyword">var</span> dbo = db.<span class="title function_">db</span>(<span class="string">&quot;luozhu&quot;</span>);</span><br><span class="line">  <span class="keyword">var</span> whereStr = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&#x27;Github&#x27;</span>&#125;;  <span class="comment">// 查询条件</span></span><br><span class="line">  dbo.<span class="title function_">collection</span>(<span class="string">&quot;site&quot;</span>).<span class="title function_">deleteOne</span>(whereStr, <span class="function">(<span class="params">err, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(err) <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">deletedCount</span> + <span class="string">&quot; 条文档被删除&quot;</span>);</span><br><span class="line">    db.<span class="title function_">close</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="删除多条数据"><a href="#删除多条数据" class="headerlink" title="删除多条数据"></a>删除多条数据</h4><p>如果要删除多条语句可以使用 <code>deleteMany()</code> 方法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">MongoClient</span> = <span class="built_in">require</span>(<span class="string">&#x27;mongodb&#x27;</span>).<span class="property">MongoClient</span>;</span><br><span class="line"><span class="keyword">var</span> url = <span class="string">&quot;mongodb://localhost:27018/&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">MongoClient</span>.<span class="title function_">connect</span>(url, <span class="keyword">function</span>(<span class="params">err, db</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">  <span class="keyword">var</span> dbo = db.<span class="title function_">db</span>(<span class="string">&quot;luozhu&quot;</span>);</span><br><span class="line">  <span class="keyword">var</span> whereStr = &#123;<span class="attr">country</span>: <span class="string">&quot;American&quot;</span>&#125;;  <span class="comment">// 查询条件</span></span><br><span class="line">  dbo.<span class="title function_">collection</span>(<span class="string">&quot;site&quot;</span>).<span class="title function_">deleteMany</span>(whereStr, <span class="function">(<span class="params">err, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(err) <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">deletedCount</span>, <span class="string">&quot;条文档被删除&quot;</span>);</span><br><span class="line">    db.<span class="title function_">close</span>();</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><code>res.deletedCount</code> 属性返回删除的文档数量。</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><a href="https://zhuanlan.zhihu.com/p/76349679">如何在 Ubuntu 上安装 MongoDB</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MongoDB-介绍&quot;&gt;&lt;a href=&quot;#MongoDB-介绍&quot; class=&quot;headerlink&quot; title=&quot;MongoDB 介绍&quot;&gt;&lt;/a&gt;MongoDB 介绍&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;一个面向文档对象的数据库。&lt;/p&gt;
&lt;/block</summary>
      
    
    
    
    <category term="全栈" scheme="https://youngjuning.js.org/categories/%E5%85%A8%E6%A0%88/"/>
    
    
    <category term="MongoDB" scheme="https://youngjuning.js.org/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>code-server 尝鲜</title>
    <link href="https://youngjuning.js.org/dfd0faf39738/"/>
    <id>https://youngjuning.js.org/dfd0faf39738/</id>
    <published>2022-03-19T10:00:00.000Z</published>
    <updated>2023-02-26T03:10:50.583Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WebIDE-概述"><a href="#WebIDE-概述" class="headerlink" title="WebIDE 概述"></a>WebIDE 概述</h1><h2 id="WebIDE-介绍"><a href="#WebIDE-介绍" class="headerlink" title="WebIDE 介绍"></a>WebIDE 介绍</h2><p>WebIDE 是基于 H5 支持多语言的在线集成开发环境。相较于传统的本地 IDE，WebIDE 是开箱即用的，你不用配置 git 环境、node 环境、react 环境甚至 React Native 环境。</p><h2 id="WebIDE-发展与现状"><a href="#WebIDE-发展与现状" class="headerlink" title="WebIDE 发展与现状"></a>WebIDE 发展与现状</h2><ul><li>基于 <a href="https://codemirror.net/">CodeMirror</a> 和 <a href="https://ace.c9.io/">Ace</a> 实现编辑器部分，其余部分自己实现</li><li>以 <a href="https://codesandbox.io/">CodeSandbox</a> 为代表的的在线代码编辑器服务，私有部署较麻烦</li><li><a href="https://gitlab.com/youngjuning/react">Gitlab ide</a>：集成在 Gitlab 中的 IDE</li><li><a href="https://github.com/facebook/react/">Github ide</a>：基于 vscode 实现的与 github 结合的 IDE，限制是命令行使用有限制，</li><li><a href="https://codingcorp.cloudstudio.net/ws/qmbngm">Cloud Studio</a>：可以理解为国产 CodeSandbox，以前是基于 Ace 做的，现在也改成了基于 vscode，自定义功能通过 vscode 的插件体系来做</li></ul><p>通过比对市场上常见的 WebIDE 产品，我们能发现趋势都趋于统一了，就是依托 vscode 强大的能力来实现的，扩展能力也是基于 vscode 来实现。</p><h2 id="WebIDE-通用架构"><a href="#WebIDE-通用架构" class="headerlink" title="WebIDE 通用架构"></a>WebIDE 通用架构</h2><p><img src="https://s2.loli.net/2022/03/23/UfjaX4QpTmg5MKu.png"></p><h2 id="WebIDE-的优势"><a href="#WebIDE-的优势" class="headerlink" title="WebIDE 的优势"></a>WebIDE 的优势</h2><ul><li>在具有一致开发环境的任何设备上编写代码</li><li>使用云服务器加速测试、编译、下载等来节省旅途中的笔记本电量</li><li>所有密集型任务都在您的服务器上运行，节省笔记本内存</li></ul><h2 id="工程化意义"><a href="#工程化意义" class="headerlink" title="工程化意义"></a>工程化意义</h2><ul><li>安全性：服务部署在内网，完全不用担心安全问题，且插件服务也可以内网部署。</li><li>规范性：通过定制编辑器，我们可以规范开发阶段的流程与环境</li><li>提效性：通过实时预览技术，可以实现开发阶段通过 mock 数据即可预览面板。另外由于是针对 OS 业务定制，所以开发套件都是定制好的，开发只需要关心代码</li><li>平台化：可以和内部任何平台打通交互，比如一键打包、一键发布</li></ul><h1 id="基于-code-server-搭建-WebIDE-平台"><a href="#基于-code-server-搭建-WebIDE-平台" class="headerlink" title="基于 code-server 搭建 WebIDE 平台"></a>基于 code-server 搭建 WebIDE 平台</h1><p>code-server 是一个免费的基于浏览器的 IDE，它是基于 vscode 封装的跨平台 IDE。</p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="安装-nodejs"><a href="#安装-nodejs" class="headerlink" title="安装 nodejs"></a>安装 nodejs</h3><p><strong>安装源</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -</span><br></pre></td></tr></table></figure><p><strong>安装 nodejs</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y nodejs</span><br></pre></td></tr></table></figure><p><strong>更新 npm</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g npm</span><br></pre></td></tr></table></figure><h3 id="安装-code-server"><a href="#安装-code-server" class="headerlink" title="安装 code-server"></a>安装 code-server</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://code-server.dev/install.sh | sh</span><br></pre></td></tr></table></figure><p>执行下面的命令以支持 systemd 方式启动并开始开机自启动：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> --now code-server@<span class="variable">$USER</span></span><br></pre></td></tr></table></figure><p>之后如果修改了配置文件，就可以使用 <code>sudo systemctl restart code-server@$USER</code> 重启服务。</p><p>或者你不需要后台服务，你可以执行下面的命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code-server</span><br></pre></td></tr></table></figure><h3 id="nginx-反向代理"><a href="#nginx-反向代理" class="headerlink" title="nginx 反向代理"></a>nginx 反向代理</h3><p>安装 nginx：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install -y nginx</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    listen [::]:80;</span><br><span class="line">    server_name mydomain.com;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">      proxy_pass http://localhost:8080/;</span><br><span class="line">      proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">      proxy_set_header Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">      proxy_set_header Connection upgrade;</span><br><span class="line">      proxy_set_header Accept-Encoding gzip;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ul><li><a href="https://www.zhihu.com/question/41050429">要实现一个Web IDE 需要哪些前端技术？</a></li><li><a href="https://developer.aliyun.com/article/646273">WebIDE 使用指南 - 阿里云</a></li><li><a href="https://docs.gitlab.com/ee/user/project/web_ide/">网络IDE - GitLab</a></li><li><a href="https://www.youtube.com/watch?v=lfYo4mfOyM8">What is CodeSandbox</a></li><li><a href="https://juejin.cn/post/7008428269317914661">如何在团队快速落地 WebIDE</a></li><li><a href="https://learnku.com/articles/42581">Ubuntu 安装最新版本 Node.js</a></li><li><a href="https://www.jianshu.com/p/648c48f146c6">腾讯云登录Root用户</a></li><li><a href="https://youngjuning.js.org/21bdf0b4bd15/">写给前端的Linux实战教程</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;WebIDE-概述&quot;&gt;&lt;a href=&quot;#WebIDE-概述&quot; class=&quot;headerlink&quot; title=&quot;WebIDE 概述&quot;&gt;&lt;/a&gt;WebIDE 概述&lt;/h1&gt;&lt;h2 id=&quot;WebIDE-介绍&quot;&gt;&lt;a href=&quot;#WebIDE-介绍&quot; class</summary>
      
    
    
    
    <category term="前端" scheme="https://youngjuning.js.org/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vscode" scheme="https://youngjuning.js.org/tags/vscode/"/>
    
    <category term="ide" scheme="https://youngjuning.js.org/tags/ide/"/>
    
    <category term="code-sever" scheme="https://youngjuning.js.org/tags/code-sever/"/>
    
  </entry>
  
  <entry>
    <title>使用 MetaMask 连接到币安智能链(BSC)</title>
    <link href="https://youngjuning.js.org/5cb0c0ce25b8/"/>
    <id>https://youngjuning.js.org/5cb0c0ce25b8/</id>
    <published>2021-12-30T02:36:17.000Z</published>
    <updated>2023-02-26T03:10:50.583Z</updated>
    
    <content type="html"><![CDATA[<p>币安智能链是目前世界上最大的以太坊交易所，MetaMask 则是专注服务于以太坊的钱包应用。</p><h2 id="入口"><a href="#入口" class="headerlink" title="入口"></a>入口</h2><p><img src="https://cdn.jsdelivr.net/gh/youngjuning/images/202112301451827.png"></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li>网络名称: <code>币安智能链</code></li><li>RPC URL: <code>https://bsc-dataseed1.binance.org/</code></li><li>链 ID: <code>56</code></li><li>Currency Symbol: <code>WBNB</code></li><li>区块浏览器: <code>https://bscscan.com/</code></li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://academy.binance.com/zh/articles/connecting-metamask-to-binance-smart-chain">在币安智能链中关联MetaMask钱包</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;币安智能链是目前世界上最大的以太坊交易所，MetaMask 则是专注服务于以太坊的钱包应用。&lt;/p&gt;
&lt;h2 id=&quot;入口&quot;&gt;&lt;a href=&quot;#入口&quot; class=&quot;headerlink&quot; title=&quot;入口&quot;&gt;&lt;/a&gt;入口&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https:</summary>
      
    
    
    
    <category term="区块链" scheme="https://youngjuning.js.org/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
    <category term="MetaMask" scheme="https://youngjuning.js.org/tags/MetaMask/"/>
    
  </entry>
  
  <entry>
    <title>React Hooks 问题记录</title>
    <link href="https://youngjuning.js.org/c22a00ea88bc/"/>
    <id>https://youngjuning.js.org/c22a00ea88bc/</id>
    <published>2021-12-10T02:44:31.000Z</published>
    <updated>2023-02-26T03:10:50.579Z</updated>
    
    <content type="html"><![CDATA[<p>React Hooks 在</p><h2 id="Warning-Can’t-perform-a-React-state-update-on-an-unmounted-component"><a href="#Warning-Can’t-perform-a-React-state-update-on-an-unmounted-component" class="headerlink" title="Warning: Can’t perform a React state update on an unmounted component"></a>Warning: Can’t perform a React state update on an unmounted component</h2><p>由于 <code>useEffect</code> 中有异步操作，当组件卸载后异步操作结束并执行 state 操作，React 就会提醒存在内存泄漏的风险。在 React Hooks 中，解决方法是在异步操作中判断是否组件被卸载了。代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">useAsync</span>(<span class="params">asyncFn, onSuccess</span>) &#123;</span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> isActive = <span class="literal">true</span>;</span><br><span class="line">    <span class="title function_">asyncFn</span>().<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (isActive) <span class="title function_">onSuccess</span>(data);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123; isActive = <span class="literal">false</span> &#125;;</span><br><span class="line">  &#125;, [asyncFn, onSuccess]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实际项目中，我们可以使用 ahooks 提供的功能更强大的 <code>useAsyncEffect</code>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useAsyncEffect &#125; <span class="keyword">from</span> <span class="string">&#x27;ahooks&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">mockCheck</span>(<span class="params"></span>): <span class="title class_">Promise</span>&lt;boolean&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="title function_">resolve</span>(<span class="literal">true</span>), <span class="number">3000</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> () =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> [pass, setPass] = useState&lt;boolean&gt;(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useAsyncEffect</span>(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="title function_">setPass</span>(<span class="keyword">await</span> <span class="title function_">mockCheck</span>());</span><br><span class="line">  &#125;, []);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;pass === null &amp;&amp; &#x27;Checking...&#x27;&#125;</span></span><br><span class="line"><span class="language-xml">      &#123;pass === true &amp;&amp; &#x27;Check passed.&#x27;&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;React Hooks 在&lt;/p&gt;
&lt;h2 id=&quot;Warning-Can’t-perform-a-React-state-update-on-an-unmounted-component&quot;&gt;&lt;a href=&quot;#Warning-Can’t-perform-a-React-s</summary>
      
    
    
    
    <category term="前端" scheme="https://youngjuning.js.org/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="react" scheme="https://youngjuning.js.org/tags/react/"/>
    
    <category term="hooks" scheme="https://youngjuning.js.org/tags/hooks/"/>
    
  </entry>
  
  <entry>
    <title>基于 Next.js 开发 BSC DApp</title>
    <link href="https://youngjuning.js.org/cba1320bcd71/"/>
    <id>https://youngjuning.js.org/cba1320bcd71/</id>
    <published>2021-12-05T14:58:44.000Z</published>
    <updated>2023-02-26T03:10:50.583Z</updated>
    
    <content type="html"><![CDATA[<h2 id="项目初始化"><a href="#项目初始化" class="headerlink" title="项目初始化"></a>项目初始化</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx create-next-app@latest --typescript</span><br></pre></td></tr></table></figure><p>安装完成后，根据指示开启开发模式的 server。然后尝试编辑 <code>pages/index.tsx</code> 并在浏览器查看结果。</p><h2 id="开发规范"><a href="#开发规范" class="headerlink" title="开发规范"></a>开发规范</h2><h3 id="commitlint"><a href="#commitlint" class="headerlink" title="commitlint"></a>commitlint</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx @luozhu/create-commitlint</span><br></pre></td></tr></table></figure><h3 id="prettier"><a href="#prettier" class="headerlink" title="prettier"></a>prettier</h3><h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add prettier eslint-config-prettier eslint-plugin-prettier @luozhu/prettier-config -D</span><br></pre></td></tr></table></figure><h4 id="配置-eslintrc-json"><a href="#配置-eslintrc-json" class="headerlink" title="配置 .eslintrc.json"></a>配置 .eslintrc.json</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;extends&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;next/core-web-vitals&quot;</span><span class="punctuation">,</span> <span class="string">&quot;plugin:prettier/recommended&quot;</span><span class="punctuation">,</span> <span class="string">&quot;prettier&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;rules&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;no-unused-vars&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;react-hooks/exhaustive-deps&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@next/next/no-img-element&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="配置-prettierrc-js"><a href="#配置-prettierrc-js" class="headerlink" title="配置 .prettierrc.js"></a>配置 .prettierrc.js</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="built_in">require</span>(<span class="string">&#x27;@luozhu/prettier-config&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="editorconfig"><a href="#editorconfig" class="headerlink" title=".editorconfig"></a>.editorconfig</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># EditorConfig is awesome: http://EditorConfig.org</span><br><span class="line"></span><br><span class="line"># top-most EditorConfig file</span><br><span class="line">root = true</span><br><span class="line"></span><br><span class="line"># Unix-style newlines with a newline ending every file</span><br><span class="line">[*]</span><br><span class="line">quote_type = single # Fix Prettier &quot;prettier.singleQuote&quot; not working in 1.40 vs code</span><br><span class="line">indent_style = space</span><br><span class="line">indent_size = 2</span><br><span class="line">end_of_line = lf</span><br><span class="line">charset = utf-8</span><br><span class="line">trim_trailing_whitespace = true</span><br><span class="line">insert_final_newline = true</span><br><span class="line"></span><br><span class="line">[*.md]</span><br><span class="line">trim_trailing_whitespace = false</span><br><span class="line"></span><br><span class="line">[Makefile]</span><br><span class="line">indent_style = tab</span><br></pre></td></tr></table></figure><h3 id="lint-staged"><a href="#lint-staged" class="headerlink" title="lint-staged"></a>lint-staged</h3><p>安装 lint-staged：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add lint-staged -D</span><br></pre></td></tr></table></figure><p>在 <code>package.json</code> 文件中如下配置即可：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;gitHooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;pre-commit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lint-staged&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;commit-msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;commitlint -e -V&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;lint-staged&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;**/*.&#123;js,jsx,ts,tsx&#125;&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;eslint --fix&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;**/*.&#123;md,json&#125;&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;prettier --write&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="antd-开发"><a href="#antd-开发" class="headerlink" title="antd 开发"></a>antd 开发</h2><h3 id="安装依赖-1"><a href="#安装依赖-1" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add antd</span><br></pre></td></tr></table></figure><h3 id="NextJS-使用-Less-编译-Antd"><a href="#NextJS-使用-Less-编译-Antd" class="headerlink" title="NextJS 使用 Less 编译 Antd"></a>NextJS 使用 Less 编译 Antd</h3><p>使用 yarn 安装 next-with-less 包，并顺带最新版本的 less 和 less-loader：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add next-with-less less less-loader -D</span><br></pre></td></tr></table></figure><p>并修改 <code>next.config.js</code> 配置文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// next.config.js</span></span><br><span class="line"><span class="keyword">const</span> withLess = <span class="built_in">require</span>(<span class="string">&quot;next-with-less&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** <span class="doctag">@type</span> &#123;<span class="type">import(&#x27;next&#x27;).NextConfig</span>&#125; */</span></span><br><span class="line"><span class="keyword">let</span> config = &#123;</span><br><span class="line">  <span class="attr">reactStrictMode</span>: <span class="literal">true</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">config = <span class="title function_">withLess</span>(&#123;</span><br><span class="line">  ...config,</span><br><span class="line">  <span class="attr">lessLoaderOptions</span>: &#123;</span><br><span class="line">    <span class="attr">lessOptions</span>: &#123;</span><br><span class="line">      <span class="attr">modifyVars</span>: &#123;</span><br><span class="line">        <span class="string">&quot;@primary-color&quot;</span>: <span class="string">&quot;#f74a49&quot;</span>,</span><br><span class="line">        <span class="string">&quot;@border-radius-base&quot;</span>: <span class="string">&quot;.5em&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = config</span><br></pre></td></tr></table></figure><h3 id="引入-antd-less"><a href="#引入-antd-less" class="headerlink" title="引入 antd less"></a>引入 antd less</h3><p>在 <code>pages/_app.tsx</code> 中引入 less</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;antd/lib/style/themes/default.less&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;antd/dist/antd.less&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="使用-dayjs-替换-moment-js"><a href="#使用-dayjs-替换-moment-js" class="headerlink" title="使用 dayjs 替换 moment.js"></a>使用 dayjs 替换 moment.js</h3><p>按照 <a href="https://ant.design/docs/react/replace-moment-cn#%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6">自定义组件</a> 的方式自定义组件在 Next.js 中是不够的，需要使用 next-transpile-modules 做进一步的处理：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// next.config.js</span></span><br><span class="line"><span class="keyword">const</span> withTM = <span class="built_in">require</span>(<span class="string">&#x27;next-transpile-modules&#x27;</span>)([</span><br><span class="line">  <span class="string">&#x27;rc-picker&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;rc-util&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;antd&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;rc-pagination&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;rc-notification&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;@ant-design/icons&#x27;</span>,</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** <span class="doctag">@type</span> &#123;<span class="type">import(&#x27;next&#x27;).NextConfig</span>&#125; */</span></span><br><span class="line"><span class="keyword">let</span> config = &#123;</span><br><span class="line">  <span class="attr">reactStrictMode</span>: <span class="literal">true</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">config = <span class="title function_">withTM</span>(config);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = config</span><br></pre></td></tr></table></figure><p>在 <code>_app.tsx</code> 中初始化 dayjs：</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> dayjs <span class="keyword">from</span> <span class="string">&#x27;dayjs&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化 dayjs</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;dayjs/locale/zh-cn&#x27;</span>;</span><br><span class="line">dayjs.<span class="title function_">locale</span>(<span class="string">&#x27;zh-cn&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h3><p>布局使用的是 antd 的 Layout，我选用的是侧边栏布局。</p><h4 id="Layout-tsx"><a href="#Layout-tsx" class="headerlink" title="Layout.tsx"></a>Layout.tsx</h4><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Layout</span>, <span class="title class_">Menu</span>, <span class="title class_">Breadcrumb</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;antd&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Sider</span> <span class="keyword">from</span> <span class="string">&#x27;./Sider&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">Header</span>, <span class="title class_">Content</span>, <span class="title class_">Footer</span> &#125; = <span class="title class_">Layout</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">AppLayout</span> = (<span class="params">&#123;children&#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Layout</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">minHeight:</span> &#x27;<span class="attr">100vh</span>&#x27; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Sider</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Layout</span> <span class="attr">className</span>=<span class="string">&quot;site-layout&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Header</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">padding:</span> <span class="attr">0</span>, <span class="attr">backgroundColor:</span> &#x27;#<span class="attr">ffffff</span>&#x27; &#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Content</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">margin:</span> &#x27;<span class="attr">0</span> <span class="attr">16px</span>&#x27; &#125;&#125;&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">Content</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Footer</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">textAlign:</span> &#x27;<span class="attr">center</span>&#x27; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">            Crypto Meta ©2021 Powered by&#123;&#x27; &#x27;&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">className</span>=<span class="string">&quot;default&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://nextjs.org/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;noreferrer&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              Next.js</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Footer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Layout</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Layout</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Sider-tsx"><a href="#Sider-tsx" class="headerlink" title="Sider.tsx"></a>Sider.tsx</h4><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Layout</span>, <span class="title class_">Menu</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;antd&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&#x27;next/router&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Link</span> <span class="keyword">from</span> <span class="string">&#x27;next/link&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> menus <span class="keyword">from</span> <span class="string">&#x27;config/menus&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">Sider</span> &#125; = <span class="title class_">Layout</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">AppSider</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> router = <span class="title function_">useRouter</span>();</span><br><span class="line">  <span class="keyword">const</span> [collapsed, setCollapsed] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onCollapse</span> = (<span class="params">collapsed: <span class="built_in">boolean</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">setCollapsed</span>(collapsed);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Sider</span> <span class="attr">breakpoint</span>=<span class="string">&quot;lg&quot;</span> <span class="attr">collapsible</span> <span class="attr">collapsed</span>=<span class="string">&#123;collapsed&#125;</span> <span class="attr">onCollapse</span>=<span class="string">&#123;onCollapse&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Menu</span> <span class="attr">theme</span>=<span class="string">&quot;dark&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;inline&quot;</span> <span class="attr">selectedKeys</span>=<span class="string">&#123;[router.pathname]&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;menus.map(menu =&gt; (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Menu.Item</span> <span class="attr">key</span>=<span class="string">&#123;menu.route&#125;</span> <span class="attr">icon</span>=<span class="string">&#123;menu.icon&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Link</span> <span class="attr">href</span>=<span class="string">&#123;menu.route&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">a</span>&gt;</span>&#123;menu.name&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Menu.Item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          ))&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Menu</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Sider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">AppSider</span>;</span><br></pre></td></tr></table></figure><h4 id="config-x2F-menus-tsx"><a href="#config-x2F-menus-tsx" class="headerlink" title="config&#x2F;menus.tsx"></a>config&#x2F;menus.tsx</h4><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">route</span>: <span class="string">&#x27;/cryptoyou&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;Crypto You&#x27;</span>,</span><br><span class="line">    <span class="attr">icon</span>: (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">img</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/youngjuning/images/202112081051602.png&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">width</span>=<span class="string">&quot;30&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">alt</span>=<span class="string">&quot;thecryptoyou&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line">    ),</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">route</span>: <span class="string">&#x27;/squid&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;Squid NFT&#x27;</span>,</span><br><span class="line">    <span class="attr">icon</span>: (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">img</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/youngjuning/images/202112082111091.png&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">width</span>=<span class="string">&quot;30&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">alt</span>=<span class="string">&quot;thecryptoyou&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line">    ),</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br></pre></td></tr></table></figure><h3 id="国际化"><a href="#国际化" class="headerlink" title="国际化"></a>国际化</h3><p>antd 提供了一个 React 组件 ConfigProvider 用于全局配置国际化文案。新建 <code>components/Layout/Provider.tsx</code>：</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ConfigProvider</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;antd&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> zhCN <span class="keyword">from</span> <span class="string">&#x27;antd/lib/locale/zh_CN&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Provider</span> = (<span class="params">&#123; children &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">ConfigProvider</span> <span class="attr">locale</span>=<span class="string">&#123;zhCN&#125;</span>&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">ConfigProvider</span>&gt;</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Provider</span>;</span><br></pre></td></tr></table></figure><p>然后在 <code>components/Layout/index.tsx</code> 中引入：</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Provider</span> <span class="keyword">from</span> <span class="string">&#x27;./Provider&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">AppLayout</span>(<span class="params">&#123; children &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Provider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      // ...</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Provider</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="面包屑导航"><a href="#面包屑导航" class="headerlink" title="面包屑导航"></a>面包屑导航</h3><p>参考 <a href="https://stackoverflow.com/questions/64541235/breadcrumbs-and-nextjs">Breadcrumbs and NextJS</a> 封装了一个 Breadcrumb 组件：</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Breadcrumbs</span> <span class="keyword">from</span> <span class="string">&#x27;nextjs-antd-breadcrumbs&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Example</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">Breadcrumbs</span> <span class="attr">rootLabel</span>=<span class="string">&quot;Home&quot;</span> <span class="attr">omitRootLabel</span>=<span class="string">&#123;false&#125;/</span>&gt;</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Next-js-开发"><a href="#Next-js-开发" class="headerlink" title="Next.js 开发"></a>Next.js 开发</h2><h3 id="基于根目录导入模块"><a href="#基于根目录导入模块" class="headerlink" title="基于根目录导入模块"></a>基于根目录导入模块</h3><p><code>baseUrl</code> 配置选项允许您直接从项目的根目录导入。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// tsconfig.json or jsconfig.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;baseUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="模块路径别名"><a href="#模块路径别名" class="headerlink" title="模块路径别名"></a>模块路径别名</h3><p>在 tsconfig.json 中加入以下配置：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;baseUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;paths&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;@/components/*&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;./components/*&quot;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>其他的地址依葫芦画瓢加到 paths 对象中即可。</p><h3 id="redirects-永久重定向"><a href="#redirects-永久重定向" class="headerlink" title="redirects 永久重定向"></a>redirects 永久重定向</h3><p>永久重定向不同于重写路由，它会在 url 中表现出来，在 Next.js 中重定向是在 <code>next.config.js</code> 中配置的：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> config = &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">redirects</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">source</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">        <span class="attr">destination</span>: <span class="string">&#x27;/cryptoyou&#x27;</span>,</span><br><span class="line">        <span class="attr">permanent</span>: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    ];</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = config;</span><br></pre></td></tr></table></figure><h3 id="在-pages-目录包含非页面文件"><a href="#在-pages-目录包含非页面文件" class="headerlink" title="在 pages 目录包含非页面文件"></a>在 pages 目录包含非页面文件</h3><p>要把测试文件、生成的文件或其他组件使用的文件放在 <code>pages</code> 目录中，你可以在扩展名前加上类似 <code>page</code> 的字样。</p><p>打开 <code>next.config.js</code> 并添加 <code>pageExtensions</code> 配置：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">pageExtensions</span>: [<span class="string">&#x27;page.tsx&#x27;</span>, <span class="string">&#x27;page.ts&#x27;</span>, <span class="string">&#x27;page.jsx&#x27;</span>, <span class="string">&#x27;page.js&#x27;</span>],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后重命名你的页面，使其有一个包括 <code>.page</code> 的文件扩展名（例如，重命名 <code>MyPage.tsx</code> 为<code>MyPage.page.tsx</code>）。</p><blockquote><p>注意：确保你也重命名 <code>_document.js</code>、<code>_app.js</code>、<code>_middleware.js</code>，以及 <code>pages/api/</code> 下的文件。</p></blockquote><h3 id="styled-jsx"><a href="#styled-jsx" class="headerlink" title="styled-jsx"></a>styled-jsx</h3><p>next.js 内置支持 styled-jsx，我们要做的是配置支持 sass，首先安装 <code>@styled-jsx/plugin-sass</code>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add @styled-jsx/plugin-sass sass node-sass -D</span><br></pre></td></tr></table></figure><p>然后配置 <code>.babelrc</code>：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;presets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;next/babel&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;styled-jsx&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;plugins&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;@styled-jsx/plugin-sass&quot;</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：开启 babel 后，会自动禁用 swc，目前还没有 swc 的支持方案，进度请关注 <a href="https://github.com/Thream/styled-jsx-plugin-sass/issues/100">[Improvement] Next.JS 12 support + SWC</a></p></blockquote><h3 id="自定义错误页面"><a href="#自定义错误页面" class="headerlink" title="自定义错误页面"></a>自定义错误页面</h3><h4 id="404-tsx"><a href="#404-tsx" class="headerlink" title="404.tsx"></a>404.tsx</h4><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Result</span>, <span class="title class_">Button</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;antd&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Link</span> <span class="keyword">from</span> <span class="string">&#x27;next/link&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">Custom404</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Result</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">status</span>=<span class="string">&quot;404&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">title</span>=<span class="string">&quot;404&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">subTitle</span>=<span class="string">&quot;Sorry, the page you visited does not exist.&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">extra</span>=<span class="string">&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &lt;<span class="attr">Button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Link</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">a</span>&gt;</span>返回首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#125;</span></span><br><span class="line"><span class="language-xml">    /&gt;</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="500-tsx"><a href="#500-tsx" class="headerlink" title="500.tsx"></a>500.tsx</h4><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Result</span>, <span class="title class_">Button</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;antd&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Link</span> <span class="keyword">from</span> <span class="string">&#x27;next/link&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">Custom500</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Result</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">status</span>=<span class="string">&quot;500&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">title</span>=<span class="string">&quot;500&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">subTitle</span>=<span class="string">&quot;Sorry, something went wrong.&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">extra</span>=<span class="string">&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &lt;<span class="attr">Button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Link</span> <span class="attr">href</span>=<span class="string">&quot;/&quot;</span>&gt;</span>返回首页<span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#125;</span></span><br><span class="line"><span class="language-xml">    /&gt;</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Dapp"><a href="#Dapp" class="headerlink" title="Dapp"></a>Dapp</h2><h3 id="小狐狸钱包"><a href="#小狐狸钱包" class="headerlink" title="小狐狸钱包"></a>小狐狸钱包</h3><ol><li><a href="https://zhuanlan.zhihu.com/p/368736357">小狐狸钱包MetaMask新手使用教程</a></li><li><a href="https://blog.csdn.net/qq_33583069/article/details/115727642?ivk_sa=1024320u">使用MetaMask连接到币安智能链(BSC)</a></li></ol><h3 id="usedapp-x2F-core"><a href="#usedapp-x2F-core" class="headerlink" title="@usedapp&#x2F;core"></a>@usedapp&#x2F;core</h3><h4 id="安装依赖-2"><a href="#安装依赖-2" class="headerlink" title="安装依赖"></a>安装依赖</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yarn add @usedapp/core</span><br></pre></td></tr></table></figure><h4 id="设置-Provider"><a href="#设置-Provider" class="headerlink" title="设置 Provider"></a>设置 Provider</h4><p>你需要做的第一件事是用可选的配置设置 DAppProvider，并将你的整个应用程序包裹在其中。本文中我们编辑 <code>components/Layout/Provider.tsx</code>：</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">DAppProvider</span>, <span class="title class_">Config</span>, <span class="title class_">ChainId</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@usedapp/core&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">config</span>: <span class="title class_">Config</span> = &#123;</span><br><span class="line">  <span class="attr">readOnlyChainId</span>: <span class="title class_">ChainId</span>.<span class="property">BSC</span>,</span><br><span class="line">  <span class="attr">readOnlyUrls</span>: &#123;</span><br><span class="line">    [<span class="title class_">ChainId</span>.<span class="property">BSC</span>]: <span class="string">&#x27;https://bsc-dataseed1.binance.org/&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Provider</span> = (<span class="params">&#123; children &#125;</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">DAppProvider</span> <span class="attr">config</span>=<span class="string">&#123;config&#125;</span>&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">DAppProvider</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Provider</span>;</span><br></pre></td></tr></table></figure><h4 id="连接钱包"><a href="#连接钱包" class="headerlink" title="连接钱包"></a>连接钱包</h4><p>然后你需要使用 activateBrowserWallet 来激活 provider。最好是在用户点击 “Connect” 按钮时进行。本文中我们新建组件 <code>components/ConnectButton.tsx</code>：</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Button</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;antd&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useEthers &#125; <span class="keyword">from</span> <span class="string">&#x27;@usedapp/core&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">LoginOutlined</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@ant-design/icons&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">ConnectButton</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; activateBrowserWallet &#125; = <span class="title function_">useEthers</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">handleConnectWallet</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">activateBrowserWallet</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">icon</span>=<span class="string">&#123;</span>&lt;<span class="attr">LoginOutlined</span> /&gt;</span>&#125; onClick=&#123;handleConnectWallet&#125;&gt;</span></span><br><span class="line"><span class="language-xml">      Connect MetaMask</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">ConnectButton</span>;</span><br></pre></td></tr></table></figure><h4 id="钱包余额"><a href="#钱包余额" class="headerlink" title="钱包余额"></a>钱包余额</h4><p><code>useEtherBalance(address: string)</code></p><p>提供一种获取账户余额的方法。以账户地址为参数，当数据不可用时（即未连接），返回 ·<code>BigNumber</code> 或 <code>undefined</code>。要获得当前连接的账户，请使用 <code>useEthers()</code>。</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; formatEther &#125; <span class="keyword">from</span> <span class="string">&#x27;@ethersproject/units&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">EtherBalance</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; account &#125; = <span class="title function_">useEthers</span>()</span><br><span class="line">  <span class="keyword">const</span> etherBalance = <span class="title function_">useEtherBalance</span>(account)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;etherBalance &amp;&amp; <span class="tag">&lt;<span class="name">p</span>&gt;</span>Balance: &#123;formatEther(etherBalance)&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="代币余额"><a href="#代币余额" class="headerlink" title="代币余额"></a>代币余额</h4><p><code>useTokenBalance(address: string, tokenAddress: string)</code></p><p>提供一种方法来获取由 <code>tokenAddress</code> 指定的 ERC20 代币在所提供地址的余额。当数据不可用时，返回 <code>BigNumber</code> 或 <code>undefined</code>。</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; formatUnits &#125; <span class="keyword">from</span> <span class="string">&#x27;@ethersproject/units&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">BABY</span> = <span class="string">&#x27;0x53e562b9b7e5e94b81f10e96ee70ad06df3d2657&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">TokenBalance</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; account &#125; = <span class="title function_">useEthers</span>()</span><br><span class="line">  <span class="keyword">const</span> tokenBalance = <span class="title function_">useTokenBalance</span>(<span class="variable constant_">BABY</span>, account)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;tokenBalance &amp;&amp; <span class="tag">&lt;<span class="name">p</span>&gt;</span>BABY: &#123;formatUnits(tokenBalance, 18)&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul><li><a href="https://dev.to/jacobedawson/build-a-web3-dapp-in-react-login-with-metamask-4chp">Build a Web3 Dapp in React &amp; Login with MetaMask</a></li></ul><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="GitHub-Pages"><a href="#GitHub-Pages" class="headerlink" title="GitHub Pages"></a>GitHub Pages</h3><p>如果是 vercel 付费用户，推荐使用 vercel。GitHub Pages 只能部署静态内容，所以需要使用 <code>next export</code> 将静态内容导出部署。</p><p>首先配置 npm scripts：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;preexport&quot;</span><span class="punctuation">:</span> <span class="string">&quot;yarn build&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;export&quot;</span><span class="punctuation">:</span> <span class="string">&quot;next export&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p>然后添加 <code>.github/workflows/gh-pages.yml</code>：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">github</span> <span class="string">pages</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span> <span class="comment"># default branch</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-18.04</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">c-hive/gha-yarn-cache@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">yarn</span> <span class="string">--non-interactive</span> <span class="string">--silent</span> <span class="string">--ignore-scripts</span> <span class="string">--production=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span> <span class="string">Website</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">yarn</span> <span class="string">export</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">Website</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">personal_token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.PERSONAL_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">external_repository:</span> <span class="string">crypto-meta/crypto-meta.github.io</span></span><br><span class="line">          <span class="attr">publish_dir:</span> <span class="string">./out</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;项目初始化&quot;&gt;&lt;a href=&quot;#项目初始化&quot; class=&quot;headerlink&quot; title=&quot;项目初始化&quot;&gt;&lt;/a&gt;项目初始化&lt;/h2&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p</summary>
      
    
    
    
    <category term="区块链" scheme="https://youngjuning.js.org/categories/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    
    <category term="Next.js" scheme="https://youngjuning.js.org/tags/Next-js/"/>
    
    <category term="BSC" scheme="https://youngjuning.js.org/tags/BSC/"/>
    
    <category term="DApp" scheme="https://youngjuning.js.org/tags/DApp/"/>
    
  </entry>
  
  <entry>
    <title>single-spa 原理解析（内部分享）</title>
    <link href="https://youngjuning.js.org/89f69cf72fa9/"/>
    <id>https://youngjuning.js.org/89f69cf72fa9/</id>
    <published>2021-11-21T09:00:00.000Z</published>
    <updated>2023-02-26T03:10:50.583Z</updated>
    
    <content type="html"><![CDATA[<h2 id="single-spa-是什么？"><a href="#single-spa-是什么？" class="headerlink" title="single-spa 是什么？"></a>single-spa 是什么？</h2><p>Single-spa 是一个将多个单页面应用聚合为一个整体应用的 JavaScript 微前端框架。 使用 single-spa 进行前端架构设计可以带来很多好处，例如:</p><ul><li>在同一页面上使用多个前端框架而不用刷新页面 (React, AngularJS, Angular, Ember, 你正在使用的框架)</li><li>独立部署每一个单页面应用</li><li>新功能使用新框架，旧的单页应用不用重写可以共存</li><li>改善初始加载时间，延迟加载代码</li></ul><p>single-spa 可以说是微前端的鼻祖了，市面上纷杂的解决方案多少都受到了它的影响，以下两款流行的生产级框架则更是基于 single-spa 开发的。</p><ul><li><a href="https://qiankun.umijs.org/zh/guide">qiankun</a>：蚂蚁金服出品的易用的微前端框架。</li><li><a href="https://github.com/namecheap/ilc">Isomorphic Layout Composer（ILC）</a>：一个将微前端组成部分支持 SSR 的完整的解决方案。</li></ul><h2 id="single-spa-架构"><a href="#single-spa-架构" class="headerlink" title="single-spa 架构"></a>single-spa 架构</h2><p>single-spa 借鉴了组件生命周期的思想，它为应用设置了针对路由的生命周期。当应用匹配路由&#x2F;处于激活状态时，应用会把自身的内容挂载到页面上；反之则卸载。典型的 single-spa 由 html 页面、应用注册脚本、应用脚本自身构成。应用注册内容包含：</p><ul><li>appName：应用名</li><li>loadingFunction：加载应用程序的代码。</li><li>activityFunction 函数：确定应用程序何时处于活动状态&#x2F;非活动状态。</li><li>customProps：自定义 props，可以不填</li></ul><p>single-spa 又约定应用脚本包含以下生命周期：</p><ul><li><code>load</code>：当应用匹配路由时就会加载脚本（非函数，只是一种状态）</li><li><code>bootstrap</code>：引导函数（对接 html，应用内容首次挂载到页面前调用）</li><li><code>mount</code>：挂载函数</li><li><code>unmount</code>：卸载函数（须移除事件绑定等内容）</li><li><code>unload</code>：非必要（unload 之后会重新启动 bootstrap 流程；借助 unload 可实现热更新）。</li></ul><p>生命周期函数获得参数包含 name（应用名）、singleSpa（实例）、mountParcel（手动挂载函数）、customProps（自定义信息），生命周期函数必须返回 Promise 或其本身为 async 函数，<code>bootstrap</code>、mount、unmount 生命周期函数不可缺省，生命周期函数可以指定多个，它们会构成异步调用链，逐个调用。简要流程图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/youngjuning/images/202111221452146.png"></p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>源码参考：<a href="https://github.com/youngjuning/simple-single-spa-webpack-example">youngjuning&#x2F;simple-single-spa-webpack-example</a></p><h3 id="1-创建一个-html-文件"><a href="#1-创建一个-html-文件" class="headerlink" title="1.创建一个 html 文件"></a>1.创建一个 html 文件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;single-spa-config.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-创建一个-single-spa-config。"><a href="#2-创建一个-single-spa-config。" class="headerlink" title="2.创建一个 single-spa-config。"></a>2.创建一个 single-spa-config。</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> singleSpa <span class="keyword">from</span> <span class="string">&#x27;single-spa&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* loading 是一个返回 promise 的函数，用于 加载/解析 应用代码。</span></span><br><span class="line"><span class="comment"> * 它的目的是为延迟加载提供便利 —— single-spa 只有在需要时才会下载应用程序的代码。</span></span><br><span class="line"><span class="comment"> * 在这个示例中，在 webpack 中支持 import ()并返回 Promise，但是 single-spa 可以使用任何返回 Promise 的加载函数。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">singleSpa.<span class="title function_">registerApplication</span>(<span class="string">&#x27;app-1&#x27;</span>, <span class="function">() =&gt;</span></span><br><span class="line">  <span class="keyword">import</span> (<span class="string">&#x27;../app1/app1.js&#x27;</span>), <span class="title function_">pathPrefix</span>(<span class="string">&#x27;/app1&#x27;</span>));</span><br><span class="line">singleSpa.<span class="title function_">registerApplication</span>(<span class="string">&#x27;app-2&#x27;</span>, <span class="function">() =&gt;</span></span><br><span class="line">  <span class="keyword">import</span> (<span class="string">&#x27;../app2/app2.js&#x27;</span>), <span class="title function_">pathPrefix</span>(<span class="string">&#x27;/app2&#x27;</span>));</span><br><span class="line"></span><br><span class="line">singleSpa.<span class="title function_">start</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Single-spa 配置顶级路由，以确定哪个应用程序对于指定 url 是活动的。</span></span><br><span class="line"><span class="comment"> * 你可以以任何你喜欢的方式实现此路由。</span></span><br><span class="line"><span class="comment"> * 一种有用的约定是在 url 前面加上活动应用程序的名称，以使顶层路由保持简单。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">pathPrefix</span>(<span class="params">prefix</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">location</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> location.<span class="property">pathname</span>.<span class="title function_">startsWith</span>(<span class="string">`<span class="subst">$&#123;prefix&#125;</span>`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-创建一个应用程序。"><a href="#3-创建一个应用程序。" class="headerlink" title="3.创建一个应用程序。"></a>3.创建一个应用程序。</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ReactDOM</span> <span class="keyword">from</span> <span class="string">&#x27;react-dom&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> singleSpaReact <span class="keyword">from</span> <span class="string">&#x27;single-spa-react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Root</span> <span class="keyword">from</span> <span class="string">&#x27;./root.component.tsx&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> reactLifecycles = <span class="title function_">singleSpaReact</span>(&#123;</span><br><span class="line">  <span class="title class_">React</span>,</span><br><span class="line">  <span class="title class_">ReactDOM</span>,</span><br><span class="line">  <span class="attr">rootComponent</span>: <span class="title class_">Root</span>,</span><br><span class="line">  domElementGetter,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">bootstrap</span>(<span class="params">props</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> reactLifecycles.<span class="title function_">bootstrap</span>(props);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">mount</span>(<span class="params">props</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> reactLifecycles.<span class="title function_">mount</span>(props);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">unmount</span>(<span class="params">props</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> reactLifecycles.<span class="title function_">unmount</span>(props);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">domElementGetter</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 确保这里有一个 div 供渲染用</span></span><br><span class="line">  <span class="keyword">let</span> el = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;app1&#x27;</span>);</span><br><span class="line">  <span class="keyword">if</span> (!el) &#123;</span><br><span class="line">    el = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    el.<span class="property">id</span> = <span class="string">&#x27;app1&#x27;</span>;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(el);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> el;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="源码解析"><a href="#源码解析" class="headerlink" title="源码解析"></a>源码解析</h2><p><img src="https://cdn.jsdelivr.net/gh/youngjuning/images/202111221420019.png"></p><p>其中 avigation、lifecycles、applications 这三个文件夹即可，是整个源码的核心。</p><h3 id="核心方法分析"><a href="#核心方法分析" class="headerlink" title="核心方法分析"></a>核心方法分析</h3><p>绿底白字则是 single-spa 的三个核心方法 <a href="http://tny.im/T5UaE">registerApplication</a>、<a href="http://tny.im/tsub">reroute</a> 和 <a href="http://tny.im/9CvCH">start</a>，脑图描述了这三个方法具体做了什么：</p><p><img src="https://cdn.jsdelivr.net/gh/youngjuning/images/202111221417558.png"></p><h3 id="初始化加载流程"><a href="#初始化加载流程" class="headerlink" title="初始化加载流程"></a>初始化加载流程</h3><p><img src="https://cdn.jsdelivr.net/gh/youngjuning/images/202111221423159.png"></p><h3 id="应用启动和挂载流程"><a href="#应用启动和挂载流程" class="headerlink" title="应用启动和挂载流程"></a>应用启动和挂载流程</h3><p><img src="https://cdn.jsdelivr.net/gh/youngjuning/images/202111221423521.png"></p><h2 id="经验"><a href="#经验" class="headerlink" title="经验"></a>经验</h2><ol><li>加载操作一般都是异步的，比如加载插件、加载应用。所以原则上只要会使用 Promise，我们就能很快模仿一个自己的微前端架构出来。</li><li>本次分享没有涉及微前端的另个一个重要概念沙箱，有机会单独分享。</li><li>技术发展都是有迹可循的，搞清发展脉络对于理解应用一个技术也很有帮助。</li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://juejin.cn/post/6941402712890638367">微前端框架single-spa源码解析、项目实战、手写简版single-spa</a></li><li><a href="https://juejin.cn/post/6862661545592111111#heading-43">微前端框架 之 single-spa 从入门到精通</a></li><li><a href="https://zhuanlan.zhihu.com/p/107059106">single-spa 实现前端微服务</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;single-spa-是什么？&quot;&gt;&lt;a href=&quot;#single-spa-是什么？&quot; class=&quot;headerlink&quot; title=&quot;single-spa 是什么？&quot;&gt;&lt;/a&gt;single-spa 是什么？&lt;/h2&gt;&lt;p&gt;Single-spa 是一个将多个单</summary>
      
    
    
    
    <category term="前端" scheme="https://youngjuning.js.org/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="微前端" scheme="https://youngjuning.js.org/tags/%E5%BE%AE%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Node.js 常用方法</title>
    <link href="https://youngjuning.js.org/26f112a8adea/"/>
    <id>https://youngjuning.js.org/26f112a8adea/</id>
    <published>2021-11-08T09:16:05.000Z</published>
    <updated>2023-02-26T03:10:50.579Z</updated>
    
    <content type="html"><![CDATA[<h2 id="fs"><a href="#fs" class="headerlink" title="fs"></a>fs</h2><blockquote><p>推荐使用 fs-extra</p></blockquote><ul><li><code>fs.readFileSync(path).toString()</code>: 把文件读成字符串</li><li><code>fs.readFileSync(path, &#39;utf-8&#39;)</code>: 本文件读成字符串</li></ul><h2 id="child-process"><a href="#child-process" class="headerlink" title="child_process"></a>child_process</h2><blockquote><p>推荐使用 execa</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;fs&quot;&gt;&lt;a href=&quot;#fs&quot; class=&quot;headerlink&quot; title=&quot;fs&quot;&gt;&lt;/a&gt;fs&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;推荐使用 fs-extra&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fs.readFil</summary>
      
    
    
    
    <category term="前端" scheme="https://youngjuning.js.org/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Node.js" scheme="https://youngjuning.js.org/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>vscode 插件发布</title>
    <link href="https://youngjuning.js.org/4b349879ced6/"/>
    <id>https://youngjuning.js.org/4b349879ced6/</id>
    <published>2021-08-12T12:46:38.000Z</published>
    <updated>2023-02-26T03:10:50.583Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装发布工具"><a href="#安装发布工具" class="headerlink" title="安装发布工具"></a>安装发布工具</h2><p><a href="https://github.com/Microsoft/vsce">vsce</a> 是一个用于将插件发布到<a href="https://code.visualstudio.com/docs/editor/extension-gallery">市场</a>上的命令行工具。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install vsce -g</span><br></pre></td></tr></table></figure><h2 id="新建-Azure-DevPos-组织"><a href="#新建-Azure-DevPos-组织" class="headerlink" title="新建 Azure DevPos 组织"></a>新建 Azure DevPos 组织</h2><ol><li>登录 <a href="https://azure.microsoft.com/zh-cn/services/devops/">Azure DevOps</a>。</li><li>点击 <strong>New organization</strong>。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/youngjuning/images/20210812201149.png"></p><ol start="3"><li>确认信息，然后选择 <strong>Continue</strong>。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/youngjuning/images/20210812201210.png"></p><p><img src="https://cdn.jsdelivr.net/gh/youngjuning/images/20210812201223.png"></p><p>到这里，一个组织就创建成功了，之后随时登录到你的组织<a href="https://dev.azure.com/tuyaworks">https://dev.azure.com/tuyaworks</a>。</p><h2 id="获取-Personal-Access-Token"><a href="#获取-Personal-Access-Token" class="headerlink" title="获取 Personal Access Token"></a>获取 Personal Access Token</h2><p>下面的例子里，我们假设组织名为 vscode，从你的组织主页（例如：<a href="https://dev.azure.com/tuyaworks">https://dev.azure.com/tuyaworks</a> ） 进入 Personal access tokens 页面：</p><p><img src="https://cdn.jsdelivr.net/gh/youngjuning/images/20210812201259.png"></p><p>点击 <strong>New Token</strong> 创建一个新的 Personal Access Token：</p><p><img src="https://cdn.jsdelivr.net/gh/youngjuning/images/20210812202141.png"></p><p>给 Personal Access Token 添加描述，过期时间等等，你最好把过期时间设置为 1 年，这样你接下就能方便很多，选择 <strong>custom defined（用户自定义）</strong> 范围，然后点击 <strong>Show all scopes(显示全部)</strong> ，在这个列表中找到 Marketplace，并勾选 Acquire 和 Manage：</p><p><img src="https://cdn.jsdelivr.net/gh/youngjuning/images/20210812202337.png"></p><p>点击 <strong>Create</strong>，你就会看到新创建的 Personal Access Token 了，复制好，你接下来就会用到这个 token 来创建一个发行方了。</p><p><img src="https://cdn.jsdelivr.net/gh/youngjuning/images/20210812202402.png"></p><h2 id="创建一个发行方"><a href="#创建一个发行方" class="headerlink" title="创建一个发行方"></a>创建一个发行方</h2><p><strong>发行方</strong>是 VS Code 市场有权发布插件的唯一标识，每个插件的 package.json 文件都包含着 publisher 字段。<br>现在我们已经有了 Personal Access Token，我们马上可以通过 <a href="https://aka.ms/vscode-create-publisher">https://aka.ms/vscode-create-publisher</a> 创建一个发行方。</p><h2 id="发行方登录"><a href="#发行方登录" class="headerlink" title="发行方登录"></a>发行方登录</h2><p>如果你已经有发行方账号了：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vsce login (publisher name)</span><br></pre></td></tr></table></figure><p><code>vsce</code> 会记住这个 Personal Access Token，日后你需要再次使用的时候会自动带上。</p><p>你也可以用命令参数 <code>-p &lt;token&gt;</code> 直接登录然后立即发布插件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vsce publish -p &lt;token&gt;</span><br></pre></td></tr></table></figure><h2 id="增量更新插件版本"><a href="#增量更新插件版本" class="headerlink" title="增量更新插件版本"></a>增量更新插件版本</h2><p>用 SemVer 语义标识符：major，minor，patch 增量更新插件版本号。</p><p>例如，你想把插件从 1.0.0 更新到 1.1.0，那么加上 minor：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vsce publish minor</span><br></pre></td></tr></table></figure><p>插件 <em>package.json</em> 的 version 会先更新，然后才发布插件。</p><p>你也可以通过命令行指定版本号：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vsce publish 2.0.1</span><br></pre></td></tr></table></figure><h2 id="下架插件"><a href="#下架插件" class="headerlink" title="下架插件"></a>下架插件</h2><p>通过指定插件 idpublisher.extension 下架插件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vsce unpublish (publisher name).(extension name)</span><br></pre></td></tr></table></figure><blockquote><p>当你下架插件的时候，市场会移除所有插件的历史统计数据，请在下架前再三考虑，最好还是更新插件吧。</p></blockquote><h2 id="插件打包"><a href="#插件打包" class="headerlink" title="插件打包"></a>插件打包</h2><p>你也可能只是想打包一下插件，而不是发布到商店里。用下列命令将插件打包到 <code>.vsix</code> 文件中：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vsce package</span><br></pre></td></tr></table></figure><p>这个命令会在当前目录生成一个 .vsix 文件，直接从 .vsix 安装插件是允许的，查看<a href="https://github.com/Microsoft/vscode-docs/blob/master/docs/editor/extension-gallery.md#install-from-a-vsix">从 VSIX 安装插件</a>了解更多内容。</p><h2 id="VS-Code-版本兼容性"><a href="#VS-Code-版本兼容性" class="headerlink" title="VS Code 版本兼容性"></a>VS Code 版本兼容性</h2><p>当你制作插件的时候，你需要描述插件对 VS Code 的版本兼容性——修改 <em>package.json</em> 中的 engines.vscode：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;engines&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;vscode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.8.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>1.8.0 表示你的插件只能兼容 1.8.0 版本的 VS Code，^1.8.0 则表示你的插件向上兼容，包括 1.8.1, 1.9.0 等等。</p><p>使用 <code>engines.vscode</code> 可以确保插件安装环境包含了插件依赖的 API。这个机制在稳定版和 Insider 版本都适用。</p><p>现在我们假设最新的稳定版 API 是 1.8.0，而 1.9.0 引入了新的 API，所以你可以用 1.9.0-insider 标识插件在 Insider 版中也可正常使用。 如果你想使用这些刚刚引入的 API，则将依赖版本设置为 ^1.9.0，你的插件则只能安装在 &gt;&#x3D;1.9.0 的 VS Code 上，也就意味着所有当前的 Insider 版本都可以用得上，而稳定版只有在更新到 1.9.0 才能使用你的插件。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装发布工具&quot;&gt;&lt;a href=&quot;#安装发布工具&quot; class=&quot;headerlink&quot; title=&quot;安装发布工具&quot;&gt;&lt;/a&gt;安装发布工具&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/Microsoft/vsce&quot;&gt;vsce&lt;/a&gt; 是</summary>
      
    
    
    
    <category term="前端" scheme="https://youngjuning.js.org/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="vscode" scheme="https://youngjuning.js.org/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>每个前端都值得拥有自己的组件库，就像每个夏天都拥有西瓜🍉</title>
    <link href="https://youngjuning.js.org/9d8bd593921d/"/>
    <id>https://youngjuning.js.org/9d8bd593921d/</id>
    <published>2021-07-11T16:00:00.000Z</published>
    <updated>2023-02-26T03:10:50.583Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文为掘金社区首发签约文章，未获授权禁止转载</p></blockquote><p>洛竹有一个朋友小黑最近在面试时被问到如何设计一个前端组件库。没啥经验的小黑回答了业务提取封装成库以及基于 antd 结合业务二次封装。最后小黑被 HR 以灵力不够挂掉了。其实这个问题考察的并不是假大空的概念，而是有关开发者仓库管理、组件设计、单元测试、持续集成、协作管理等等能力。那么为了赋能小黑完美回答这个问题呢，我决定带领小黑一步一步建设一个 React Native 组件库。</p><p>这是一篇干货比较多的组件库搭建实战教程，不仅有通用的代码规范、提交规范、文档维护、单元测试、GitHub Action 配置的讲解，还涉及基于 lerna 的多包管理架构、React Native 图标库建设、React Native 组件库开发调试、按需加载原理及实现。工程化的思想是通用的，所以无论是你用的框架是什么，本文都值得一读。</p><blockquote><p>如果电脑前的掘友也对组件库开发感兴趣，不妨先给个点赞，再持续关注洛竹和小黑的组件库开发之旅。PS：配合<a href="https://github.com/youngjuning/vant-react-native">仓库</a>和<a href="https://vant-react-native.js.org/">组件库文档</a>阅读本文效果更佳喲！</p></blockquote><h2 id="站在-Vant-Design-的肩膀上"><a href="#站在-Vant-Design-的肩膀上" class="headerlink" title="站在 Vant Design 的肩膀上"></a>站在 Vant Design 的肩膀上</h2><p>维护开发一个组件库无疑是需要投入很多时间和精力的，Flag 立了倒，倒了又立。可谓万事开头难，首先我们要有自知之明，在没有设计师和业余开发的情况下，我选择了给现有 UI Design 实现 React Native 版本的方式开启组件库开发之旅。在调研了 <a href="https://github.com/youzan/vant">vant</a>、<a href="https://github.com/NSFI/fishd-mobile/">fishd-mobile</a> 和 <a href="https://github.com/ant-design/ant-design-mobile">antd-mobile</a> 后我选择了 vant。这是几个仓库的现状对比：</p><table><thead><tr><th>组件库</th><th>团队</th><th>Github Star</th><th>Npm 周下载量</th><th>维护度</th></tr></thead><tbody><tr><td>vant</td><td>有赞</td><td>17.7K</td><td>27,789</td><td>维高度高，流行度也高</td></tr><tr><td>antd-mobile</td><td>Ant Design Team</td><td>8.9K</td><td>31,470</td><td>几乎不维护，据说蚂蚁内部也不用了</td></tr><tr><td>fishd-mobile</td><td>网易云商前端</td><td>29</td><td>22</td><td>看起来是个 KPI 项目无疑了</td></tr></tbody></table><p>确定了旅程的方向，就是给我们的组件库起一个合适的名字和口号，用前端工程师的方式表述就是 <code>package.json</code> 的 <code>name</code> 和 <code>description</code> 字段：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// package.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vant-react-native&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Lightweight React Native UI Components inspired on Vant&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>由于我们的组件库定位是 vant 的 RN 版，参照 lottie-react-native、styled-react-native、jpush-react-native 的命名方式我们将组件库命名为 vant-react-native，同时也是希望组件库完成时能获得 vant 官方的支持。</p></blockquote><h2 id="基于-Lerna-的多包管理架构"><a href="#基于-Lerna-的多包管理架构" class="headerlink" title="基于 Lerna 的多包管理架构"></a>基于 Lerna 的多包管理架构</h2><p>Lerna 是一个管理工具，用于管理包含多个软件包（package）的 JavaScript 项目。由 Lerna 管理的仓库我们一般称之为单体仓库（monorepo）。基于 Lerna 的多包管理架构的优点在于：</p><ul><li>组件级别解耦，独立版本控制，每个组件都有版本记录可追溯</li><li>组件单独发布，支持灰度、版本回滚以及平滑升降级</li><li>按需引用，用户安装具体某个组件包，无需配置即可实现按需加载的效果。</li><li>关注点分离，降低大型复杂度、组件之间依赖清晰且可控制</li><li>单一职责原则，降低开源基友的参与和贡献难度</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">└── packages</span><br><span class="line">    ├── button <span class="comment"># @vant-react-native/button</span></span><br><span class="line">    └── icons <span class="comment"># @vant-react-native/icon</span></span><br></pre></td></tr></table></figure><h3 id="初始化-lerna-项目"><a href="#初始化-lerna-项目" class="headerlink" title="初始化 lerna 项目"></a>初始化 lerna 项目</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> vant-react-native &amp;&amp; lerna init --independent</span><br></pre></td></tr></table></figure><h3 id="yarn-workspaces"><a href="#yarn-workspaces" class="headerlink" title="yarn workspaces"></a>yarn workspaces</h3><p>使用 <a href="https://yarnpkg.com/lang/zh-Hans/docs/workspaces/">yarn workspaces</a> 结合 Lerna <code>useWorkspaces</code> 可以实现 <a href="https://github.com/lerna/lerna/blob/main/doc/hoist.md">Lerna Hoisting</a>。这并不是多此一举，这可以让你在统一的地方（根目录）管理依赖，这即节省时间又节省空间。</p><p>配置 <code>lerna.json</code>:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="attr">&quot;npmClient&quot;</span><span class="punctuation">:</span> <span class="string">&quot;yarn&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;useWorkspaces&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>托管给 yarn wrokspace 之后，lerna 的 <code>packages</code> 将会被顶级 <code>package.json</code> 的 <code>workspaces</code> 覆盖:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="attr">&quot;workspaces&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;packages/*&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="lerna-publish-config"><a href="#lerna-publish-config" class="headerlink" title="lerna publish config"></a>lerna publish config</h3><p>如果你不想在所有 <code>package.json</code> 文件中单独明确设置你的注册表配置，例如使用私有注册表时，设置 <code>command.publish.registry</code> 很有用。配置 <code>ignoreChanges</code> 则是为了避免不必要的版本升级。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;ignoreChanges&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">  <span class="string">&quot;ignored-file&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="string">&quot;**/__tests__/**&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="string">&quot;**/*.md&quot;</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;publish&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;registry&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://registry.npmjs.org&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>除此之外，如果你的包名是带 scope 的，需要在那个包的 <code>package.json</code> 中设置 <code>publishConfig.access</code> 为 <code>&quot;public&quot;</code>。</p></blockquote><h3 id="lerna-version-config"><a href="#lerna-version-config" class="headerlink" title="lerna version config"></a>lerna version config</h3><p>当配置 <code>conventionalCommits</code> 为 <code>true</code> 后，lerna 版本将使用 <a href="https://conventionalcommits.org/">Conventional Commits Specification</a> 来确定版本升级并 <a href="https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-cli">生成 CHANGELOG.md 文件</a>。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;conventionalCommits&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;chore(release): publish&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="规范化提交"><a href="#规范化提交" class="headerlink" title="规范化提交"></a>规范化提交</h2><p>规范化 <code>git commit</code> 对于提高 <code>git log</code> 可读性、可控的版本控制和 changelog 生成都有着重要的作用。洛竹之前在 <a href="https://juejin.cn/post/6877462747631026190">一文搞定规范化Git Commit</a> 中详细讲述了 Conventional Commits 的概念以及 commitizen、cz-customizable、@commitlint&#x2F;cli、yorkie 和 commitlint-config-cz 等工具的配置。</p><p>由于配置繁琐，我在 <a href="https://github.com/youngjuning/cli#%E4%B8%80%E9%94%AE%E9%85%8D%E7%BD%AE-conventional-commit">@youngjuning&#x2F;cli</a> 中添加了 <code>init-commit</code> 命令一键配置 conventional commit。可以打开这个 <a href="https://github.com/youngjuning/vant-react-native/commit/d49f4203eacd37d3908306d309783ed5c11fb565">commit</a> 查看配置信息。</p><blockquote><p>注意：husky 高版本用法不向后兼容，我在这个 <a href="https://github.com/youngjuning/vant-react-native/commit/174c7fd883dd5dc7a0c4f5d8fcb25ed605680b12">commit</a> 中用尤大的 yorkie 代替了 husky。</p></blockquote><h2 id="代码规范化"><a href="#代码规范化" class="headerlink" title="代码规范化"></a>代码规范化</h2><p>代码规范化的重要性不言而喻，代码规范化涉及的工具有 editorconfig、eslint、prettier 等，在 <a href="https://juejin.cn/post/6854573217320075278">装它|再也不用操心ESLint配置</a> 一文中我介绍了如何一步一步建设属于自己的 eslint config 插件并产出了 <a href="https://github.com/youngjuning/eslint-config">@youngjuning&#x2F;eslint-config</a> 和 <a href="https://github.com/youngjuning/prettier-config">@youngjuning&#x2F;prettier-config</a>。</p><p>vant-react-native 暂时使用 @youngjuning&#x2F;eslint-config、@youngjuning&#x2F;prettier-config 约束项目代码规范。相关配置如下文。</p><h3 id="eslint"><a href="#eslint" class="headerlink" title="eslint"></a>eslint</h3><p>首先安装 react-native 所需的插件。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yarn add -D eslint-plugin-react \</span><br><span class="line">  eslint-plugin-react-hooks \</span><br><span class="line">  eslint-plugin-jsx-a11y \</span><br><span class="line">  eslint-plugin-import \</span><br><span class="line">  eslint-plugin-react-native</span><br></pre></td></tr></table></figure><p>然后配置 <code>.eslintrc.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// .eslintrc.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">extends</span>: [<span class="string">&#x27;@youngjuning/eslint-config/react-native&#x27;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="prettier"><a href="#prettier" class="headerlink" title="prettier"></a>prettier</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// .prettierrc.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="built_in">require</span>(<span class="string">&#x27;@youngjuning/prettier-config&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>@youngjuning&#x2F;eslint-config 计划也用 lerna 管理，产出 @youngjuning&#x2F;eslint-config-react、@youngjuning&#x2F;eslint-config-react-native、@youngjuning&#x2F;eslint-config-vue 让开发者无需过多配置开箱即用。</p></blockquote><h3 id="editorconfig"><a href="#editorconfig" class="headerlink" title="editorconfig"></a>editorconfig</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># .editorconfig</span><br><span class="line"># EditorConfig is awesome: http://EditorConfig.org</span><br><span class="line"></span><br><span class="line"># top-most EditorConfig file</span><br><span class="line">root = true</span><br><span class="line"></span><br><span class="line"># Unix-style newlines with a newline ending every file</span><br><span class="line">[*]</span><br><span class="line">indent_style = space</span><br><span class="line">indent_size = 2</span><br><span class="line">end_of_line = lf</span><br><span class="line">charset = utf-8</span><br><span class="line">trim_trailing_whitespace = true</span><br><span class="line">insert_final_newline = true</span><br><span class="line"></span><br><span class="line">[*.md]</span><br><span class="line">trim_trailing_whitespace = false</span><br><span class="line"></span><br><span class="line">[*.gradle]</span><br><span class="line">indent_size = 4</span><br><span class="line"></span><br><span class="line">[BUCK]</span><br><span class="line">indent_size = 4</span><br></pre></td></tr></table></figure><h3 id="yorkie-amp-lint-staged"><a href="#yorkie-amp-lint-staged" class="headerlink" title="yorkie &amp; lint-staged"></a>yorkie &amp; lint-staged</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yarn add -D yorkie lint-staged</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;gitHooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;commit-msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;commitlint -e -V&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;pre-commit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lint-staged&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;lint-staged&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;**/*.&#123;js,jsx,ts,tsx&#125;&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;eslint --fix&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;git add .&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="第一个组件从-Icon-开始"><a href="#第一个组件从-Icon-开始" class="headerlink" title="第一个组件从 Icon 开始"></a>第一个组件从 Icon 开始</h2><p>一个成熟的组件库都会拥有自己的一套 Icon，Icon 一般由设计师通过 Sketch 设计，然后导出 svg 文件。</p><p>ant-design-icons 的 svg 文件是 <a href="https://github.com/ant-design/ant-design-icons/tree/master/packages/icons-svg/svg/filled">保存在本地</a>，然后通过脚本生成 <a href="https://github.com/ant-design/ant-design-icons/tree/master/packages/icons-react/src/icons">react 组件</a>、<a href="https://github.com/ant-design/ant-design-icons/tree/master/packages/icons-vue">vue 组件</a> 和 <a href="https://github.com/ant-design/ant-design-icons/tree/master/packages/icons-react-native">icons-react-native</a> 等组件，由于支持的框架比较完备我们无需自己实现，RN 我们直接使用 <a href="https://github.com/ant-design/ant-design-icons/tree/master/packages/icons-react-native">icons-react-native</a>。</p><p>vant 以及 fishd-mobile 则是通过 Iconfont 维护 svg 文件，然后通过设置 <code>@font-face</code> 的方式实现 Icon 组件，如图所示：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9b3f6212f0124f4fab8b70dfeeb40c25~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>有了 ttf 文件，我们可以像 @ant-design&#x2F;icons-react-native 一样基于 ttf 文件使用脚本生成 Icon 组件，但是使用 ttf 字体有一个弊端，就是每次更新图标，都要相应的更新 ttf 文件，然后再次打包发布 APP。而且 ttf 不支持多种色彩的图标，导致所有图标都是单色。如果你是借助 react-native-vector-icons，该库内置了 10 多套 ttf 文件，合起来有 2M 左右；你可能用不到它们，但是它们仍然会被打包进你的 APP 里，这也是我认为 react-native-elements 这个库外强中干的一大原因。</p><p>那么只有 Iconfont 链接我们如何实现 vant-icons 的 React Native 版本呢？这里洛竹没有自己写脚本，而是使用了一款叫 react-native-iconfont-cli 的工具，<a href="https://github.com/fwh1990">fwh1990</a> 大佬针对以上痛点用纯 Javascript 实现 iconfont 到 React 组件的转换操作，不需要依赖 ttf 字体文件，不需要手动下载图标到本地。</p><h3 id="创建-lerna-子包"><a href="#创建-lerna-子包" class="headerlink" title="创建 lerna 子包"></a>创建 lerna 子包</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建主包，主包用来统一导出所有的组件</span></span><br><span class="line">$ lerna create vant-react-native -y</span><br><span class="line"><span class="comment"># 创建 icons 包，我们的第一个组件！</span></span><br><span class="line">$ lerna create @vant-react-native/icons -y</span><br></pre></td></tr></table></figure><p>我们的目录结构看起来是这样的：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">└── packages</span><br><span class="line">    ├── icons</span><br><span class="line">    │   ├── README.md</span><br><span class="line">    │   └── package.json</span><br><span class="line">    └── vant-react-native</span><br><span class="line">        ├── README.md</span><br><span class="line">        └── package.json</span><br></pre></td></tr></table></figure><h3 id="生成-icons"><a href="#生成-icons" class="headerlink" title="生成 icons"></a>生成 icons</h3><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn workspace @vant-react-native/icons add -D react-native-svg react-native-iconfont-cli</span><br></pre></td></tr></table></figure><h4 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h4><p>我们在 <code>packages/icons</code> 目录下使用 <code>npx iconfont-init</code> 命令会生成 <code>iconfont.json</code> 文件，自定义后内容如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;symbol_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://at.alicdn.com/t/font_2553510_7cds497uxwn.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;use_typescript&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;save_dir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./lib&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;trim_icon_prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;van-icon&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;default_icon_size&quot;</span><span class="punctuation">:</span> <span class="number">18</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="生成-React-Native-标准组件"><a href="#生成-React-Native-标准组件" class="headerlink" title="生成 React Native 标准组件"></a>生成 React Native 标准组件</h4><p>执行 <code>npx iconfont-rn</code> 命令即可生成标准 React Native 组件。由于图标文件比较多，我们不将图标产物加入 git 管理。所以我们需要在 npm 发布前执行构建命令：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npx iconfont-rn&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;prepublishOnly&quot;</span><span class="punctuation">:</span> <span class="string">&quot;yarn build&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="配置-react-native-vant"><a href="#配置-react-native-vant" class="headerlink" title="配置 react-native-vant"></a>配置 react-native-vant</h3><p>我们前面提到 <code>packages/vant-react-native</code> 是主包的目录，我们需要将 <code>@vant-react-native/icons</code> 包添加到主包的依赖中并导出。</p><h4 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lerna add @vant-react-native/icons --scope vant-react-native</span><br></pre></td></tr></table></figure><h4 id="导出-Icon-组件"><a href="#导出-Icon-组件" class="headerlink" title="导出 Icon 组件"></a>导出 Icon 组件</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// packages/vant-react-native/src/index.ts</span></span><br><span class="line"><span class="keyword">export</span> &#123; <span class="keyword">default</span> <span class="keyword">as</span> <span class="title class_">Icon</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@vant-react-native/icons&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> * <span class="keyword">from</span> <span class="string">&#x27;@vant-react-native/icons&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="tsconfig-配置"><a href="#tsconfig-配置" class="headerlink" title="tsconfig 配置"></a>tsconfig 配置</h4><p>对与每个子包我们期望使用一样的配置，所以我们会先在整个项目的根目录新建 <a href="https://github.com/youngjuning/vant-react-native/blob/main/tsconfig.base.json">tsconfig. base.json</a>，在子包继承即可。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;extends&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../../tsconfig.base.json&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;outDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lib&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;include&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;src/**/*&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="配置发布脚本"><a href="#配置发布脚本" class="headerlink" title="配置发布脚本"></a>配置发布脚本</h4><p>和 <code>@vant-react-native/icons</code> 子包一样，我们需要添加 <code>build</code> 和 <code>prepublishOnly</code> 脚本：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tsc&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;prepublishOnly&quot;</span><span class="punctuation">:</span> <span class="string">&quot;yarn build&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="发布包"><a href="#发布包" class="headerlink" title="发布包"></a>发布包</h3><p>第一次发布的话，注意使用的是 <code>lerna publish 0.0.1</code>，因为 lerna 的发布命令没有第一次发布这个参数，所以需要显示指定初始版本。或者可以将初始版本设置为 <code>0.0.0</code> 然后执行 <code>lerna publish</code>。</p><blockquote><p>小技巧：如果发布后想查看包内容，可以通过 <a href="https://www.jsdelivr.com/">jsdelivr</a> 查看。比如刚发布的 <a href="https://cdn.jsdelivr.net/npm/vant-react-native/">vant-react-native</a> 和 <a href="https://cdn.jsdelivr.net/npm/@vant-react-native/icons/">@vant-react-native&#x2F;icons</a></p></blockquote><h2 id="开发调试"><a href="#开发调试" class="headerlink" title="开发调试"></a>开发调试</h2><p>一个完善且体验良好的调试流程不仅能够满足在开发阶段验证组件是否符合预期，还可以降低开源社区基友的参与难度。React Native 组件库的调试和其他技术栈流程大体没有区别，只不过因为 <a href="https://github.com/facebook/metro/issues/1">Metro 不支持软连接</a> 以及 vant-react-native 是基于 lerna 的单体仓库项目，我们的配置会有不同。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f3856a691a73409c8533fa9dd1966357~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><h3 id="初始化-React-Native-App"><a href="#初始化-React-Native-App" class="headerlink" title="初始化 React Native App"></a>初始化 React Native App</h3><p>由于是 React Native 项目，我们需要初始化一个 React Native 项目。首先找一个地方使用 <code>react-native init vantapp --template react-native-template-typescript</code> 创建一个新的 React Native App。然后将生成的 App 与我们的主项目合并。合并后的项目结构如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── App.tsx</span><br><span class="line">├── __tests__</span><br><span class="line">│   └── App-test.tsx</span><br><span class="line">├── android</span><br><span class="line">│   ├── app</span><br><span class="line">│   ├── build.gradle</span><br><span class="line">│   ├── gradle</span><br><span class="line">│   ├── gradle.properties</span><br><span class="line">│   ├── gradlew</span><br><span class="line">│   ├── gradlew.bat</span><br><span class="line">│   └── settings.gradle</span><br><span class="line">├── app.json</span><br><span class="line">├── babel.config.js</span><br><span class="line">├── commitlint.config.js</span><br><span class="line">├── index.js</span><br><span class="line">├── ios</span><br><span class="line">│   ├── Podfile</span><br><span class="line">│   ├── Podfile.lock</span><br><span class="line">│   ├── Pods</span><br><span class="line">│   ├── vantapp</span><br><span class="line">│   ├── vantapp.xcodeproj</span><br><span class="line">│   ├── vantapp.xcworkspace</span><br><span class="line">│   └── vantappTests</span><br><span class="line">├── lerna.json</span><br><span class="line">├── metro.config.js</span><br><span class="line">├── package.json</span><br><span class="line">├── packages</span><br><span class="line">│   ├── icons</span><br><span class="line">│   └── vant-react-native</span><br><span class="line">├── tsconfig.base.json</span><br><span class="line">├── tsconfig.json</span><br><span class="line">└── yarn.lock</span><br></pre></td></tr></table></figure><p>主要冲突的是 Prettier、eslint 等工具的配置，合并没那么难。在运行项目之前，我们一般需要编译项目。我们可以借助 <code>lerna run build</code> 命令批量运行子包里的 <code>build</code> npm script。</p><blockquote><p>注意📢：由于子包之间有依赖关系，不要使用 <code>--parallel</code> 参数并行执行打包脚本。</p></blockquote><p>现在我们编写一个九宫格 Demo 验证一下：</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// App.tsx</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; <span class="title class_">Component</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">View</span>, <span class="title class_">Text</span>, <span class="title class_">SafeAreaView</span>, <span class="title class_">ScrollView</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react-native&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Icon</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vant-react-native&#x27;</span>;</span><br><span class="line"><span class="comment">// 我们也可以只安装 @vant-react-native/icons 包</span></span><br><span class="line"><span class="comment">// import &#123; VanIconAdd &#125; from &#x27;@vant-react-native/icons&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">IconNameType</span> = <span class="title class_">React</span>.<span class="property">ComponentProps</span>&lt;<span class="keyword">typeof</span> <span class="title class_">Icon</span>&gt;[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">App</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Component</span> &#123;</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">SafeAreaView</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ScrollView</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Text</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">textAlign:</span> &#x27;<span class="attr">center</span>&#x27;, <span class="attr">paddingVertical:</span> <span class="attr">20</span>, <span class="attr">fontSize:</span> <span class="attr">25</span>, <span class="attr">color:</span> &#x27;#<span class="attr">007fff</span>&#x27; &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &gt;</span></span></span><br><span class="line"><span class="language-xml">            vant-react-native</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">View</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">flexWrap:</span> &#x27;<span class="attr">wrap</span>&#x27;, <span class="attr">flexDirection:</span> &#x27;<span class="attr">row</span>&#x27; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;data.map((item, index) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">              const lastLineLength = data.length % 4 || 4;</span></span><br><span class="line"><span class="language-xml">              return (</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">View</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                  <span class="attr">key</span>=<span class="string">&#123;item&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                  <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    <span class="attr">width:</span> &#x27;<span class="attr">25</span>%&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    <span class="attr">marginBottom:</span> <span class="attr">index</span> &lt; <span class="attr">data.length</span> <span class="attr">-</span> <span class="attr">lastLineLength</span> ? <span class="attr">40</span> <span class="attr">:</span> <span class="attr">0</span>,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                    <span class="attr">alignItems:</span> &#x27;<span class="attr">center</span>&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                  &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                &gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">name</span>=<span class="string">&#123;item&#125;</span> <span class="attr">size</span>=<span class="string">&#123;40&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">                  <span class="tag">&lt;<span class="name">Text</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">color:</span> &#x27;#<span class="attr">646566</span>&#x27;, <span class="attr">marginTop:</span> <span class="attr">10</span> &#125;&#125;&gt;</span>&#123;item&#125;<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              );</span></span><br><span class="line"><span class="language-xml">            &#125;)&#125;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">ScrollView</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">SafeAreaView</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">data</span>: <span class="title class_">IconNameType</span>[] = [<span class="string">&#x27;location-o&#x27;</span>, <span class="string">&#x27;like-o&#x27;</span>, <span class="string">&#x27;star-o&#x27;</span>, <span class="string">&#x27;phone-o&#x27;</span>, <span class="string">&#x27;setting-o&#x27;</span>, <span class="string">&#x27;fire-o&#x27;</span>, <span class="string">&#x27;coupon-o&#x27;</span>, <span class="string">&#x27;cart-o&#x27;</span>, <span class="string">&#x27;shopping-cart-o&#x27;</span>, <span class="string">&#x27;cart-circle-o&#x27;</span>, <span class="string">&#x27;friends-o&#x27;</span>, <span class="string">&#x27;comment-o&#x27;</span>, <span class="string">&#x27;gem-o&#x27;</span>, <span class="string">&#x27;gift-o&#x27;</span>, <span class="string">&#x27;point-gift-o&#x27;</span>, <span class="string">&#x27;send-gift-o&#x27;</span>, <span class="string">&#x27;service-o&#x27;</span>, <span class="string">&#x27;bag-o&#x27;</span>, <span class="string">&#x27;todo-list-o&#x27;</span>, <span class="string">&#x27;balance-list-o&#x27;</span>, <span class="string">&#x27;close&#x27;</span>, <span class="string">&#x27;clock-o&#x27;</span>, <span class="string">&#x27;question-o&#x27;</span>, <span class="string">&#x27;passed&#x27;</span>];</span><br></pre></td></tr></table></figure><p>然后执行 <code>yarn ios</code> 查看实际效果（之后我们就可以执行 <code>yarn start --reset-cache</code> 快速开始调试）：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3d2828ea83804d3bb53a0563eaf429bd~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>上面的示例代码中我们可以看到我们直接使用了 <code>import &#123; Icon &#125; from &#39;vant-react-native&#39;;</code> 而不是相对路径引用 packages 下的模块。可是我们的项目并没与安装这个依赖，编译器是怎么找到的呢？这里也没有什么银弹，这是因为 lerna 会把子包软链接到 node_modules 中，我们可以使用 <code>ls -al</code> 发现看到包的实际指向：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7857ecd166a74331befe791dc677257b~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>我们也可以在类型提示中看到实际指向的是 packages 下的文件：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ba82260550904406b4224734761c2f5e~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><blockquote><p>注意📢：<a href="https://github.com/facebook/metro/issues/1">Metro 不支持符号链接</a> 指的是软连接的目录不在项目根目录下，这里我们软连接指向的位置还在根目录下，所以可以正确工作✅。这个特性保证了调试与生产开发的一致性和便利性。</p></blockquote><h3 id="实时编译"><a href="#实时编译" class="headerlink" title="实时编译"></a>实时编译</h3><p>现在我们的调试流程是：</p><ol><li>修改代码</li><li>执行 <code>lerna run build</code> 编译每个子包</li><li>执行 <code>yarn ios</code> 调试项目</li><li>修改代码</li><li>执行 <code>lerna run build</code> 重新编译</li><li>执行 <code>yarn start --reset-cache</code> 运行项目</li><li>循环 4、5、6。</li></ol><p>尽管 React Native 有 Fast Refresh 功能，但是由于我们的代码是需要编译的，所以我们需要重复编译运行的动作。</p><p>任何重复的工作都可以用脚本代替。首先我们需要给每个子包添加实时编译的 script，像 rollup、babel、webpack、typescript 都有参数可以实现实时编译：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tsc -w&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tsc&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;prepublishOnly&quot;</span><span class="punctuation">:</span> <span class="string">&quot;yarn build&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>而我们的 @vant-react-native&#x2F;icons 包使用的 <code>npx iconfont</code> 没有实时编译选项，经过调研，我引入了 <a href="https://www.npmjs.com/package/onchange">onchange</a> 这个库可以基于 glob 模式监听文件改动后执行一个命令：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;onchange -i &#x27;iconfont.json&#x27; -- yarn build&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>然后我们需要使用 <code>lerna run dev --parallel</code> 批量执行实时编译脚本，这里加 <code>--parallel</code> 是因为子包如果是实时编译，进程会卡住。为了补救，我们不得不预先编译 <code>@vant-react-native/icons</code> 包，然后因为同样的原因我引入了 <code>npm-run-all</code> 来并行执行 <code>lerna run dev</code> 和 <code>react-native start</code>，完整脚本如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;predev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lerna run build --scope @vant-react-native/icons&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lerna run dev --parallel&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;react-native start&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;debug&quot;</span><span class="punctuation">:</span> <span class="string">&quot;run-p dev start&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="按需加载"><a href="#按需加载" class="headerlink" title="按需加载"></a>按需加载</h2><blockquote><p>小黑：“洛竹哥哥，我之前为了使用 react-native-elements 的其中几个组件而引入了整个组件库。因为这个组件库依赖了 react-native-vector-icons 导致 bundle 包变大。如果我就是想用整套 vant-react-native，如何解决这个问题呢？”</p></blockquote><p>众所周知，React Native 的打包工具 Metro <a href="https://github.com/facebook/metro/issues/227#issuecomment-583358386">不支持 tree-shaking</a>。解决这个问题的方式其实很简单，机智的你可能知道配合 <a href="https://www.npmjs.com/package/babel-plugin-import">babel-plugin-import</a> 是可以实现按需加载的需求的。但由于我们是多包管理架构，需要针对多包的架构设计一个方案。</p><h3 id="react-naitve-bundle-包"><a href="#react-naitve-bundle-包" class="headerlink" title="react-naitve bundle 包"></a>react-naitve bundle 包</h3><p>为了比对优化前后包大小，我们需要使用 <code>react-native bundle</code> 命令看一下纯 JS 包的大小，我们来简单看下这个命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">react-native bundle --platform ios --entry-file index.js --bundle-output ./bundle/ios/index.ios.jsbundle --assets-dest ./bundle/ios --dev <span class="literal">false</span> --reset-cache</span><br></pre></td></tr></table></figure><ul><li><code>--entry</code>：入口 js 文件</li><li><code>--bundle-output</code>：生成的 bundle 文件路径</li><li><code>--platform</code>：平台</li><li><code>--assets-dest</code>：图片资源的输出目录</li><li><code>--dev</code>：是否为开发版本，打正式版的安装包时我们将其赋值为 false</li><li><code>--reset-cache</code>：重置缓存，避免打包使用旧的缓存</li></ul><h3 id="按需加载原理"><a href="#按需加载原理" class="headerlink" title="按需加载原理"></a>按需加载原理</h3><p>前面我们提到 <code>packages/vant-react-native</code> 只有一个文件 <code>src/index.ts</code> 用来导出所有子包，现在我们添加一个新的包 Button，看上去就是这样：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> &#123; <span class="keyword">default</span> <span class="keyword">as</span> <span class="title class_">Icon</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@vant-react-native/icons&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> * <span class="keyword">from</span> <span class="string">&#x27;@vant-react-native/icons&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="keyword">default</span> <span class="keyword">as</span> <span class="title class_">Button</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@vant-react-native/icons&#x27;</span>;</span><br></pre></td></tr></table></figure><p>这种导出方式，用户只能通过 <code>import Button from &#39;@vant-react-native/button&#39;;</code> 或 <code>import Button from &#39;vant-react-native/lib/button&#39;;</code> 的方式手动实现按需加载，这不仅不方便开发者使用，从打包产物来说也增加了很多字节。那么问题来了，怎么样的组织形式才能满足按需加载呢？答案就在 babel-plugin-import 插件的文档中：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3d8bd23d28b0413b8b3da8119d32dd35~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>从图中我们看出 babel-plugin-import 插件是在编译阶段将引用指向了模块所在文件夹。用户使用时安装插件并做如下配置就完成了按需加载。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;plugins&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">  <span class="punctuation">[</span><span class="string">&quot;import&quot;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> libraryName<span class="punctuation">:</span> <span class="string">&quot;antd&quot;</span><span class="punctuation">,</span> style<span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span> <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p>依然没有银弹，插件做的工作只是代替了你的右手。知道了原理我们就可以按照文档要求的格式重新组织我们的 vant-react-native 包：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── CHANGELOG.md</span><br><span class="line">├── lib                    <span class="comment"># 上传到 NPM 的编译产物</span></span><br><span class="line">│   ├── button             <span class="comment"># 符合 babel-plugin-import 的默认配置要求</span></span><br><span class="line">│   │   ├── index.d.ts</span><br><span class="line">│   │   └── index.js</span><br><span class="line">│   ├── icon</span><br><span class="line">│   │   ├── index.d.ts</span><br><span class="line">│   │   └── index.js</span><br><span class="line">│   ├── index.d.ts</span><br><span class="line">│   └── index.js          <span class="comment"># export * from &#x27;./button&#x27;;</span></span><br><span class="line">├── package.json</span><br><span class="line">├── src                   <span class="comment"># 源码目录</span></span><br><span class="line">│   ├── button</span><br><span class="line">│   │   └── index.ts</span><br><span class="line">│   ├── icon</span><br><span class="line">│   │   └── index.ts</span><br><span class="line">│   └── index.ts</span><br><span class="line">└── tsconfig.json         <span class="comment"># 编译配置，将 ts 文件编译到 lib 文件夹下</span></span><br></pre></td></tr></table></figure><p><strong>vant-react-native&#x2F;src&#x2F;button&#x2F;index.ts：</strong></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&#x27;@vant-react-native/button&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Button</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Button</span> &#125;;</span><br></pre></td></tr></table></figure><p><strong>vant-react-native&#x2F;src&#x2F;icon&#x2F;index.ts：</strong></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&#x27;@vant-react-native/icons&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Icon</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Icon</span> &#125;;</span><br><span class="line"><span class="keyword">export</span> * <span class="keyword">from</span> <span class="string">&#x27;@vant-react-native/icons&#x27;</span>;</span><br></pre></td></tr></table></figure><p><strong>vant-react-native&#x2F;src&#x2F;index.ts：</strong></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> * <span class="keyword">from</span> <span class="string">&#x27;./icon&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> * <span class="keyword">from</span> <span class="string">&#x27;./button&#x27;</span>;</span><br></pre></td></tr></table></figure><p>然后项目中修改 babel.config.js：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">presets</span>: [<span class="string">&#x27;module:metro-react-native-babel-preset&#x27;</span>],</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    [<span class="string">&quot;import&quot;</span>, &#123;<span class="attr">libraryName</span>: <span class="string">&#x27;vant-react-native&#x27;</span>&#125;]</span><br><span class="line">  ],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="编写-Babel-插件？"><a href="#编写-Babel-插件？" class="headerlink" title="编写 Babel 插件？"></a>编写 Babel 插件？</h3><p>虽然通过修改主包的导出方式可以完成需求，但是却极大地增加了项目本身的复杂度。前面我们已经知道 babel-plugin-import 的原理是转换引用路径。那么我们是不是可以通过插件动态把 <code>import &#123;Button&#125; from &#39;vant-react-native&#39;</code> 转成 <code>import Button from &#39;@vant-react-native/button&#39;</code> 呢？答案是肯定的，下面是我基于 babel-plugin-import 的 <code>customName</code> 配置编写了一套配置并封装在 babel-plugin-import-vant 包中：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> camelCase <span class="keyword">from</span> <span class="string">&#x27;camelcase&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> (): <span class="built_in">any</span>[] =&gt; [</span><br><span class="line">  [</span><br><span class="line">    <span class="string">&#x27;import&#x27;</span>,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">libraryName</span>: <span class="string">&#x27;vant-react-native&#x27;</span>,</span><br><span class="line">      <span class="attr">customName</span>: <span class="function">(<span class="params">name: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (name === <span class="string">&#x27;icon&#x27;</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="string">&#x27;@vant-react-native/icons&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (name.<span class="title function_">match</span>(<span class="regexp">/^van-icon-/</span>)) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="string">`@vant-react-native/icons/lib/<span class="subst">$&#123;camelCase(name, &#123; pascalCase: <span class="literal">true</span> &#125;)&#125;</span>`</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`@vant-react-native/<span class="subst">$&#123;name&#125;</span>`</span>;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;vant-react-native&#x27;</span>,</span><br><span class="line">  ],</span><br><span class="line">  [</span><br><span class="line">    <span class="string">&#x27;import&#x27;</span>,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">libraryName</span>: <span class="string">&#x27;@vant-react-native/icons&#x27;</span>,</span><br><span class="line">      <span class="attr">customName</span>: <span class="function">(<span class="params">name: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`@vant-react-native/icons/lib/<span class="subst">$&#123;camelCase(name, &#123; pascalCase: <span class="literal">true</span> &#125;)&#125;</span>`</span>;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;@vant-react-native/icons&#x27;</span>,</span><br><span class="line">  ],</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>在项目的 <code>babel.config.js</code> 配置中添加 <code>plugins: [...require(&#39;babel-plugin-import-vant&#39;).default()]</code> 即可实现按需加载。</p><p>还有可以优化的地方吗？机智的你可能又发现我只是通过函数导出了一个配置而已，并不是真正的插件，所以未来我会定制一个 vant-react-native 自己的按需加载 babel 插件。</p><blockquote><p><code>name.match(/^van-icon-/)</code> 这个判断条件是因为 <code>@vant-react-native/icons</code> 包除了包含一个默认导出的 Icon 组件，还导出了很多单个图标组件，为了进一步减小打包体积，我们对这个子包也进行了按需加载处理。</p><p><strong>我们已经知道按需加载的原理是没有中间商赚差价直接和卖家谈</strong>，所以后面我们遇见类似的需求通过转换返回卖家地址即可。不需要破坏性地改项目结构。</p></blockquote><h3 id="成果展示"><a href="#成果展示" class="headerlink" title="成果展示"></a>成果展示</h3><table><thead><tr><th>初始包大小</th><th>未配置按需加载（引入 Button）</th><th>按需加载（引入 Button）</th><th>按需加载（引入 Icon）</th><th>按需加载（引入 VanIconAdd）</th></tr></thead><tbody><tr><td>723KB</td><td>1.8M</td><td>725KB</td><td>1.8M</td><td>1.22M</td></tr></tbody></table><p>之所以 Icon 包会大，是因为 react-native-svg 这个库大，所以不建议直接使用 Icon 组件，而是使用 VanIconAdd、VanIconEye 这种单独的图标组件，少了 593KB 还是挺香的。</p><h2 id="组件库文档"><a href="#组件库文档" class="headerlink" title="组件库文档"></a>组件库文档</h2><p>组件库文档比较重要的是有可以交互的 Demo 演示，我是 Dumi 的资深用户，借助 dumi-theme-mobile 和 <a href="https://github.com/youngjuning/umi-plugin-react-native">umi-plugin-react-native</a> 我们可以很好地满足 React Native 组件库文档的搭建。</p><h3 id="集成-Dumi-到项目中"><a href="#集成-Dumi-到项目中" class="headerlink" title="集成 Dumi 到项目中"></a>集成 Dumi 到项目中</h3><p><strong>安装依赖：</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yarn add dumi dumi-theme-mobile umi-plugin-react-native -D</span><br></pre></td></tr></table></figure><p><strong>配置文件：</strong></p><p>在项目根目录添加 <code>.umirc.ts</code></p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineConfig, <span class="title class_">IConfig</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;dumi&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&#x27;vant-react-native&#x27;</span>,</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&#x27;site&#x27;</span>,</span><br><span class="line">  <span class="attr">logo</span>: <span class="string">&#x27;https://img01.yzcdn.cn/vant/logo.png&#x27;</span>,</span><br><span class="line">  <span class="attr">favicon</span>: <span class="string">&#x27;https://img01.yzcdn.cn/vant/logo.png&#x27;</span>,</span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">includes</span>: [<span class="string">&#x27;docs&#x27;</span>, <span class="string">&#x27;packages/button&#x27;</span>, <span class="string">&#x27;packages/icons&#x27;</span>],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// more config: https://d.umijs.org/config</span></span><br><span class="line">&#125; <span class="keyword">as</span> <span class="title class_">IConfig</span>);</span><br></pre></td></tr></table></figure><p>值得一提的是，Dumi 是支持 Lerna 仓库的，它默认会以 <code>packages/[包名]/src</code> 为基础路径搜寻所有子包的 Markdown 文档并生成路由。通过 <code>resolve.includes</code> 可以配置 dumi 嗅探的文档目录，dumi 会尝试在配置的目录中递归寻找 markdown 文件。</p><p><strong>添加 NPM 脚本：</strong></p><blockquote><p>注意📢：由于实际依赖的是 packages 下的包，我们必须先编译所有的包，否则部署的时候会报 <code>This dependency was not found:</code> 的错误。</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;start:dumi&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dumi dev&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build:dumi&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lerna run build &amp;&amp; dumi build&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>忽略文件（.gitignore）：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># umi</span><br><span class="line">.umi</span><br><span class="line">.umi-production</span><br><span class="line">.env.local</span><br><span class="line">dist/</span><br></pre></td></tr></table></figure><h3 id="部署到-GitHub-Pages"><a href="#部署到-GitHub-Pages" class="headerlink" title="部署到 GitHub Pages"></a>部署到 GitHub Pages</h3><p>在根目录新建 <code>.github/workflows/gh-pages</code>：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">github</span> <span class="string">pages</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span> <span class="comment"># default branch</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-18.04</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">yarn</span> <span class="string">install</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">yarn</span> <span class="string">build:dumi</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">github_token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">publish_dir:</span> <span class="string">./dist</span></span><br></pre></td></tr></table></figure><h3 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h3><p>现在我们可以访问 <a href="https://youngjuning.js.org/vant-react-native/">https://youngjuning.js.org/vant-react-native/</a> 查看效果了：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9faf0889b6d64238922bb02c51cf02ff~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a11e9ce535c54f8bb038599533f0ef9a~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8bed86245d8f485894b0c5e3d9767e9c~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><h3 id="配置优化"><a href="#配置优化" class="headerlink" title="配置优化"></a>配置优化</h3><p>现在基于 dumi 的文档站点只是初始化，很多配置（.umirc.ts）可以优化，比如：</p><ol><li>基于 jsdeliver 配置 CDN 加速</li></ol><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> isProd = process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;production&#x27;</span>;</span><br><span class="line">...</span><br><span class="line"><span class="attr">publicPath</span>: isProd ? <span class="string">&#x27;https://cdn.jsdelivr.net/gh/youngjuning/vant-react-native@gh-pages/&#x27;</span>: <span class="string">&#x27;/&#x27;</span>,</span><br></pre></td></tr></table></figure><ol start="2"><li>增量发布和避免浏览器加载缓存</li></ol><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">hash</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><a href="https://www.umeng.com/web">友盟网站统计</a></li></ol><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">scripts</span>: [<span class="string">&#x27;https://s9.cnzz.com/z_stat.php?id=1280093214&amp;web_id=1280093214&#x27;</span>],</span><br><span class="line">  <span class="attr">styles</span>: [<span class="string">&#x27;a[title=站长统计] &#123; display: none; &#125;&#x27;</span>],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>配置 <code>exportStatic: &#123;&#125;</code> 将所有路由输出为 HTML 目录结构，以免刷新页面时 404。</li></ol><h3 id="Pull-Request-预发预览"><a href="#Pull-Request-预发预览" class="headerlink" title="Pull Request 预发预览"></a>Pull Request 预发预览</h3><p>考虑到后期社区会贡献代码和文档。在 pr 合进主分支之前，我们需要预览文档或组件。满足这一需求的是一个叫 surge.sh 的静态托管服务，surge 支持在命令行通过简单的命令免费发布 HTML、CSS 和 JS 文件到 web。</p><h4 id="申请-Surge-Token"><a href="#申请-Surge-Token" class="headerlink" title="申请 Surge Token"></a>申请 Surge Token</h4><p><strong>安装 surge cli：</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --global surge</span><br></pre></td></tr></table></figure><p><strong>注册 surge 账号：</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">suerge login</span><br></pre></td></tr></table></figure><p><strong>获取 token：</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">suerge token</span><br></pre></td></tr></table></figure><h4 id="配置-CI"><a href="#配置-CI" class="headerlink" title="配置 CI"></a>配置 CI</h4><p>由于 GitHub 的安全问题，surge-preview Action 插件无法使用，我们参考 dumi 官方的配置自定义了 CI，首先我们拷贝下图中的三个文件到项目中。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9e3d3e61ac1c4019ac393b2d1b2c5719~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>然后修改 <code>preview-build.yml</code> 中的 <code>build step</code>：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">- NODE_OPTIONS=&#x27;--max-old-space-size=4096&#x27; yarn build</span></span><br><span class="line"><span class="addition">+ NODE_OPTIONS=&#x27;--max-old-space-size=4096&#x27; PREVIEW_PR=true yarn build:dumi</span></span><br></pre></td></tr></table></figure><p>添加环境变量 <code>PREVIEW_PR=true</code> 是为了让 dumi 打包时识别出不是生产环境打包，<code>.umirc.ts</code> 需要相应修改为：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> isProd =</span><br><span class="line">  process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;production&#x27;</span> &amp;&amp; process.<span class="property">env</span>.<span class="property">PREVIEW_PR</span> !== <span class="string">&quot;true&quot;</span>;</span><br><span class="line">...</span><br><span class="line"><span class="attr">publicPath</span>: isProd ? <span class="string">&#x27;https://cdn.jsdelivr.net/gh/youngjuning/vant-react-native@gh-pages/&#x27;</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>再然后，修改 <code>preview-deploy.yml</code> 文件中的部署域名 <code>dumi-preview</code> 为 <code>vant-react-native-preview</code>。</p><p>最后我们把前面获取的 Surge Token 添加到仓库的 Secrets 即可。</p><h4 id="成果展示-1"><a href="#成果展示-1" class="headerlink" title="成果展示"></a>成果展示</h4><p><strong>正在部署 PR 预览状态：</strong></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/193ac9e16cca408383ca7ae2ec503613~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p><strong>部署成功状态：</strong></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1659de97aafd4f87a93993c35ef93195~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><p>访问 <a href="https://vant-react-native-preview-pr-1.surge.sh/">https://vant-react-native-preview-pr-1.surge.sh/</a> 即可验证文档的正确性✅。</p><h2 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h2><p>我在 <a href="https://juejin.cn/post/6937983077209604127">使用 Jest 和 Enzyme 进行 React Native 单元测试|技术点评</a> 一文中曾提交单元测试和文档一样，是保障程序最小单元质量的重要一环。诚然一个成熟的组件库是必然有单元测试的身影。本章就不展开讲单元测试了，主要讲 vant-react-native 是如何配置单元测试的。</p><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>jest、babel-jest、@types&#x2F;jest 这些依赖都已经安装了，我们需要安装的是 enzyme 这个基于 jest 的单元测试框架。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yarn add enzyme jest-enzyme enzyme-adapter-react-16 enzyme-to-json @types/enzyme react-native-mock-render -DW</span><br></pre></td></tr></table></figure><blockquote><p>Enzyme 是用于 React 的 JavaScript 测试实用程序，可以更轻松地测试 React 组件的输出。您还可以根据给定的输出进行操作，遍历并以某种方式模拟运行时。</p></blockquote><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p><strong>jest.config.js：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">preset</span>: <span class="string">&#x27;react-native&#x27;</span>,</span><br><span class="line">  <span class="attr">verbose</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">collectCoverage</span>: <span class="literal">true</span>, <span class="comment">// 生成测试覆盖率报告</span></span><br><span class="line">  <span class="attr">moduleNameMapper</span>: &#123;</span><br><span class="line">    <span class="comment">// for https://github.com/facebook/jest/issues/919</span></span><br><span class="line">    <span class="string">&#x27;^image![a-zA-Z0-9$_-]+$&#x27;</span>: <span class="string">&#x27;GlobalImageStub&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;^[@./a-zA-Z0-9$_-]+\\.(png|gif)$&#x27;</span>: <span class="string">&#x27;RelativeImageStub&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">setupFilesAfterEnv</span>: [<span class="string">&#x27;&lt;rootDir&gt;/jest.setup.js&#x27;</span>], <span class="comment">// 使用 Jest 运行安装文件以配置 Enzyme 和适配器（如下文jest.setup.js中所示），之前是setupTestFrameworkScriptFile，也可以使用setupFiles</span></span><br><span class="line">  <span class="attr">snapshotSerializers</span>: [<span class="string">&#x27;enzyme-to-json/serializer&#x27;</span>], <span class="comment">// 推荐使用序列化程序使用 enzyme-to-json，它的安装和使用非常简单，并允许您编写简洁的快照测试。</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>jest.setup.js：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;react-native&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Enzyme</span> <span class="keyword">from</span> <span class="string">&#x27;enzyme&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Adapter</span> <span class="keyword">from</span> <span class="string">&#x27;enzyme-adapter-react-16&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Enzyme</span>.<span class="title function_">configure</span>(&#123; <span class="attr">adapter</span>: <span class="keyword">new</span> <span class="title class_">Adapter</span>() &#125;);</span><br></pre></td></tr></table></figure><p><strong>一个简单的示例：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// packages/button/__test__/index.tsx</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; shallow &#125; <span class="keyword">from</span> <span class="string">&#x27;enzyme&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&#x27;../src/index&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">setup</span>(<span class="params">props = &#123;&#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> wrapper = <span class="title function_">shallow</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">Button</span> /&gt;</span></span>);</span><br><span class="line">  <span class="keyword">const</span> instance = wrapper.<span class="title function_">instance</span>();</span><br><span class="line">  <span class="keyword">return</span> &#123; wrapper, instance &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">describe</span>(<span class="string">&#x27;Button Component&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">it</span>(<span class="string">&#x27;renders correctly&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; wrapper &#125; = <span class="title function_">setup</span>();</span><br><span class="line">    <span class="title function_">expect</span>(wrapper).<span class="title function_">toMatchSnapshot</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>执行 <code>jest</code> 命令后可以查看覆盖率如下：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/358737fa32f549f4a9b06a9bcf8903d4~tplv-k3u1fbpfcp-watermark.image" alt="image.png"></p><h2 id="写给勇士"><a href="#写给勇士" class="headerlink" title="写给勇士"></a>写给勇士</h2><p>能写长文的不算勇士，能坚持看到这里的才是勇士。洛竹在此感谢您的阅读。然而组件库工程化这只是一个起点，如果本文反响好，组件库具体组件的设计实现、完整的 React Native 单元测试教程等等洛竹会在后续的文章中展开讲。</p><h2 id="推荐的-UI-库"><a href="#推荐的-UI-库" class="headerlink" title="推荐的 UI 库"></a>推荐的 UI 库</h2><p>当然了，vant-react-native 并不是你唯一的选择，下面的几个 UI 库都是很优秀的项目。在实现 vant-react-native 时我也多少借鉴了前人优秀的设计。</p><ul><li><a href="https://github.com/ant-design/ant-design-mobile-rn">antd-mobile-rn</a></li><li><a href="https://github.com/react-native-elements/react-native-elements">react-native-elements</a></li><li><a href="https://github.com/akveo/react-native-ui-kitten">react-native-ui-kitten</a></li><li><a href="https://github.com/wix/react-native-ui-lib">react-native-ui-lib</a></li><li><a href="https://zarm.design/">Zarm</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文为掘金社区首发签约文章，未获授权禁止转载&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;洛竹有一个朋友小黑最近在面试时被问到如何设计一个前端组件库。没啥经验的小黑回答了业务提取封装成库以及基于 antd 结合业务二次封装。最后小黑被 HR 以灵力不</summary>
      
    
    
    
    <category term="前端" scheme="https://youngjuning.js.org/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="React Native" scheme="https://youngjuning.js.org/tags/React-Native/"/>
    
    <category term="掘金" scheme="https://youngjuning.js.org/tags/%E6%8E%98%E9%87%91/"/>
    
    <category term="前端架构" scheme="https://youngjuning.js.org/tags/%E5%89%8D%E7%AB%AF%E6%9E%B6%E6%9E%84/"/>
    
    <category term="前端组件化" scheme="https://youngjuning.js.org/tags/%E5%89%8D%E7%AB%AF%E7%BB%84%E4%BB%B6%E5%8C%96/"/>
    
    <category term="前端工程化" scheme="https://youngjuning.js.org/tags/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/"/>
    
  </entry>
  
</feed>
